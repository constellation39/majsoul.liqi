# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import liqi_pb2 as liqi__pb2

GRPC_GENERATED_VERSION = '1.66.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in liqi_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class LobbyStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.fetchConnectionInfo = channel.unary_unary(
                '/lq.Lobby/fetchConnectionInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResConnectionInfo.FromString,
                _registered_method=True)
        self.fetchQueueInfo = channel.unary_unary(
                '/lq.Lobby/fetchQueueInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchQueueInfo.FromString,
                _registered_method=True)
        self.cancelQueue = channel.unary_unary(
                '/lq.Lobby/cancelQueue',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.openidCheck = channel.unary_unary(
                '/lq.Lobby/openidCheck',
                request_serializer=liqi__pb2.ReqOpenidCheck.SerializeToString,
                response_deserializer=liqi__pb2.ResOauth2Check.FromString,
                _registered_method=True)
        self.signup = channel.unary_unary(
                '/lq.Lobby/signup',
                request_serializer=liqi__pb2.ReqSignupAccount.SerializeToString,
                response_deserializer=liqi__pb2.ResSignupAccount.FromString,
                _registered_method=True)
        self.login = channel.unary_unary(
                '/lq.Lobby/login',
                request_serializer=liqi__pb2.ReqLogin.SerializeToString,
                response_deserializer=liqi__pb2.ResLogin.FromString,
                _registered_method=True)
        self.fetchInfo = channel.unary_unary(
                '/lq.Lobby/fetchInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchInfo.FromString,
                _registered_method=True)
        self.loginSuccess = channel.unary_unary(
                '/lq.Lobby/loginSuccess',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.emailLogin = channel.unary_unary(
                '/lq.Lobby/emailLogin',
                request_serializer=liqi__pb2.ReqEmailLogin.SerializeToString,
                response_deserializer=liqi__pb2.ResLogin.FromString,
                _registered_method=True)
        self.oauth2Auth = channel.unary_unary(
                '/lq.Lobby/oauth2Auth',
                request_serializer=liqi__pb2.ReqOauth2Auth.SerializeToString,
                response_deserializer=liqi__pb2.ResOauth2Auth.FromString,
                _registered_method=True)
        self.oauth2Check = channel.unary_unary(
                '/lq.Lobby/oauth2Check',
                request_serializer=liqi__pb2.ReqOauth2Check.SerializeToString,
                response_deserializer=liqi__pb2.ResOauth2Check.FromString,
                _registered_method=True)
        self.oauth2Signup = channel.unary_unary(
                '/lq.Lobby/oauth2Signup',
                request_serializer=liqi__pb2.ReqOauth2Signup.SerializeToString,
                response_deserializer=liqi__pb2.ResOauth2Signup.FromString,
                _registered_method=True)
        self.oauth2Login = channel.unary_unary(
                '/lq.Lobby/oauth2Login',
                request_serializer=liqi__pb2.ReqOauth2Login.SerializeToString,
                response_deserializer=liqi__pb2.ResLogin.FromString,
                _registered_method=True)
        self.dmmPreLogin = channel.unary_unary(
                '/lq.Lobby/dmmPreLogin',
                request_serializer=liqi__pb2.ReqDMMPreLogin.SerializeToString,
                response_deserializer=liqi__pb2.ResDMMPreLogin.FromString,
                _registered_method=True)
        self.createPhoneVerifyCode = channel.unary_unary(
                '/lq.Lobby/createPhoneVerifyCode',
                request_serializer=liqi__pb2.ReqCreatePhoneVerifyCode.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.createEmailVerifyCode = channel.unary_unary(
                '/lq.Lobby/createEmailVerifyCode',
                request_serializer=liqi__pb2.ReqCreateEmailVerifyCode.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.verfifyCodeForSecure = channel.unary_unary(
                '/lq.Lobby/verfifyCodeForSecure',
                request_serializer=liqi__pb2.ReqVerifyCodeForSecure.SerializeToString,
                response_deserializer=liqi__pb2.ResVerfiyCodeForSecure.FromString,
                _registered_method=True)
        self.bindPhoneNumber = channel.unary_unary(
                '/lq.Lobby/bindPhoneNumber',
                request_serializer=liqi__pb2.ReqBindPhoneNumber.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.unbindPhoneNumber = channel.unary_unary(
                '/lq.Lobby/unbindPhoneNumber',
                request_serializer=liqi__pb2.ReqUnbindPhoneNumber.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchPhoneLoginBind = channel.unary_unary(
                '/lq.Lobby/fetchPhoneLoginBind',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchPhoneLoginBind.FromString,
                _registered_method=True)
        self.createPhoneLoginBind = channel.unary_unary(
                '/lq.Lobby/createPhoneLoginBind',
                request_serializer=liqi__pb2.ReqCreatePhoneLoginBind.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.bindEmail = channel.unary_unary(
                '/lq.Lobby/bindEmail',
                request_serializer=liqi__pb2.ReqBindEmail.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.modifyPassword = channel.unary_unary(
                '/lq.Lobby/modifyPassword',
                request_serializer=liqi__pb2.ReqModifyPassword.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.bindAccount = channel.unary_unary(
                '/lq.Lobby/bindAccount',
                request_serializer=liqi__pb2.ReqBindAccount.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.logout = channel.unary_unary(
                '/lq.Lobby/logout',
                request_serializer=liqi__pb2.ReqLogout.SerializeToString,
                response_deserializer=liqi__pb2.ResLogout.FromString,
                _registered_method=True)
        self.heatbeat = channel.unary_unary(
                '/lq.Lobby/heatbeat',
                request_serializer=liqi__pb2.ReqHeatBeat.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.loginBeat = channel.unary_unary(
                '/lq.Lobby/loginBeat',
                request_serializer=liqi__pb2.ReqLoginBeat.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.createNickname = channel.unary_unary(
                '/lq.Lobby/createNickname',
                request_serializer=liqi__pb2.ReqCreateNickname.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.modifyNickname = channel.unary_unary(
                '/lq.Lobby/modifyNickname',
                request_serializer=liqi__pb2.ReqModifyNickname.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.modifyBirthday = channel.unary_unary(
                '/lq.Lobby/modifyBirthday',
                request_serializer=liqi__pb2.ReqModifyBirthday.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchRoom = channel.unary_unary(
                '/lq.Lobby/fetchRoom',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResSelfRoom.FromString,
                _registered_method=True)
        self.fetchGamingInfo = channel.unary_unary(
                '/lq.Lobby/fetchGamingInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchGamingInfo.FromString,
                _registered_method=True)
        self.createRoom = channel.unary_unary(
                '/lq.Lobby/createRoom',
                request_serializer=liqi__pb2.ReqCreateRoom.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateRoom.FromString,
                _registered_method=True)
        self.joinRoom = channel.unary_unary(
                '/lq.Lobby/joinRoom',
                request_serializer=liqi__pb2.ReqJoinRoom.SerializeToString,
                response_deserializer=liqi__pb2.ResJoinRoom.FromString,
                _registered_method=True)
        self.leaveRoom = channel.unary_unary(
                '/lq.Lobby/leaveRoom',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.readyPlay = channel.unary_unary(
                '/lq.Lobby/readyPlay',
                request_serializer=liqi__pb2.ReqRoomReady.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.dressingStatus = channel.unary_unary(
                '/lq.Lobby/dressingStatus',
                request_serializer=liqi__pb2.ReqRoomDressing.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.startRoom = channel.unary_unary(
                '/lq.Lobby/startRoom',
                request_serializer=liqi__pb2.ReqRoomStart.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.kickPlayer = channel.unary_unary(
                '/lq.Lobby/kickPlayer',
                request_serializer=liqi__pb2.ReqRoomKick.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.modifyRoom = channel.unary_unary(
                '/lq.Lobby/modifyRoom',
                request_serializer=liqi__pb2.ReqModifyRoom.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.matchGame = channel.unary_unary(
                '/lq.Lobby/matchGame',
                request_serializer=liqi__pb2.ReqJoinMatchQueue.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.cancelMatch = channel.unary_unary(
                '/lq.Lobby/cancelMatch',
                request_serializer=liqi__pb2.ReqCancelMatchQueue.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchAccountInfo = channel.unary_unary(
                '/lq.Lobby/fetchAccountInfo',
                request_serializer=liqi__pb2.ReqAccountInfo.SerializeToString,
                response_deserializer=liqi__pb2.ResAccountInfo.FromString,
                _registered_method=True)
        self.changeAvatar = channel.unary_unary(
                '/lq.Lobby/changeAvatar',
                request_serializer=liqi__pb2.ReqChangeAvatar.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.receiveVersionReward = channel.unary_unary(
                '/lq.Lobby/receiveVersionReward',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchAccountStatisticInfo = channel.unary_unary(
                '/lq.Lobby/fetchAccountStatisticInfo',
                request_serializer=liqi__pb2.ReqAccountStatisticInfo.SerializeToString,
                response_deserializer=liqi__pb2.ResAccountStatisticInfo.FromString,
                _registered_method=True)
        self.fetchAccountChallengeRankInfo = channel.unary_unary(
                '/lq.Lobby/fetchAccountChallengeRankInfo',
                request_serializer=liqi__pb2.ReqAccountInfo.SerializeToString,
                response_deserializer=liqi__pb2.ResAccountChallengeRankInfo.FromString,
                _registered_method=True)
        self.fetchAccountCharacterInfo = channel.unary_unary(
                '/lq.Lobby/fetchAccountCharacterInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResAccountCharacterInfo.FromString,
                _registered_method=True)
        self.shopPurchase = channel.unary_unary(
                '/lq.Lobby/shopPurchase',
                request_serializer=liqi__pb2.ReqShopPurchase.SerializeToString,
                response_deserializer=liqi__pb2.ResShopPurchase.FromString,
                _registered_method=True)
        self.fetchGameRecord = channel.unary_unary(
                '/lq.Lobby/fetchGameRecord',
                request_serializer=liqi__pb2.ReqGameRecord.SerializeToString,
                response_deserializer=liqi__pb2.ResGameRecord.FromString,
                _registered_method=True)
        self.readGameRecord = channel.unary_unary(
                '/lq.Lobby/readGameRecord',
                request_serializer=liqi__pb2.ReqGameRecord.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchGameRecordList = channel.unary_unary(
                '/lq.Lobby/fetchGameRecordList',
                request_serializer=liqi__pb2.ReqGameRecordList.SerializeToString,
                response_deserializer=liqi__pb2.ResGameRecordList.FromString,
                _registered_method=True)
        self.fetchCollectedGameRecordList = channel.unary_unary(
                '/lq.Lobby/fetchCollectedGameRecordList',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCollectedGameRecordList.FromString,
                _registered_method=True)
        self.fetchGameRecordsDetail = channel.unary_unary(
                '/lq.Lobby/fetchGameRecordsDetail',
                request_serializer=liqi__pb2.ReqGameRecordsDetail.SerializeToString,
                response_deserializer=liqi__pb2.ResGameRecordsDetail.FromString,
                _registered_method=True)
        self.addCollectedGameRecord = channel.unary_unary(
                '/lq.Lobby/addCollectedGameRecord',
                request_serializer=liqi__pb2.ReqAddCollectedGameRecord.SerializeToString,
                response_deserializer=liqi__pb2.ResAddCollectedGameRecord.FromString,
                _registered_method=True)
        self.removeCollectedGameRecord = channel.unary_unary(
                '/lq.Lobby/removeCollectedGameRecord',
                request_serializer=liqi__pb2.ReqRemoveCollectedGameRecord.SerializeToString,
                response_deserializer=liqi__pb2.ResRemoveCollectedGameRecord.FromString,
                _registered_method=True)
        self.changeCollectedGameRecordRemarks = channel.unary_unary(
                '/lq.Lobby/changeCollectedGameRecordRemarks',
                request_serializer=liqi__pb2.ReqChangeCollectedGameRecordRemarks.SerializeToString,
                response_deserializer=liqi__pb2.ResChangeCollectedGameRecordRemarks.FromString,
                _registered_method=True)
        self.fetchLevelLeaderboard = channel.unary_unary(
                '/lq.Lobby/fetchLevelLeaderboard',
                request_serializer=liqi__pb2.ReqLevelLeaderboard.SerializeToString,
                response_deserializer=liqi__pb2.ResLevelLeaderboard.FromString,
                _registered_method=True)
        self.fetchChallengeLeaderboard = channel.unary_unary(
                '/lq.Lobby/fetchChallengeLeaderboard',
                request_serializer=liqi__pb2.ReqChallangeLeaderboard.SerializeToString,
                response_deserializer=liqi__pb2.ResChallengeLeaderboard.FromString,
                _registered_method=True)
        self.fetchMutiChallengeLevel = channel.unary_unary(
                '/lq.Lobby/fetchMutiChallengeLevel',
                request_serializer=liqi__pb2.ReqMutiChallengeLevel.SerializeToString,
                response_deserializer=liqi__pb2.ResMutiChallengeLevel.FromString,
                _registered_method=True)
        self.fetchMultiAccountBrief = channel.unary_unary(
                '/lq.Lobby/fetchMultiAccountBrief',
                request_serializer=liqi__pb2.ReqMultiAccountId.SerializeToString,
                response_deserializer=liqi__pb2.ResMultiAccountBrief.FromString,
                _registered_method=True)
        self.fetchFriendList = channel.unary_unary(
                '/lq.Lobby/fetchFriendList',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFriendList.FromString,
                _registered_method=True)
        self.fetchFriendApplyList = channel.unary_unary(
                '/lq.Lobby/fetchFriendApplyList',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFriendApplyList.FromString,
                _registered_method=True)
        self.applyFriend = channel.unary_unary(
                '/lq.Lobby/applyFriend',
                request_serializer=liqi__pb2.ReqApplyFriend.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.handleFriendApply = channel.unary_unary(
                '/lq.Lobby/handleFriendApply',
                request_serializer=liqi__pb2.ReqHandleFriendApply.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.removeFriend = channel.unary_unary(
                '/lq.Lobby/removeFriend',
                request_serializer=liqi__pb2.ReqRemoveFriend.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.searchAccountById = channel.unary_unary(
                '/lq.Lobby/searchAccountById',
                request_serializer=liqi__pb2.ReqSearchAccountById.SerializeToString,
                response_deserializer=liqi__pb2.ResSearchAccountById.FromString,
                _registered_method=True)
        self.searchAccountByPattern = channel.unary_unary(
                '/lq.Lobby/searchAccountByPattern',
                request_serializer=liqi__pb2.ReqSearchAccountByPattern.SerializeToString,
                response_deserializer=liqi__pb2.ResSearchAccountByPattern.FromString,
                _registered_method=True)
        self.fetchAccountState = channel.unary_unary(
                '/lq.Lobby/fetchAccountState',
                request_serializer=liqi__pb2.ReqAccountList.SerializeToString,
                response_deserializer=liqi__pb2.ResAccountStates.FromString,
                _registered_method=True)
        self.fetchBagInfo = channel.unary_unary(
                '/lq.Lobby/fetchBagInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResBagInfo.FromString,
                _registered_method=True)
        self.useBagItem = channel.unary_unary(
                '/lq.Lobby/useBagItem',
                request_serializer=liqi__pb2.ReqUseBagItem.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.openManualItem = channel.unary_unary(
                '/lq.Lobby/openManualItem',
                request_serializer=liqi__pb2.ReqOpenManualItem.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.openRandomRewardItem = channel.unary_unary(
                '/lq.Lobby/openRandomRewardItem',
                request_serializer=liqi__pb2.ReqOpenRandomRewardItem.SerializeToString,
                response_deserializer=liqi__pb2.ResOpenRandomRewardItem.FromString,
                _registered_method=True)
        self.openAllRewardItem = channel.unary_unary(
                '/lq.Lobby/openAllRewardItem',
                request_serializer=liqi__pb2.ReqOpenAllRewardItem.SerializeToString,
                response_deserializer=liqi__pb2.ResOpenAllRewardItem.FromString,
                _registered_method=True)
        self.composeShard = channel.unary_unary(
                '/lq.Lobby/composeShard',
                request_serializer=liqi__pb2.ReqComposeShard.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchAnnouncement = channel.unary_unary(
                '/lq.Lobby/fetchAnnouncement',
                request_serializer=liqi__pb2.ReqFetchAnnouncement.SerializeToString,
                response_deserializer=liqi__pb2.ResAnnouncement.FromString,
                _registered_method=True)
        self.readAnnouncement = channel.unary_unary(
                '/lq.Lobby/readAnnouncement',
                request_serializer=liqi__pb2.ReqReadAnnouncement.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchMailInfo = channel.unary_unary(
                '/lq.Lobby/fetchMailInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResMailInfo.FromString,
                _registered_method=True)
        self.readMail = channel.unary_unary(
                '/lq.Lobby/readMail',
                request_serializer=liqi__pb2.ReqReadMail.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.deleteMail = channel.unary_unary(
                '/lq.Lobby/deleteMail',
                request_serializer=liqi__pb2.ReqDeleteMail.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.takeAttachmentFromMail = channel.unary_unary(
                '/lq.Lobby/takeAttachmentFromMail',
                request_serializer=liqi__pb2.ReqTakeAttachment.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.receiveAchievementReward = channel.unary_unary(
                '/lq.Lobby/receiveAchievementReward',
                request_serializer=liqi__pb2.ReqReceiveAchievementReward.SerializeToString,
                response_deserializer=liqi__pb2.ResReceiveAchievementReward.FromString,
                _registered_method=True)
        self.receiveAchievementGroupReward = channel.unary_unary(
                '/lq.Lobby/receiveAchievementGroupReward',
                request_serializer=liqi__pb2.ReqReceiveAchievementGroupReward.SerializeToString,
                response_deserializer=liqi__pb2.ResReceiveAchievementGroupReward.FromString,
                _registered_method=True)
        self.fetchAchievementRate = channel.unary_unary(
                '/lq.Lobby/fetchAchievementRate',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchAchievementRate.FromString,
                _registered_method=True)
        self.fetchAchievement = channel.unary_unary(
                '/lq.Lobby/fetchAchievement',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResAchievement.FromString,
                _registered_method=True)
        self.buyShiLian = channel.unary_unary(
                '/lq.Lobby/buyShiLian',
                request_serializer=liqi__pb2.ReqBuyShiLian.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.matchShiLian = channel.unary_unary(
                '/lq.Lobby/matchShiLian',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.goNextShiLian = channel.unary_unary(
                '/lq.Lobby/goNextShiLian',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.updateClientValue = channel.unary_unary(
                '/lq.Lobby/updateClientValue',
                request_serializer=liqi__pb2.ReqUpdateClientValue.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchClientValue = channel.unary_unary(
                '/lq.Lobby/fetchClientValue',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResClientValue.FromString,
                _registered_method=True)
        self.clientMessage = channel.unary_unary(
                '/lq.Lobby/clientMessage',
                request_serializer=liqi__pb2.ReqClientMessage.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchCurrentMatchInfo = channel.unary_unary(
                '/lq.Lobby/fetchCurrentMatchInfo',
                request_serializer=liqi__pb2.ReqCurrentMatchInfo.SerializeToString,
                response_deserializer=liqi__pb2.ResCurrentMatchInfo.FromString,
                _registered_method=True)
        self.userComplain = channel.unary_unary(
                '/lq.Lobby/userComplain',
                request_serializer=liqi__pb2.ReqUserComplain.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchReviveCoinInfo = channel.unary_unary(
                '/lq.Lobby/fetchReviveCoinInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResReviveCoinInfo.FromString,
                _registered_method=True)
        self.gainReviveCoin = channel.unary_unary(
                '/lq.Lobby/gainReviveCoin',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchDailyTask = channel.unary_unary(
                '/lq.Lobby/fetchDailyTask',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResDailyTask.FromString,
                _registered_method=True)
        self.refreshDailyTask = channel.unary_unary(
                '/lq.Lobby/refreshDailyTask',
                request_serializer=liqi__pb2.ReqRefreshDailyTask.SerializeToString,
                response_deserializer=liqi__pb2.ResRefreshDailyTask.FromString,
                _registered_method=True)
        self.useGiftCode = channel.unary_unary(
                '/lq.Lobby/useGiftCode',
                request_serializer=liqi__pb2.ReqUseGiftCode.SerializeToString,
                response_deserializer=liqi__pb2.ResUseGiftCode.FromString,
                _registered_method=True)
        self.useSpecialGiftCode = channel.unary_unary(
                '/lq.Lobby/useSpecialGiftCode',
                request_serializer=liqi__pb2.ReqUseGiftCode.SerializeToString,
                response_deserializer=liqi__pb2.ResUseSpecialGiftCode.FromString,
                _registered_method=True)
        self.fetchTitleList = channel.unary_unary(
                '/lq.Lobby/fetchTitleList',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResTitleList.FromString,
                _registered_method=True)
        self.useTitle = channel.unary_unary(
                '/lq.Lobby/useTitle',
                request_serializer=liqi__pb2.ReqUseTitle.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.sendClientMessage = channel.unary_unary(
                '/lq.Lobby/sendClientMessage',
                request_serializer=liqi__pb2.ReqSendClientMessage.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchGameLiveInfo = channel.unary_unary(
                '/lq.Lobby/fetchGameLiveInfo',
                request_serializer=liqi__pb2.ReqGameLiveInfo.SerializeToString,
                response_deserializer=liqi__pb2.ResGameLiveInfo.FromString,
                _registered_method=True)
        self.fetchGameLiveLeftSegment = channel.unary_unary(
                '/lq.Lobby/fetchGameLiveLeftSegment',
                request_serializer=liqi__pb2.ReqGameLiveLeftSegment.SerializeToString,
                response_deserializer=liqi__pb2.ResGameLiveLeftSegment.FromString,
                _registered_method=True)
        self.fetchGameLiveList = channel.unary_unary(
                '/lq.Lobby/fetchGameLiveList',
                request_serializer=liqi__pb2.ReqGameLiveList.SerializeToString,
                response_deserializer=liqi__pb2.ResGameLiveList.FromString,
                _registered_method=True)
        self.fetchCommentSetting = channel.unary_unary(
                '/lq.Lobby/fetchCommentSetting',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommentSetting.FromString,
                _registered_method=True)
        self.updateCommentSetting = channel.unary_unary(
                '/lq.Lobby/updateCommentSetting',
                request_serializer=liqi__pb2.ReqUpdateCommentSetting.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchCommentList = channel.unary_unary(
                '/lq.Lobby/fetchCommentList',
                request_serializer=liqi__pb2.ReqFetchCommentList.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchCommentList.FromString,
                _registered_method=True)
        self.fetchCommentContent = channel.unary_unary(
                '/lq.Lobby/fetchCommentContent',
                request_serializer=liqi__pb2.ReqFetchCommentContent.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchCommentContent.FromString,
                _registered_method=True)
        self.leaveComment = channel.unary_unary(
                '/lq.Lobby/leaveComment',
                request_serializer=liqi__pb2.ReqLeaveComment.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.deleteComment = channel.unary_unary(
                '/lq.Lobby/deleteComment',
                request_serializer=liqi__pb2.ReqDeleteComment.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.updateReadComment = channel.unary_unary(
                '/lq.Lobby/updateReadComment',
                request_serializer=liqi__pb2.ReqUpdateReadComment.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchRollingNotice = channel.unary_unary(
                '/lq.Lobby/fetchRollingNotice',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ReqRollingNotice.FromString,
                _registered_method=True)
        self.fetchServerTime = channel.unary_unary(
                '/lq.Lobby/fetchServerTime',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResServerTime.FromString,
                _registered_method=True)
        self.fetchPlatformProducts = channel.unary_unary(
                '/lq.Lobby/fetchPlatformProducts',
                request_serializer=liqi__pb2.ReqPlatformBillingProducts.SerializeToString,
                response_deserializer=liqi__pb2.ResPlatformBillingProducts.FromString,
                _registered_method=True)
        self.cancelGooglePlayOrder = channel.unary_unary(
                '/lq.Lobby/cancelGooglePlayOrder',
                request_serializer=liqi__pb2.ReqCancelGooglePlayOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.openChest = channel.unary_unary(
                '/lq.Lobby/openChest',
                request_serializer=liqi__pb2.ReqOpenChest.SerializeToString,
                response_deserializer=liqi__pb2.ResOpenChest.FromString,
                _registered_method=True)
        self.buyFromChestShop = channel.unary_unary(
                '/lq.Lobby/buyFromChestShop',
                request_serializer=liqi__pb2.ReqBuyFromChestShop.SerializeToString,
                response_deserializer=liqi__pb2.ResBuyFromChestShop.FromString,
                _registered_method=True)
        self.fetchDailySignInInfo = channel.unary_unary(
                '/lq.Lobby/fetchDailySignInInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResDailySignInInfo.FromString,
                _registered_method=True)
        self.doDailySignIn = channel.unary_unary(
                '/lq.Lobby/doDailySignIn',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.doActivitySignIn = channel.unary_unary(
                '/lq.Lobby/doActivitySignIn',
                request_serializer=liqi__pb2.ReqDoActivitySignIn.SerializeToString,
                response_deserializer=liqi__pb2.ResDoActivitySignIn.FromString,
                _registered_method=True)
        self.fetchCharacterInfo = channel.unary_unary(
                '/lq.Lobby/fetchCharacterInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCharacterInfo.FromString,
                _registered_method=True)
        self.updateCharacterSort = channel.unary_unary(
                '/lq.Lobby/updateCharacterSort',
                request_serializer=liqi__pb2.ReqUpdateCharacterSort.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.changeMainCharacter = channel.unary_unary(
                '/lq.Lobby/changeMainCharacter',
                request_serializer=liqi__pb2.ReqChangeMainCharacter.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.changeCharacterSkin = channel.unary_unary(
                '/lq.Lobby/changeCharacterSkin',
                request_serializer=liqi__pb2.ReqChangeCharacterSkin.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.changeCharacterView = channel.unary_unary(
                '/lq.Lobby/changeCharacterView',
                request_serializer=liqi__pb2.ReqChangeCharacterView.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.setHiddenCharacter = channel.unary_unary(
                '/lq.Lobby/setHiddenCharacter',
                request_serializer=liqi__pb2.ReqSetHiddenCharacter.SerializeToString,
                response_deserializer=liqi__pb2.ResSetHiddenCharacter.FromString,
                _registered_method=True)
        self.sendGiftToCharacter = channel.unary_unary(
                '/lq.Lobby/sendGiftToCharacter',
                request_serializer=liqi__pb2.ReqSendGiftToCharacter.SerializeToString,
                response_deserializer=liqi__pb2.ResSendGiftToCharacter.FromString,
                _registered_method=True)
        self.sellItem = channel.unary_unary(
                '/lq.Lobby/sellItem',
                request_serializer=liqi__pb2.ReqSellItem.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchCommonView = channel.unary_unary(
                '/lq.Lobby/fetchCommonView',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommonView.FromString,
                _registered_method=True)
        self.changeCommonView = channel.unary_unary(
                '/lq.Lobby/changeCommonView',
                request_serializer=liqi__pb2.ReqChangeCommonView.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.saveCommonViews = channel.unary_unary(
                '/lq.Lobby/saveCommonViews',
                request_serializer=liqi__pb2.ReqSaveCommonViews.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchCommonViews = channel.unary_unary(
                '/lq.Lobby/fetchCommonViews',
                request_serializer=liqi__pb2.ReqCommonViews.SerializeToString,
                response_deserializer=liqi__pb2.ResCommonViews.FromString,
                _registered_method=True)
        self.fetchAllCommonViews = channel.unary_unary(
                '/lq.Lobby/fetchAllCommonViews',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResAllcommonViews.FromString,
                _registered_method=True)
        self.useCommonView = channel.unary_unary(
                '/lq.Lobby/useCommonView',
                request_serializer=liqi__pb2.ReqUseCommonView.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.upgradeCharacter = channel.unary_unary(
                '/lq.Lobby/upgradeCharacter',
                request_serializer=liqi__pb2.ReqUpgradeCharacter.SerializeToString,
                response_deserializer=liqi__pb2.ResUpgradeCharacter.FromString,
                _registered_method=True)
        self.addFinishedEnding = channel.unary_unary(
                '/lq.Lobby/addFinishedEnding',
                request_serializer=liqi__pb2.ReqFinishedEnding.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.receiveEndingReward = channel.unary_unary(
                '/lq.Lobby/receiveEndingReward',
                request_serializer=liqi__pb2.ReqFinishedEnding.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.gameMasterCommand = channel.unary_unary(
                '/lq.Lobby/gameMasterCommand',
                request_serializer=liqi__pb2.ReqGMCommand.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchShopInfo = channel.unary_unary(
                '/lq.Lobby/fetchShopInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResShopInfo.FromString,
                _registered_method=True)
        self.buyFromShop = channel.unary_unary(
                '/lq.Lobby/buyFromShop',
                request_serializer=liqi__pb2.ReqBuyFromShop.SerializeToString,
                response_deserializer=liqi__pb2.ResBuyFromShop.FromString,
                _registered_method=True)
        self.buyFromZHP = channel.unary_unary(
                '/lq.Lobby/buyFromZHP',
                request_serializer=liqi__pb2.ReqBuyFromZHP.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.refreshZHPShop = channel.unary_unary(
                '/lq.Lobby/refreshZHPShop',
                request_serializer=liqi__pb2.ReqReshZHPShop.SerializeToString,
                response_deserializer=liqi__pb2.ResRefreshZHPShop.FromString,
                _registered_method=True)
        self.fetchMonthTicketInfo = channel.unary_unary(
                '/lq.Lobby/fetchMonthTicketInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResMonthTicketInfo.FromString,
                _registered_method=True)
        self.payMonthTicket = channel.unary_unary(
                '/lq.Lobby/payMonthTicket',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResPayMonthTicket.FromString,
                _registered_method=True)
        self.exchangeCurrency = channel.unary_unary(
                '/lq.Lobby/exchangeCurrency',
                request_serializer=liqi__pb2.ReqExchangeCurrency.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.exchangeChestStone = channel.unary_unary(
                '/lq.Lobby/exchangeChestStone',
                request_serializer=liqi__pb2.ReqExchangeCurrency.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.exchangeDiamond = channel.unary_unary(
                '/lq.Lobby/exchangeDiamond',
                request_serializer=liqi__pb2.ReqExchangeCurrency.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchServerSettings = channel.unary_unary(
                '/lq.Lobby/fetchServerSettings',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResServerSettings.FromString,
                _registered_method=True)
        self.fetchAccountSettings = channel.unary_unary(
                '/lq.Lobby/fetchAccountSettings',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResAccountSettings.FromString,
                _registered_method=True)
        self.updateAccountSettings = channel.unary_unary(
                '/lq.Lobby/updateAccountSettings',
                request_serializer=liqi__pb2.ReqUpdateAccountSettings.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchModNicknameTime = channel.unary_unary(
                '/lq.Lobby/fetchModNicknameTime',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResModNicknameTime.FromString,
                _registered_method=True)
        self.createWechatNativeOrder = channel.unary_unary(
                '/lq.Lobby/createWechatNativeOrder',
                request_serializer=liqi__pb2.ReqCreateWechatNativeOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateWechatNativeOrder.FromString,
                _registered_method=True)
        self.createWechatAppOrder = channel.unary_unary(
                '/lq.Lobby/createWechatAppOrder',
                request_serializer=liqi__pb2.ReqCreateWechatAppOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateWechatAppOrder.FromString,
                _registered_method=True)
        self.createAlipayOrder = channel.unary_unary(
                '/lq.Lobby/createAlipayOrder',
                request_serializer=liqi__pb2.ReqCreateAlipayOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateAlipayOrder.FromString,
                _registered_method=True)
        self.createAlipayScanOrder = channel.unary_unary(
                '/lq.Lobby/createAlipayScanOrder',
                request_serializer=liqi__pb2.ReqCreateAlipayScanOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateAlipayScanOrder.FromString,
                _registered_method=True)
        self.createAlipayAppOrder = channel.unary_unary(
                '/lq.Lobby/createAlipayAppOrder',
                request_serializer=liqi__pb2.ReqCreateAlipayAppOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateAlipayAppOrder.FromString,
                _registered_method=True)
        self.createJPCreditCardOrder = channel.unary_unary(
                '/lq.Lobby/createJPCreditCardOrder',
                request_serializer=liqi__pb2.ReqCreateJPCreditCardOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateJPCreditCardOrder.FromString,
                _registered_method=True)
        self.createJPPaypalOrder = channel.unary_unary(
                '/lq.Lobby/createJPPaypalOrder',
                request_serializer=liqi__pb2.ReqCreateJPPaypalOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateJPPaypalOrder.FromString,
                _registered_method=True)
        self.createJPAuOrder = channel.unary_unary(
                '/lq.Lobby/createJPAuOrder',
                request_serializer=liqi__pb2.ReqCreateJPAuOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateJPAuOrder.FromString,
                _registered_method=True)
        self.createJPDocomoOrder = channel.unary_unary(
                '/lq.Lobby/createJPDocomoOrder',
                request_serializer=liqi__pb2.ReqCreateJPDocomoOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateJPDocomoOrder.FromString,
                _registered_method=True)
        self.createJPWebMoneyOrder = channel.unary_unary(
                '/lq.Lobby/createJPWebMoneyOrder',
                request_serializer=liqi__pb2.ReqCreateJPWebMoneyOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateJPWebMoneyOrder.FromString,
                _registered_method=True)
        self.createJPSoftbankOrder = channel.unary_unary(
                '/lq.Lobby/createJPSoftbankOrder',
                request_serializer=liqi__pb2.ReqCreateJPSoftbankOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateJPSoftbankOrder.FromString,
                _registered_method=True)
        self.createJPPayPayOrder = channel.unary_unary(
                '/lq.Lobby/createJPPayPayOrder',
                request_serializer=liqi__pb2.ReqCreateJPPayPayOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateJPPayPayOrder.FromString,
                _registered_method=True)
        self.fetchJPCommonCreditCardOrder = channel.unary_unary(
                '/lq.Lobby/fetchJPCommonCreditCardOrder',
                request_serializer=liqi__pb2.ReqFetchJPCommonCreditCardOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchJPCommonCreditCardOrder.FromString,
                _registered_method=True)
        self.createJPGMOOrder = channel.unary_unary(
                '/lq.Lobby/createJPGMOOrder',
                request_serializer=liqi__pb2.ReqCreateJPGMOOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateJPGMOOrder.FromString,
                _registered_method=True)
        self.createENPaypalOrder = channel.unary_unary(
                '/lq.Lobby/createENPaypalOrder',
                request_serializer=liqi__pb2.ReqCreateENPaypalOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateENPaypalOrder.FromString,
                _registered_method=True)
        self.createENMasterCardOrder = channel.unary_unary(
                '/lq.Lobby/createENMasterCardOrder',
                request_serializer=liqi__pb2.ReqCreateENMasterCardOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateENMasterCardOrder.FromString,
                _registered_method=True)
        self.createENVisaOrder = channel.unary_unary(
                '/lq.Lobby/createENVisaOrder',
                request_serializer=liqi__pb2.ReqCreateENVisaOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateENVisaOrder.FromString,
                _registered_method=True)
        self.createENJCBOrder = channel.unary_unary(
                '/lq.Lobby/createENJCBOrder',
                request_serializer=liqi__pb2.ReqCreateENJCBOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateENJCBOrder.FromString,
                _registered_method=True)
        self.createENAlipayOrder = channel.unary_unary(
                '/lq.Lobby/createENAlipayOrder',
                request_serializer=liqi__pb2.ReqCreateENAlipayOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateENAlipayOrder.FromString,
                _registered_method=True)
        self.createKRPaypalOrder = channel.unary_unary(
                '/lq.Lobby/createKRPaypalOrder',
                request_serializer=liqi__pb2.ReqCreateKRPaypalOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateKRPaypalOrder.FromString,
                _registered_method=True)
        self.createKRMasterCardOrder = channel.unary_unary(
                '/lq.Lobby/createKRMasterCardOrder',
                request_serializer=liqi__pb2.ReqCreateKRMasterCardOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateKRMasterCardOrder.FromString,
                _registered_method=True)
        self.createKRVisaOrder = channel.unary_unary(
                '/lq.Lobby/createKRVisaOrder',
                request_serializer=liqi__pb2.ReqCreateKRVisaOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateKRVisaOrder.FromString,
                _registered_method=True)
        self.createKRJCBOrder = channel.unary_unary(
                '/lq.Lobby/createKRJCBOrder',
                request_serializer=liqi__pb2.ReqCreateKRJCBOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateKRJCBOrder.FromString,
                _registered_method=True)
        self.createKRAlipayOrder = channel.unary_unary(
                '/lq.Lobby/createKRAlipayOrder',
                request_serializer=liqi__pb2.ReqCreateKRAlipayOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateKRAlipayOrder.FromString,
                _registered_method=True)
        self.createDMMOrder = channel.unary_unary(
                '/lq.Lobby/createDMMOrder',
                request_serializer=liqi__pb2.ReqCreateDMMOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateDmmOrder.FromString,
                _registered_method=True)
        self.createIAPOrder = channel.unary_unary(
                '/lq.Lobby/createIAPOrder',
                request_serializer=liqi__pb2.ReqCreateIAPOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateIAPOrder.FromString,
                _registered_method=True)
        self.createSteamOrder = channel.unary_unary(
                '/lq.Lobby/createSteamOrder',
                request_serializer=liqi__pb2.ReqCreateSteamOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateSteamOrder.FromString,
                _registered_method=True)
        self.verifySteamOrder = channel.unary_unary(
                '/lq.Lobby/verifySteamOrder',
                request_serializer=liqi__pb2.ReqVerifySteamOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.createMyCardAndroidOrder = channel.unary_unary(
                '/lq.Lobby/createMyCardAndroidOrder',
                request_serializer=liqi__pb2.ReqCreateMyCardOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateMyCardOrder.FromString,
                _registered_method=True)
        self.createMyCardWebOrder = channel.unary_unary(
                '/lq.Lobby/createMyCardWebOrder',
                request_serializer=liqi__pb2.ReqCreateMyCardOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateMyCardOrder.FromString,
                _registered_method=True)
        self.createPaypalOrder = channel.unary_unary(
                '/lq.Lobby/createPaypalOrder',
                request_serializer=liqi__pb2.ReqCreatePaypalOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreatePaypalOrder.FromString,
                _registered_method=True)
        self.createXsollaOrder = channel.unary_unary(
                '/lq.Lobby/createXsollaOrder',
                request_serializer=liqi__pb2.ReqCreateXsollaOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateXsollaOrder.FromString,
                _registered_method=True)
        self.verifyMyCardOrder = channel.unary_unary(
                '/lq.Lobby/verifyMyCardOrder',
                request_serializer=liqi__pb2.ReqVerifyMyCardOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.verificationIAPOrder = channel.unary_unary(
                '/lq.Lobby/verificationIAPOrder',
                request_serializer=liqi__pb2.ReqVerificationIAPOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResVerificationIAPOrder.FromString,
                _registered_method=True)
        self.createYostarSDKOrder = channel.unary_unary(
                '/lq.Lobby/createYostarSDKOrder',
                request_serializer=liqi__pb2.ReqCreateYostarOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateYostarOrder.FromString,
                _registered_method=True)
        self.createBillingOrder = channel.unary_unary(
                '/lq.Lobby/createBillingOrder',
                request_serializer=liqi__pb2.ReqCreateBillingOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateBillingOrder.FromString,
                _registered_method=True)
        self.solveGooglePlayOrder = channel.unary_unary(
                '/lq.Lobby/solveGooglePlayOrder',
                request_serializer=liqi__pb2.ReqSolveGooglePlayOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.solveGooglePayOrderV3 = channel.unary_unary(
                '/lq.Lobby/solveGooglePayOrderV3',
                request_serializer=liqi__pb2.ReqSolveGooglePlayOrderV3.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.deliverAA32Order = channel.unary_unary(
                '/lq.Lobby/deliverAA32Order',
                request_serializer=liqi__pb2.ReqDeliverAA32Order.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchMisc = channel.unary_unary(
                '/lq.Lobby/fetchMisc',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResMisc.FromString,
                _registered_method=True)
        self.modifySignature = channel.unary_unary(
                '/lq.Lobby/modifySignature',
                request_serializer=liqi__pb2.ReqModifySignature.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchIDCardInfo = channel.unary_unary(
                '/lq.Lobby/fetchIDCardInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResIDCardInfo.FromString,
                _registered_method=True)
        self.updateIDCardInfo = channel.unary_unary(
                '/lq.Lobby/updateIDCardInfo',
                request_serializer=liqi__pb2.ReqUpdateIDCardInfo.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchVipReward = channel.unary_unary(
                '/lq.Lobby/fetchVipReward',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResVipReward.FromString,
                _registered_method=True)
        self.gainVipReward = channel.unary_unary(
                '/lq.Lobby/gainVipReward',
                request_serializer=liqi__pb2.ReqGainVipReward.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchRefundOrder = channel.unary_unary(
                '/lq.Lobby/fetchRefundOrder',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchRefundOrder.FromString,
                _registered_method=True)
        self.fetchCustomizedContestList = channel.unary_unary(
                '/lq.Lobby/fetchCustomizedContestList',
                request_serializer=liqi__pb2.ReqFetchCustomizedContestList.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchCustomizedContestList.FromString,
                _registered_method=True)
        self.fetchCustomizedContestAuthInfo = channel.unary_unary(
                '/lq.Lobby/fetchCustomizedContestAuthInfo',
                request_serializer=liqi__pb2.ReqFetchCustomizedContestAuthInfo.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchCustomizedContestAuthInfo.FromString,
                _registered_method=True)
        self.enterCustomizedContest = channel.unary_unary(
                '/lq.Lobby/enterCustomizedContest',
                request_serializer=liqi__pb2.ReqEnterCustomizedContest.SerializeToString,
                response_deserializer=liqi__pb2.ResEnterCustomizedContest.FromString,
                _registered_method=True)
        self.leaveCustomizedContest = channel.unary_unary(
                '/lq.Lobby/leaveCustomizedContest',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchCustomizedContestOnlineInfo = channel.unary_unary(
                '/lq.Lobby/fetchCustomizedContestOnlineInfo',
                request_serializer=liqi__pb2.ReqFetchCustomizedContestOnlineInfo.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchCustomizedContestOnlineInfo.FromString,
                _registered_method=True)
        self.fetchCustomizedContestByContestId = channel.unary_unary(
                '/lq.Lobby/fetchCustomizedContestByContestId',
                request_serializer=liqi__pb2.ReqFetchCustomizedContestByContestId.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchCustomizedContestByContestId.FromString,
                _registered_method=True)
        self.signupCustomizedContest = channel.unary_unary(
                '/lq.Lobby/signupCustomizedContest',
                request_serializer=liqi__pb2.ReqSignupCustomizedContest.SerializeToString,
                response_deserializer=liqi__pb2.ResSignupCustomizedContest.FromString,
                _registered_method=True)
        self.startCustomizedContest = channel.unary_unary(
                '/lq.Lobby/startCustomizedContest',
                request_serializer=liqi__pb2.ReqStartCustomizedContest.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.stopCustomizedContest = channel.unary_unary(
                '/lq.Lobby/stopCustomizedContest',
                request_serializer=liqi__pb2.ReqStopCustomizedContest.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.joinCustomizedContestChatRoom = channel.unary_unary(
                '/lq.Lobby/joinCustomizedContestChatRoom',
                request_serializer=liqi__pb2.ReqJoinCustomizedContestChatRoom.SerializeToString,
                response_deserializer=liqi__pb2.ResJoinCustomizedContestChatRoom.FromString,
                _registered_method=True)
        self.leaveCustomizedContestChatRoom = channel.unary_unary(
                '/lq.Lobby/leaveCustomizedContestChatRoom',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.sayChatMessage = channel.unary_unary(
                '/lq.Lobby/sayChatMessage',
                request_serializer=liqi__pb2.ReqSayChatMessage.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchCustomizedContestGameRecords = channel.unary_unary(
                '/lq.Lobby/fetchCustomizedContestGameRecords',
                request_serializer=liqi__pb2.ReqFetchCustomizedContestGameRecords.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchCustomizedContestGameRecords.FromString,
                _registered_method=True)
        self.fetchCustomizedContestGameLiveList = channel.unary_unary(
                '/lq.Lobby/fetchCustomizedContestGameLiveList',
                request_serializer=liqi__pb2.ReqFetchCustomizedContestGameLiveList.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchCustomizedContestGameLiveList.FromString,
                _registered_method=True)
        self.followCustomizedContest = channel.unary_unary(
                '/lq.Lobby/followCustomizedContest',
                request_serializer=liqi__pb2.ReqTargetCustomizedContest.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.unfollowCustomizedContest = channel.unary_unary(
                '/lq.Lobby/unfollowCustomizedContest',
                request_serializer=liqi__pb2.ReqTargetCustomizedContest.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchActivityList = channel.unary_unary(
                '/lq.Lobby/fetchActivityList',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResActivityList.FromString,
                _registered_method=True)
        self.fetchAccountActivityData = channel.unary_unary(
                '/lq.Lobby/fetchAccountActivityData',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResAccountActivityData.FromString,
                _registered_method=True)
        self.exchangeActivityItem = channel.unary_unary(
                '/lq.Lobby/exchangeActivityItem',
                request_serializer=liqi__pb2.ReqExchangeActivityItem.SerializeToString,
                response_deserializer=liqi__pb2.ResExchangeActivityItem.FromString,
                _registered_method=True)
        self.completeActivityTask = channel.unary_unary(
                '/lq.Lobby/completeActivityTask',
                request_serializer=liqi__pb2.ReqCompleteActivityTask.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.completeActivityTaskBatch = channel.unary_unary(
                '/lq.Lobby/completeActivityTaskBatch',
                request_serializer=liqi__pb2.ReqCompleteActivityTaskBatch.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.completeActivityFlipTask = channel.unary_unary(
                '/lq.Lobby/completeActivityFlipTask',
                request_serializer=liqi__pb2.ReqCompleteActivityTask.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.completePeriodActivityTask = channel.unary_unary(
                '/lq.Lobby/completePeriodActivityTask',
                request_serializer=liqi__pb2.ReqCompleteActivityTask.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.completePeriodActivityTaskBatch = channel.unary_unary(
                '/lq.Lobby/completePeriodActivityTaskBatch',
                request_serializer=liqi__pb2.ReqCompletePeriodActivityTaskBatch.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.completeRandomActivityTask = channel.unary_unary(
                '/lq.Lobby/completeRandomActivityTask',
                request_serializer=liqi__pb2.ReqCompleteActivityTask.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.receiveActivityFlipTask = channel.unary_unary(
                '/lq.Lobby/receiveActivityFlipTask',
                request_serializer=liqi__pb2.ReqReceiveActivityFlipTask.SerializeToString,
                response_deserializer=liqi__pb2.ResReceiveActivityFlipTask.FromString,
                _registered_method=True)
        self.completeSegmentTaskReward = channel.unary_unary(
                '/lq.Lobby/completeSegmentTaskReward',
                request_serializer=liqi__pb2.ReqCompleteSegmentTaskReward.SerializeToString,
                response_deserializer=liqi__pb2.ResCompleteSegmentTaskReward.FromString,
                _registered_method=True)
        self.fetchActivityFlipInfo = channel.unary_unary(
                '/lq.Lobby/fetchActivityFlipInfo',
                request_serializer=liqi__pb2.ReqFetchActivityFlipInfo.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchActivityFlipInfo.FromString,
                _registered_method=True)
        self.gainAccumulatedPointActivityReward = channel.unary_unary(
                '/lq.Lobby/gainAccumulatedPointActivityReward',
                request_serializer=liqi__pb2.ReqGainAccumulatedPointActivityReward.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.gainMultiPointActivityReward = channel.unary_unary(
                '/lq.Lobby/gainMultiPointActivityReward',
                request_serializer=liqi__pb2.ReqGainMultiPointActivityReward.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchRankPointLeaderboard = channel.unary_unary(
                '/lq.Lobby/fetchRankPointLeaderboard',
                request_serializer=liqi__pb2.ReqFetchRankPointLeaderboard.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchRankPointLeaderboard.FromString,
                _registered_method=True)
        self.gainRankPointReward = channel.unary_unary(
                '/lq.Lobby/gainRankPointReward',
                request_serializer=liqi__pb2.ReqGainRankPointReward.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.richmanActivityNextMove = channel.unary_unary(
                '/lq.Lobby/richmanActivityNextMove',
                request_serializer=liqi__pb2.ReqRichmanNextMove.SerializeToString,
                response_deserializer=liqi__pb2.ResRichmanNextMove.FromString,
                _registered_method=True)
        self.richmanAcitivitySpecialMove = channel.unary_unary(
                '/lq.Lobby/richmanAcitivitySpecialMove',
                request_serializer=liqi__pb2.ReqRichmanSpecialMove.SerializeToString,
                response_deserializer=liqi__pb2.ResRichmanNextMove.FromString,
                _registered_method=True)
        self.richmanActivityChestInfo = channel.unary_unary(
                '/lq.Lobby/richmanActivityChestInfo',
                request_serializer=liqi__pb2.ReqRichmanChestInfo.SerializeToString,
                response_deserializer=liqi__pb2.ResRichmanChestInfo.FromString,
                _registered_method=True)
        self.createGameObserveAuth = channel.unary_unary(
                '/lq.Lobby/createGameObserveAuth',
                request_serializer=liqi__pb2.ReqCreateGameObserveAuth.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateGameObserveAuth.FromString,
                _registered_method=True)
        self.refreshGameObserveAuth = channel.unary_unary(
                '/lq.Lobby/refreshGameObserveAuth',
                request_serializer=liqi__pb2.ReqRefreshGameObserveAuth.SerializeToString,
                response_deserializer=liqi__pb2.ResRefreshGameObserveAuth.FromString,
                _registered_method=True)
        self.fetchActivityBuff = channel.unary_unary(
                '/lq.Lobby/fetchActivityBuff',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResActivityBuff.FromString,
                _registered_method=True)
        self.upgradeActivityBuff = channel.unary_unary(
                '/lq.Lobby/upgradeActivityBuff',
                request_serializer=liqi__pb2.ReqUpgradeActivityBuff.SerializeToString,
                response_deserializer=liqi__pb2.ResActivityBuff.FromString,
                _registered_method=True)
        self.upgradeActivityLevel = channel.unary_unary(
                '/lq.Lobby/upgradeActivityLevel',
                request_serializer=liqi__pb2.ReqUpgradeActivityLevel.SerializeToString,
                response_deserializer=liqi__pb2.ResUpgradeActivityLevel.FromString,
                _registered_method=True)
        self.receiveUpgradeActivityReward = channel.unary_unary(
                '/lq.Lobby/receiveUpgradeActivityReward',
                request_serializer=liqi__pb2.ReqReceiveUpgradeActivityReward.SerializeToString,
                response_deserializer=liqi__pb2.ResReceiveUpgradeActivityReward.FromString,
                _registered_method=True)
        self.upgradeChallenge = channel.unary_unary(
                '/lq.Lobby/upgradeChallenge',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResUpgradeChallenge.FromString,
                _registered_method=True)
        self.refreshChallenge = channel.unary_unary(
                '/lq.Lobby/refreshChallenge',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResRefreshChallenge.FromString,
                _registered_method=True)
        self.fetchChallengeInfo = channel.unary_unary(
                '/lq.Lobby/fetchChallengeInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchChallengeInfo.FromString,
                _registered_method=True)
        self.forceCompleteChallengeTask = channel.unary_unary(
                '/lq.Lobby/forceCompleteChallengeTask',
                request_serializer=liqi__pb2.ReqForceCompleteChallengeTask.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchChallengeSeason = channel.unary_unary(
                '/lq.Lobby/fetchChallengeSeason',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResChallengeSeasonInfo.FromString,
                _registered_method=True)
        self.receiveChallengeRankReward = channel.unary_unary(
                '/lq.Lobby/receiveChallengeRankReward',
                request_serializer=liqi__pb2.ReqReceiveChallengeRankReward.SerializeToString,
                response_deserializer=liqi__pb2.ResReceiveChallengeRankReward.FromString,
                _registered_method=True)
        self.fetchABMatchInfo = channel.unary_unary(
                '/lq.Lobby/fetchABMatchInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchABMatch.FromString,
                _registered_method=True)
        self.buyInABMatch = channel.unary_unary(
                '/lq.Lobby/buyInABMatch',
                request_serializer=liqi__pb2.ReqBuyInABMatch.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.receiveABMatchReward = channel.unary_unary(
                '/lq.Lobby/receiveABMatchReward',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.quitABMatch = channel.unary_unary(
                '/lq.Lobby/quitABMatch',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.startUnifiedMatch = channel.unary_unary(
                '/lq.Lobby/startUnifiedMatch',
                request_serializer=liqi__pb2.ReqStartUnifiedMatch.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.cancelUnifiedMatch = channel.unary_unary(
                '/lq.Lobby/cancelUnifiedMatch',
                request_serializer=liqi__pb2.ReqCancelUnifiedMatch.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchGamePointRank = channel.unary_unary(
                '/lq.Lobby/fetchGamePointRank',
                request_serializer=liqi__pb2.ReqGamePointRank.SerializeToString,
                response_deserializer=liqi__pb2.ResGamePointRank.FromString,
                _registered_method=True)
        self.fetchSelfGamePointRank = channel.unary_unary(
                '/lq.Lobby/fetchSelfGamePointRank',
                request_serializer=liqi__pb2.ReqGamePointRank.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchSelfGamePointRank.FromString,
                _registered_method=True)
        self.readSNS = channel.unary_unary(
                '/lq.Lobby/readSNS',
                request_serializer=liqi__pb2.ReqReadSNS.SerializeToString,
                response_deserializer=liqi__pb2.ResReadSNS.FromString,
                _registered_method=True)
        self.replySNS = channel.unary_unary(
                '/lq.Lobby/replySNS',
                request_serializer=liqi__pb2.ReqReplySNS.SerializeToString,
                response_deserializer=liqi__pb2.ResReplySNS.FromString,
                _registered_method=True)
        self.likeSNS = channel.unary_unary(
                '/lq.Lobby/likeSNS',
                request_serializer=liqi__pb2.ReqLikeSNS.SerializeToString,
                response_deserializer=liqi__pb2.ResLikeSNS.FromString,
                _registered_method=True)
        self.digMine = channel.unary_unary(
                '/lq.Lobby/digMine',
                request_serializer=liqi__pb2.ReqDigMine.SerializeToString,
                response_deserializer=liqi__pb2.ResDigMine.FromString,
                _registered_method=True)
        self.fetchLastPrivacy = channel.unary_unary(
                '/lq.Lobby/fetchLastPrivacy',
                request_serializer=liqi__pb2.ReqFetchLastPrivacy.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchLastPrivacy.FromString,
                _registered_method=True)
        self.checkPrivacy = channel.unary_unary(
                '/lq.Lobby/checkPrivacy',
                request_serializer=liqi__pb2.ReqCheckPrivacy.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.responseCaptcha = channel.unary_unary(
                '/lq.Lobby/responseCaptcha',
                request_serializer=liqi__pb2.ReqResponseCaptcha.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchRPGBattleHistory = channel.unary_unary(
                '/lq.Lobby/fetchRPGBattleHistory',
                request_serializer=liqi__pb2.ReqFetchRPGBattleHistory.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchRPGBattleHistory.FromString,
                _registered_method=True)
        self.fetchRPGBattleHistoryV2 = channel.unary_unary(
                '/lq.Lobby/fetchRPGBattleHistoryV2',
                request_serializer=liqi__pb2.ReqFetchRPGBattleHistory.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchRPGBattleHistoryV2.FromString,
                _registered_method=True)
        self.receiveRPGRewards = channel.unary_unary(
                '/lq.Lobby/receiveRPGRewards',
                request_serializer=liqi__pb2.ReqReceiveRPGRewards.SerializeToString,
                response_deserializer=liqi__pb2.ResReceiveRPGRewards.FromString,
                _registered_method=True)
        self.receiveRPGReward = channel.unary_unary(
                '/lq.Lobby/receiveRPGReward',
                request_serializer=liqi__pb2.ReqReceiveRPGReward.SerializeToString,
                response_deserializer=liqi__pb2.ResReceiveRPGRewards.FromString,
                _registered_method=True)
        self.buyArenaTicket = channel.unary_unary(
                '/lq.Lobby/buyArenaTicket',
                request_serializer=liqi__pb2.ReqBuyArenaTicket.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.enterArena = channel.unary_unary(
                '/lq.Lobby/enterArena',
                request_serializer=liqi__pb2.ReqEnterArena.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.receiveArenaReward = channel.unary_unary(
                '/lq.Lobby/receiveArenaReward',
                request_serializer=liqi__pb2.ReqArenaReward.SerializeToString,
                response_deserializer=liqi__pb2.ResArenaReward.FromString,
                _registered_method=True)
        self.fetchOBToken = channel.unary_unary(
                '/lq.Lobby/fetchOBToken',
                request_serializer=liqi__pb2.ReqFetchOBToken.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchOBToken.FromString,
                _registered_method=True)
        self.receiveCharacterRewards = channel.unary_unary(
                '/lq.Lobby/receiveCharacterRewards',
                request_serializer=liqi__pb2.ReqReceiveCharacterRewards.SerializeToString,
                response_deserializer=liqi__pb2.ResReceiveCharacterRewards.FromString,
                _registered_method=True)
        self.feedActivityFeed = channel.unary_unary(
                '/lq.Lobby/feedActivityFeed',
                request_serializer=liqi__pb2.ReqFeedActivityFeed.SerializeToString,
                response_deserializer=liqi__pb2.ResFeedActivityFeed.FromString,
                _registered_method=True)
        self.sendActivityGiftToFriend = channel.unary_unary(
                '/lq.Lobby/sendActivityGiftToFriend',
                request_serializer=liqi__pb2.ReqSendActivityGiftToFriend.SerializeToString,
                response_deserializer=liqi__pb2.ResSendActivityGiftToFriend.FromString,
                _registered_method=True)
        self.receiveActivityGift = channel.unary_unary(
                '/lq.Lobby/receiveActivityGift',
                request_serializer=liqi__pb2.ReqReceiveActivityGift.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.receiveAllActivityGift = channel.unary_unary(
                '/lq.Lobby/receiveAllActivityGift',
                request_serializer=liqi__pb2.ReqReceiveAllActivityGift.SerializeToString,
                response_deserializer=liqi__pb2.ResReceiveAllActivityGift.FromString,
                _registered_method=True)
        self.fetchFriendGiftActivityData = channel.unary_unary(
                '/lq.Lobby/fetchFriendGiftActivityData',
                request_serializer=liqi__pb2.ReqFetchFriendGiftActivityData.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchFriendGiftActivityData.FromString,
                _registered_method=True)
        self.openPreChestItem = channel.unary_unary(
                '/lq.Lobby/openPreChestItem',
                request_serializer=liqi__pb2.ReqOpenPreChestItem.SerializeToString,
                response_deserializer=liqi__pb2.ResOpenPreChestItem.FromString,
                _registered_method=True)
        self.fetchVoteActivity = channel.unary_unary(
                '/lq.Lobby/fetchVoteActivity',
                request_serializer=liqi__pb2.ReqFetchVoteActivity.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchVoteActivity.FromString,
                _registered_method=True)
        self.voteActivity = channel.unary_unary(
                '/lq.Lobby/voteActivity',
                request_serializer=liqi__pb2.ReqVoteActivity.SerializeToString,
                response_deserializer=liqi__pb2.ResVoteActivity.FromString,
                _registered_method=True)
        self.unlockActivitySpot = channel.unary_unary(
                '/lq.Lobby/unlockActivitySpot',
                request_serializer=liqi__pb2.ReqUnlockActivitySpot.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.unlockActivitySpotEnding = channel.unary_unary(
                '/lq.Lobby/unlockActivitySpotEnding',
                request_serializer=liqi__pb2.ReqUnlockActivitySpotEnding.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.receiveActivitySpotReward = channel.unary_unary(
                '/lq.Lobby/receiveActivitySpotReward',
                request_serializer=liqi__pb2.ReqReceiveActivitySpotReward.SerializeToString,
                response_deserializer=liqi__pb2.ResReceiveActivitySpotReward.FromString,
                _registered_method=True)
        self.deleteAccount = channel.unary_unary(
                '/lq.Lobby/deleteAccount',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResDeleteAccount.FromString,
                _registered_method=True)
        self.cancelDeleteAccount = channel.unary_unary(
                '/lq.Lobby/cancelDeleteAccount',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.logReport = channel.unary_unary(
                '/lq.Lobby/logReport',
                request_serializer=liqi__pb2.ReqLogReport.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.bindOauth2 = channel.unary_unary(
                '/lq.Lobby/bindOauth2',
                request_serializer=liqi__pb2.ReqBindOauth2.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchOauth2Info = channel.unary_unary(
                '/lq.Lobby/fetchOauth2Info',
                request_serializer=liqi__pb2.ReqFetchOauth2.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchOauth2.FromString,
                _registered_method=True)
        self.setLoadingImage = channel.unary_unary(
                '/lq.Lobby/setLoadingImage',
                request_serializer=liqi__pb2.ReqSetLoadingImage.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchShopInterval = channel.unary_unary(
                '/lq.Lobby/fetchShopInterval',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchShopInterval.FromString,
                _registered_method=True)
        self.fetchActivityInterval = channel.unary_unary(
                '/lq.Lobby/fetchActivityInterval',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchActivityInterval.FromString,
                _registered_method=True)
        self.fetchRecentFriend = channel.unary_unary(
                '/lq.Lobby/fetchRecentFriend',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchrecentFriend.FromString,
                _registered_method=True)
        self.openGacha = channel.unary_unary(
                '/lq.Lobby/openGacha',
                request_serializer=liqi__pb2.ReqOpenGacha.SerializeToString,
                response_deserializer=liqi__pb2.ResOpenGacha.FromString,
                _registered_method=True)
        self.taskRequest = channel.unary_unary(
                '/lq.Lobby/taskRequest',
                request_serializer=liqi__pb2.ReqTaskRequest.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.simulationActivityTrain = channel.unary_unary(
                '/lq.Lobby/simulationActivityTrain',
                request_serializer=liqi__pb2.ReqSimulationActivityTrain.SerializeToString,
                response_deserializer=liqi__pb2.ResSimulationActivityTrain.FromString,
                _registered_method=True)
        self.fetchSimulationGameRecord = channel.unary_unary(
                '/lq.Lobby/fetchSimulationGameRecord',
                request_serializer=liqi__pb2.ReqFetchSimulationGameRecord.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchSimulationGameRecord.FromString,
                _registered_method=True)
        self.startSimulationActivityGame = channel.unary_unary(
                '/lq.Lobby/startSimulationActivityGame',
                request_serializer=liqi__pb2.ReqStartSimulationActivityGame.SerializeToString,
                response_deserializer=liqi__pb2.ResStartSimulationActivityGame.FromString,
                _registered_method=True)
        self.fetchSimulationGameRank = channel.unary_unary(
                '/lq.Lobby/fetchSimulationGameRank',
                request_serializer=liqi__pb2.ReqFetchSimulationGameRank.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchSimulationGameRank.FromString,
                _registered_method=True)
        self.generateCombiningCraft = channel.unary_unary(
                '/lq.Lobby/generateCombiningCraft',
                request_serializer=liqi__pb2.ReqGenerateCombiningCraft.SerializeToString,
                response_deserializer=liqi__pb2.ResGenerateCombiningCraft.FromString,
                _registered_method=True)
        self.moveCombiningCraft = channel.unary_unary(
                '/lq.Lobby/moveCombiningCraft',
                request_serializer=liqi__pb2.ReqMoveCombiningCraft.SerializeToString,
                response_deserializer=liqi__pb2.ResMoveCombiningCraft.FromString,
                _registered_method=True)
        self.combiningRecycleCraft = channel.unary_unary(
                '/lq.Lobby/combiningRecycleCraft',
                request_serializer=liqi__pb2.ReqCombiningRecycleCraft.SerializeToString,
                response_deserializer=liqi__pb2.ResCombiningRecycleCraft.FromString,
                _registered_method=True)
        self.recoverCombiningRecycle = channel.unary_unary(
                '/lq.Lobby/recoverCombiningRecycle',
                request_serializer=liqi__pb2.ReqRecoverCombiningRecycle.SerializeToString,
                response_deserializer=liqi__pb2.ResRecoverCombiningRecycle.FromString,
                _registered_method=True)
        self.finishCombiningOrder = channel.unary_unary(
                '/lq.Lobby/finishCombiningOrder',
                request_serializer=liqi__pb2.ReqFinishCombiningOrder.SerializeToString,
                response_deserializer=liqi__pb2.ResFinishCombiningOrder.FromString,
                _registered_method=True)
        self.upgradeVillageBuilding = channel.unary_unary(
                '/lq.Lobby/upgradeVillageBuilding',
                request_serializer=liqi__pb2.ReqUpgradeVillageBuilding.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.receiveVillageBuildingReward = channel.unary_unary(
                '/lq.Lobby/receiveVillageBuildingReward',
                request_serializer=liqi__pb2.ReqReceiveVillageBuildingReward.SerializeToString,
                response_deserializer=liqi__pb2.ResReceiveVillageBuildingReward.FromString,
                _registered_method=True)
        self.startVillageTrip = channel.unary_unary(
                '/lq.Lobby/startVillageTrip',
                request_serializer=liqi__pb2.ReqStartVillageTrip.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.receiveVillageTripReward = channel.unary_unary(
                '/lq.Lobby/receiveVillageTripReward',
                request_serializer=liqi__pb2.ReqReceiveVillageTripReward.SerializeToString,
                response_deserializer=liqi__pb2.ResReceiveVillageTripReward.FromString,
                _registered_method=True)
        self.completeVillageTask = channel.unary_unary(
                '/lq.Lobby/completeVillageTask',
                request_serializer=liqi__pb2.ReqCompleteVillageTask.SerializeToString,
                response_deserializer=liqi__pb2.ResCompleteVillageTask.FromString,
                _registered_method=True)
        self.getFriendVillageData = channel.unary_unary(
                '/lq.Lobby/getFriendVillageData',
                request_serializer=liqi__pb2.ReqGetFriendVillageData.SerializeToString,
                response_deserializer=liqi__pb2.ResGetFriendVillageData.FromString,
                _registered_method=True)
        self.setVillageWorker = channel.unary_unary(
                '/lq.Lobby/setVillageWorker',
                request_serializer=liqi__pb2.ReqSetVillageWorker.SerializeToString,
                response_deserializer=liqi__pb2.ResSetVillageWorker.FromString,
                _registered_method=True)
        self.nextRoundVillage = channel.unary_unary(
                '/lq.Lobby/nextRoundVillage',
                request_serializer=liqi__pb2.ReqNextRoundVillage.SerializeToString,
                response_deserializer=liqi__pb2.ResNextRoundVillage.FromString,
                _registered_method=True)
        self.resolveFestivalActivityProposal = channel.unary_unary(
                '/lq.Lobby/resolveFestivalActivityProposal',
                request_serializer=liqi__pb2.ReqResolveFestivalActivityProposal.SerializeToString,
                response_deserializer=liqi__pb2.ResResolveFestivalActivityProposal.FromString,
                _registered_method=True)
        self.resolveFestivalActivityEvent = channel.unary_unary(
                '/lq.Lobby/resolveFestivalActivityEvent',
                request_serializer=liqi__pb2.ReqResolveFestivalActivityEvent.SerializeToString,
                response_deserializer=liqi__pb2.ResResolveFestivalActivityEvent.FromString,
                _registered_method=True)
        self.buyFestivalProposal = channel.unary_unary(
                '/lq.Lobby/buyFestivalProposal',
                request_serializer=liqi__pb2.ReqBuyFestivalProposal.SerializeToString,
                response_deserializer=liqi__pb2.ResBuyFestivalProposal.FromString,
                _registered_method=True)
        self.islandActivityMove = channel.unary_unary(
                '/lq.Lobby/islandActivityMove',
                request_serializer=liqi__pb2.ReqIslandActivityMove.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.islandActivityBuy = channel.unary_unary(
                '/lq.Lobby/islandActivityBuy',
                request_serializer=liqi__pb2.ReqIslandActivityBuy.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.islandActivitySell = channel.unary_unary(
                '/lq.Lobby/islandActivitySell',
                request_serializer=liqi__pb2.ReqIslandActivitySell.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.islandActivityTidyBag = channel.unary_unary(
                '/lq.Lobby/islandActivityTidyBag',
                request_serializer=liqi__pb2.ReqIslandActivityTidyBag.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.islandActivityUnlockBagGrid = channel.unary_unary(
                '/lq.Lobby/islandActivityUnlockBagGrid',
                request_serializer=liqi__pb2.ReqIslandActivityUnlockBagGrid.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.createCustomizedContest = channel.unary_unary(
                '/lq.Lobby/createCustomizedContest',
                request_serializer=liqi__pb2.ReqCreateCustomizedContest.SerializeToString,
                response_deserializer=liqi__pb2.ResCreateCustomizedContest.FromString,
                _registered_method=True)
        self.fetchManagerCustomizedContestList = channel.unary_unary(
                '/lq.Lobby/fetchManagerCustomizedContestList',
                request_serializer=liqi__pb2.ReqFetchmanagerCustomizedContestList.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchManagerCustomizedContestList.FromString,
                _registered_method=True)
        self.fetchManagerCustomizedContest = channel.unary_unary(
                '/lq.Lobby/fetchManagerCustomizedContest',
                request_serializer=liqi__pb2.ReqFetchManagerCustomizedContest.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchManagerCustomizedContest.FromString,
                _registered_method=True)
        self.updateManagerCustomizedContest = channel.unary_unary(
                '/lq.Lobby/updateManagerCustomizedContest',
                request_serializer=liqi__pb2.ReqUpdateManagerCustomizedContest.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchContestPlayerRank = channel.unary_unary(
                '/lq.Lobby/fetchContestPlayerRank',
                request_serializer=liqi__pb2.ReqFetchContestPlayerRank.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchContestPlayerRank.FromString,
                _registered_method=True)
        self.fetchReadyPlayerList = channel.unary_unary(
                '/lq.Lobby/fetchReadyPlayerList',
                request_serializer=liqi__pb2.ReqFetchReadyPlayerList.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchReadyPlayerList.FromString,
                _registered_method=True)
        self.createGamePlan = channel.unary_unary(
                '/lq.Lobby/createGamePlan',
                request_serializer=liqi__pb2.ReqCreateGamePlan.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.generateContestManagerLoginCode = channel.unary_unary(
                '/lq.Lobby/generateContestManagerLoginCode',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResGenerateContestManagerLoginCode.FromString,
                _registered_method=True)
        self.amuletActivityStartGame = channel.unary_unary(
                '/lq.Lobby/amuletActivityStartGame',
                request_serializer=liqi__pb2.ReqAmuletActivityStartGame.SerializeToString,
                response_deserializer=liqi__pb2.ResAmuletActivityStartGame.FromString,
                _registered_method=True)
        self.amuletActivityOperate = channel.unary_unary(
                '/lq.Lobby/amuletActivityOperate',
                request_serializer=liqi__pb2.ReqAmuletActivityOperate.SerializeToString,
                response_deserializer=liqi__pb2.ResAmuletActivityOperate.FromString,
                _registered_method=True)
        self.amuletActivityChangeHands = channel.unary_unary(
                '/lq.Lobby/amuletActivityChangeHands',
                request_serializer=liqi__pb2.ReqAmuletActivityChangeHands.SerializeToString,
                response_deserializer=liqi__pb2.ResAmuletActivityChangeHands.FromString,
                _registered_method=True)
        self.amuletActivityUpgrade = channel.unary_unary(
                '/lq.Lobby/amuletActivityUpgrade',
                request_serializer=liqi__pb2.ReqAmuletActivityUpgrade.SerializeToString,
                response_deserializer=liqi__pb2.ResAmuletActivityUpgrade.FromString,
                _registered_method=True)
        self.amuletActivityBuy = channel.unary_unary(
                '/lq.Lobby/amuletActivityBuy',
                request_serializer=liqi__pb2.ReqAmuletActivityBuy.SerializeToString,
                response_deserializer=liqi__pb2.ResAmuletActivityBuy.FromString,
                _registered_method=True)
        self.amuletActivitySelectPack = channel.unary_unary(
                '/lq.Lobby/amuletActivitySelectPack',
                request_serializer=liqi__pb2.ReqAmuletActivitySelectPack.SerializeToString,
                response_deserializer=liqi__pb2.ResAmuletActivitySelectPack.FromString,
                _registered_method=True)
        self.amuletActivitySellEffect = channel.unary_unary(
                '/lq.Lobby/amuletActivitySellEffect',
                request_serializer=liqi__pb2.ReqAmuletActivitySellEffect.SerializeToString,
                response_deserializer=liqi__pb2.ResAmuletActivitySellEffect.FromString,
                _registered_method=True)
        self.amuletActivityEffectSort = channel.unary_unary(
                '/lq.Lobby/amuletActivityEffectSort',
                request_serializer=liqi__pb2.ReqAmuletActivityEffectSort.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.amuletActivityGiveup = channel.unary_unary(
                '/lq.Lobby/amuletActivityGiveup',
                request_serializer=liqi__pb2.ReqAmuletActivityGiveup.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.amuletActivityRefreshShop = channel.unary_unary(
                '/lq.Lobby/amuletActivityRefreshShop',
                request_serializer=liqi__pb2.ReqAmuletActivityRefreshShop.SerializeToString,
                response_deserializer=liqi__pb2.ResAmuletActivityRefreshShop.FromString,
                _registered_method=True)
        self.amuletActivitySelectFreeEffect = channel.unary_unary(
                '/lq.Lobby/amuletActivitySelectFreeEffect',
                request_serializer=liqi__pb2.ReqAmuletActivitySelectFreeEffect.SerializeToString,
                response_deserializer=liqi__pb2.ResAmuletActivitySelectFreeEffect.FromString,
                _registered_method=True)
        self.amuletActivityUpgradeShopBuff = channel.unary_unary(
                '/lq.Lobby/amuletActivityUpgradeShopBuff',
                request_serializer=liqi__pb2.ReqAmuletActivityUpgradeShopBuff.SerializeToString,
                response_deserializer=liqi__pb2.ResAmuletActivityUpgradeShopBuff.FromString,
                _registered_method=True)
        self.amuletActivityEndShopping = channel.unary_unary(
                '/lq.Lobby/amuletActivityEndShopping',
                request_serializer=liqi__pb2.ReqAmuletActivityEndShopping.SerializeToString,
                response_deserializer=liqi__pb2.ResAmuletActivityEndShopping.FromString,
                _registered_method=True)
        self.amuletActivitySetSkillLevel = channel.unary_unary(
                '/lq.Lobby/amuletActivitySetSkillLevel',
                request_serializer=liqi__pb2.ReqAmuletActivitySetSkillLevel.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.amuletActivityMaintainInfo = channel.unary_unary(
                '/lq.Lobby/amuletActivityMaintainInfo',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResAmuletActivityMaintainInfo.FromString,
                _registered_method=True)
        self.storyActivityUnlock = channel.unary_unary(
                '/lq.Lobby/storyActivityUnlock',
                request_serializer=liqi__pb2.ReqStoryActivityUnlock.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.storyActivityUnlockEnding = channel.unary_unary(
                '/lq.Lobby/storyActivityUnlockEnding',
                request_serializer=liqi__pb2.ReqStoryActivityUnlockEnding.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.storyActivityReceiveEndingReward = channel.unary_unary(
                '/lq.Lobby/storyActivityReceiveEndingReward',
                request_serializer=liqi__pb2.ReqStoryActivityReceiveEndingReward.SerializeToString,
                response_deserializer=liqi__pb2.ResStoryReward.FromString,
                _registered_method=True)
        self.storyActivityReceiveFinishReward = channel.unary_unary(
                '/lq.Lobby/storyActivityReceiveFinishReward',
                request_serializer=liqi__pb2.ReqStoryActivityReceiveFinishReward.SerializeToString,
                response_deserializer=liqi__pb2.ResStoryReward.FromString,
                _registered_method=True)
        self.storyActivityReceiveAllFinishReward = channel.unary_unary(
                '/lq.Lobby/storyActivityReceiveAllFinishReward',
                request_serializer=liqi__pb2.ReqStoryActivityReceiveAllFinishReward.SerializeToString,
                response_deserializer=liqi__pb2.ResStoryReward.FromString,
                _registered_method=True)
        self.storyActivityUnlockEndingAndReceive = channel.unary_unary(
                '/lq.Lobby/storyActivityUnlockEndingAndReceive',
                request_serializer=liqi__pb2.ReqStoryActivityUnlockEndingAndReceive.SerializeToString,
                response_deserializer=liqi__pb2.ResStoryActivityUnlockEndingAndReceive.FromString,
                _registered_method=True)
        self.fetchActivityRank = channel.unary_unary(
                '/lq.Lobby/fetchActivityRank',
                request_serializer=liqi__pb2.ReqFetchActivityRank.SerializeToString,
                response_deserializer=liqi__pb2.ResFetchActivityRank.FromString,
                _registered_method=True)


class LobbyServicer(object):
    """Missing associated documentation comment in .proto file."""

    def fetchConnectionInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchQueueInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cancelQueue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def openidCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def signup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def loginSuccess(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def emailLogin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def oauth2Auth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def oauth2Check(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def oauth2Signup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def oauth2Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dmmPreLogin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createPhoneVerifyCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createEmailVerifyCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def verfifyCodeForSecure(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def bindPhoneNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def unbindPhoneNumber(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchPhoneLoginBind(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createPhoneLoginBind(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def bindEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def modifyPassword(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def bindAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def heatbeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def loginBeat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createNickname(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def modifyNickname(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def modifyBirthday(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchGamingInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def joinRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def leaveRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def readyPlay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def dressingStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def kickPlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def modifyRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def matchGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cancelMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchAccountInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeAvatar(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveVersionReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchAccountStatisticInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchAccountChallengeRankInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchAccountCharacterInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def shopPurchase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchGameRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def readGameRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchGameRecordList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCollectedGameRecordList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchGameRecordsDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addCollectedGameRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeCollectedGameRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeCollectedGameRecordRemarks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchLevelLeaderboard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchChallengeLeaderboard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchMutiChallengeLevel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchMultiAccountBrief(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchFriendList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchFriendApplyList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def applyFriend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def handleFriendApply(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def removeFriend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def searchAccountById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def searchAccountByPattern(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchAccountState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchBagInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def useBagItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def openManualItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def openRandomRewardItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def openAllRewardItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def composeShard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchAnnouncement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def readAnnouncement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchMailInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def readMail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteMail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def takeAttachmentFromMail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveAchievementReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveAchievementGroupReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchAchievementRate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchAchievement(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def buyShiLian(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def matchShiLian(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def goNextShiLian(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateClientValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchClientValue(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clientMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCurrentMatchInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def userComplain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchReviveCoinInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def gainReviveCoin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchDailyTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def refreshDailyTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def useGiftCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def useSpecialGiftCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchTitleList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def useTitle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendClientMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchGameLiveInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchGameLiveLeftSegment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchGameLiveList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCommentSetting(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateCommentSetting(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCommentList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCommentContent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def leaveComment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteComment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateReadComment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchRollingNotice(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchServerTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchPlatformProducts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cancelGooglePlayOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def openChest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def buyFromChestShop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchDailySignInInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def doDailySignIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def doActivitySignIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCharacterInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateCharacterSort(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeMainCharacter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeCharacterSkin(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeCharacterView(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setHiddenCharacter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendGiftToCharacter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sellItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCommonView(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def changeCommonView(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def saveCommonViews(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCommonViews(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchAllCommonViews(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def useCommonView(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def upgradeCharacter(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def addFinishedEnding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveEndingReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def gameMasterCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchShopInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def buyFromShop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def buyFromZHP(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def refreshZHPShop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchMonthTicketInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def payMonthTicket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def exchangeCurrency(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def exchangeChestStone(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def exchangeDiamond(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchServerSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchAccountSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateAccountSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchModNicknameTime(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createWechatNativeOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createWechatAppOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createAlipayOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createAlipayScanOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createAlipayAppOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createJPCreditCardOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createJPPaypalOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createJPAuOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createJPDocomoOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createJPWebMoneyOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createJPSoftbankOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createJPPayPayOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchJPCommonCreditCardOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createJPGMOOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createENPaypalOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createENMasterCardOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createENVisaOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createENJCBOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createENAlipayOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createKRPaypalOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createKRMasterCardOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createKRVisaOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createKRJCBOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createKRAlipayOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createDMMOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createIAPOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createSteamOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def verifySteamOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createMyCardAndroidOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createMyCardWebOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createPaypalOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createXsollaOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def verifyMyCardOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def verificationIAPOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createYostarSDKOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createBillingOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def solveGooglePlayOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def solveGooglePayOrderV3(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deliverAA32Order(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchMisc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def modifySignature(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchIDCardInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateIDCardInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchVipReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def gainVipReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchRefundOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCustomizedContestList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCustomizedContestAuthInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enterCustomizedContest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def leaveCustomizedContest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCustomizedContestOnlineInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCustomizedContestByContestId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def signupCustomizedContest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startCustomizedContest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopCustomizedContest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def joinCustomizedContestChatRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def leaveCustomizedContestChatRoom(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sayChatMessage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCustomizedContestGameRecords(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchCustomizedContestGameLiveList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def followCustomizedContest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def unfollowCustomizedContest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchActivityList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchAccountActivityData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def exchangeActivityItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def completeActivityTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def completeActivityTaskBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def completeActivityFlipTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def completePeriodActivityTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def completePeriodActivityTaskBatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def completeRandomActivityTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveActivityFlipTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def completeSegmentTaskReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchActivityFlipInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def gainAccumulatedPointActivityReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def gainMultiPointActivityReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchRankPointLeaderboard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def gainRankPointReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def richmanActivityNextMove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def richmanAcitivitySpecialMove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def richmanActivityChestInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createGameObserveAuth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def refreshGameObserveAuth(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchActivityBuff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def upgradeActivityBuff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def upgradeActivityLevel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveUpgradeActivityReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def upgradeChallenge(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def refreshChallenge(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchChallengeInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def forceCompleteChallengeTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchChallengeSeason(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveChallengeRankReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchABMatchInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def buyInABMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveABMatchReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def quitABMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startUnifiedMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cancelUnifiedMatch(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchGamePointRank(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchSelfGamePointRank(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def readSNS(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def replySNS(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def likeSNS(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def digMine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchLastPrivacy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def checkPrivacy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def responseCaptcha(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchRPGBattleHistory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchRPGBattleHistoryV2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveRPGRewards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveRPGReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def buyArenaTicket(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enterArena(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveArenaReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchOBToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveCharacterRewards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def feedActivityFeed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sendActivityGiftToFriend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveActivityGift(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveAllActivityGift(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchFriendGiftActivityData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def openPreChestItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchVoteActivity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def voteActivity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def unlockActivitySpot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def unlockActivitySpotEnding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveActivitySpotReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def deleteAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cancelDeleteAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def logReport(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def bindOauth2(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchOauth2Info(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setLoadingImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchShopInterval(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchActivityInterval(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchRecentFriend(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def openGacha(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def taskRequest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def simulationActivityTrain(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchSimulationGameRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startSimulationActivityGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchSimulationGameRank(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def generateCombiningCraft(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def moveCombiningCraft(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def combiningRecycleCraft(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def recoverCombiningRecycle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def finishCombiningOrder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def upgradeVillageBuilding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveVillageBuildingReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startVillageTrip(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def receiveVillageTripReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def completeVillageTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getFriendVillageData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def setVillageWorker(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def nextRoundVillage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resolveFestivalActivityProposal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def resolveFestivalActivityEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def buyFestivalProposal(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def islandActivityMove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def islandActivityBuy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def islandActivitySell(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def islandActivityTidyBag(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def islandActivityUnlockBagGrid(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createCustomizedContest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchManagerCustomizedContestList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchManagerCustomizedContest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def updateManagerCustomizedContest(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchContestPlayerRank(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchReadyPlayerList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createGamePlan(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def generateContestManagerLoginCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivityStartGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivityOperate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivityChangeHands(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivityUpgrade(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivityBuy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivitySelectPack(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivitySellEffect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivityEffectSort(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivityGiveup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivityRefreshShop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivitySelectFreeEffect(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivityUpgradeShopBuff(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivityEndShopping(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivitySetSkillLevel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def amuletActivityMaintainInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def storyActivityUnlock(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def storyActivityUnlockEnding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def storyActivityReceiveEndingReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def storyActivityReceiveFinishReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def storyActivityReceiveAllFinishReward(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def storyActivityUnlockEndingAndReceive(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchActivityRank(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LobbyServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'fetchConnectionInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchConnectionInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResConnectionInfo.SerializeToString,
            ),
            'fetchQueueInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchQueueInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFetchQueueInfo.SerializeToString,
            ),
            'cancelQueue': grpc.unary_unary_rpc_method_handler(
                    servicer.cancelQueue,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'openidCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.openidCheck,
                    request_deserializer=liqi__pb2.ReqOpenidCheck.FromString,
                    response_serializer=liqi__pb2.ResOauth2Check.SerializeToString,
            ),
            'signup': grpc.unary_unary_rpc_method_handler(
                    servicer.signup,
                    request_deserializer=liqi__pb2.ReqSignupAccount.FromString,
                    response_serializer=liqi__pb2.ResSignupAccount.SerializeToString,
            ),
            'login': grpc.unary_unary_rpc_method_handler(
                    servicer.login,
                    request_deserializer=liqi__pb2.ReqLogin.FromString,
                    response_serializer=liqi__pb2.ResLogin.SerializeToString,
            ),
            'fetchInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFetchInfo.SerializeToString,
            ),
            'loginSuccess': grpc.unary_unary_rpc_method_handler(
                    servicer.loginSuccess,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'emailLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.emailLogin,
                    request_deserializer=liqi__pb2.ReqEmailLogin.FromString,
                    response_serializer=liqi__pb2.ResLogin.SerializeToString,
            ),
            'oauth2Auth': grpc.unary_unary_rpc_method_handler(
                    servicer.oauth2Auth,
                    request_deserializer=liqi__pb2.ReqOauth2Auth.FromString,
                    response_serializer=liqi__pb2.ResOauth2Auth.SerializeToString,
            ),
            'oauth2Check': grpc.unary_unary_rpc_method_handler(
                    servicer.oauth2Check,
                    request_deserializer=liqi__pb2.ReqOauth2Check.FromString,
                    response_serializer=liqi__pb2.ResOauth2Check.SerializeToString,
            ),
            'oauth2Signup': grpc.unary_unary_rpc_method_handler(
                    servicer.oauth2Signup,
                    request_deserializer=liqi__pb2.ReqOauth2Signup.FromString,
                    response_serializer=liqi__pb2.ResOauth2Signup.SerializeToString,
            ),
            'oauth2Login': grpc.unary_unary_rpc_method_handler(
                    servicer.oauth2Login,
                    request_deserializer=liqi__pb2.ReqOauth2Login.FromString,
                    response_serializer=liqi__pb2.ResLogin.SerializeToString,
            ),
            'dmmPreLogin': grpc.unary_unary_rpc_method_handler(
                    servicer.dmmPreLogin,
                    request_deserializer=liqi__pb2.ReqDMMPreLogin.FromString,
                    response_serializer=liqi__pb2.ResDMMPreLogin.SerializeToString,
            ),
            'createPhoneVerifyCode': grpc.unary_unary_rpc_method_handler(
                    servicer.createPhoneVerifyCode,
                    request_deserializer=liqi__pb2.ReqCreatePhoneVerifyCode.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'createEmailVerifyCode': grpc.unary_unary_rpc_method_handler(
                    servicer.createEmailVerifyCode,
                    request_deserializer=liqi__pb2.ReqCreateEmailVerifyCode.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'verfifyCodeForSecure': grpc.unary_unary_rpc_method_handler(
                    servicer.verfifyCodeForSecure,
                    request_deserializer=liqi__pb2.ReqVerifyCodeForSecure.FromString,
                    response_serializer=liqi__pb2.ResVerfiyCodeForSecure.SerializeToString,
            ),
            'bindPhoneNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.bindPhoneNumber,
                    request_deserializer=liqi__pb2.ReqBindPhoneNumber.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'unbindPhoneNumber': grpc.unary_unary_rpc_method_handler(
                    servicer.unbindPhoneNumber,
                    request_deserializer=liqi__pb2.ReqUnbindPhoneNumber.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchPhoneLoginBind': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchPhoneLoginBind,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFetchPhoneLoginBind.SerializeToString,
            ),
            'createPhoneLoginBind': grpc.unary_unary_rpc_method_handler(
                    servicer.createPhoneLoginBind,
                    request_deserializer=liqi__pb2.ReqCreatePhoneLoginBind.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'bindEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.bindEmail,
                    request_deserializer=liqi__pb2.ReqBindEmail.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'modifyPassword': grpc.unary_unary_rpc_method_handler(
                    servicer.modifyPassword,
                    request_deserializer=liqi__pb2.ReqModifyPassword.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'bindAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.bindAccount,
                    request_deserializer=liqi__pb2.ReqBindAccount.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'logout': grpc.unary_unary_rpc_method_handler(
                    servicer.logout,
                    request_deserializer=liqi__pb2.ReqLogout.FromString,
                    response_serializer=liqi__pb2.ResLogout.SerializeToString,
            ),
            'heatbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.heatbeat,
                    request_deserializer=liqi__pb2.ReqHeatBeat.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'loginBeat': grpc.unary_unary_rpc_method_handler(
                    servicer.loginBeat,
                    request_deserializer=liqi__pb2.ReqLoginBeat.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'createNickname': grpc.unary_unary_rpc_method_handler(
                    servicer.createNickname,
                    request_deserializer=liqi__pb2.ReqCreateNickname.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'modifyNickname': grpc.unary_unary_rpc_method_handler(
                    servicer.modifyNickname,
                    request_deserializer=liqi__pb2.ReqModifyNickname.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'modifyBirthday': grpc.unary_unary_rpc_method_handler(
                    servicer.modifyBirthday,
                    request_deserializer=liqi__pb2.ReqModifyBirthday.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchRoom,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResSelfRoom.SerializeToString,
            ),
            'fetchGamingInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchGamingInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFetchGamingInfo.SerializeToString,
            ),
            'createRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.createRoom,
                    request_deserializer=liqi__pb2.ReqCreateRoom.FromString,
                    response_serializer=liqi__pb2.ResCreateRoom.SerializeToString,
            ),
            'joinRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.joinRoom,
                    request_deserializer=liqi__pb2.ReqJoinRoom.FromString,
                    response_serializer=liqi__pb2.ResJoinRoom.SerializeToString,
            ),
            'leaveRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.leaveRoom,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'readyPlay': grpc.unary_unary_rpc_method_handler(
                    servicer.readyPlay,
                    request_deserializer=liqi__pb2.ReqRoomReady.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'dressingStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.dressingStatus,
                    request_deserializer=liqi__pb2.ReqRoomDressing.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'startRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.startRoom,
                    request_deserializer=liqi__pb2.ReqRoomStart.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'kickPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.kickPlayer,
                    request_deserializer=liqi__pb2.ReqRoomKick.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'modifyRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.modifyRoom,
                    request_deserializer=liqi__pb2.ReqModifyRoom.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'matchGame': grpc.unary_unary_rpc_method_handler(
                    servicer.matchGame,
                    request_deserializer=liqi__pb2.ReqJoinMatchQueue.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'cancelMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.cancelMatch,
                    request_deserializer=liqi__pb2.ReqCancelMatchQueue.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchAccountInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchAccountInfo,
                    request_deserializer=liqi__pb2.ReqAccountInfo.FromString,
                    response_serializer=liqi__pb2.ResAccountInfo.SerializeToString,
            ),
            'changeAvatar': grpc.unary_unary_rpc_method_handler(
                    servicer.changeAvatar,
                    request_deserializer=liqi__pb2.ReqChangeAvatar.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'receiveVersionReward': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveVersionReward,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchAccountStatisticInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchAccountStatisticInfo,
                    request_deserializer=liqi__pb2.ReqAccountStatisticInfo.FromString,
                    response_serializer=liqi__pb2.ResAccountStatisticInfo.SerializeToString,
            ),
            'fetchAccountChallengeRankInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchAccountChallengeRankInfo,
                    request_deserializer=liqi__pb2.ReqAccountInfo.FromString,
                    response_serializer=liqi__pb2.ResAccountChallengeRankInfo.SerializeToString,
            ),
            'fetchAccountCharacterInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchAccountCharacterInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResAccountCharacterInfo.SerializeToString,
            ),
            'shopPurchase': grpc.unary_unary_rpc_method_handler(
                    servicer.shopPurchase,
                    request_deserializer=liqi__pb2.ReqShopPurchase.FromString,
                    response_serializer=liqi__pb2.ResShopPurchase.SerializeToString,
            ),
            'fetchGameRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchGameRecord,
                    request_deserializer=liqi__pb2.ReqGameRecord.FromString,
                    response_serializer=liqi__pb2.ResGameRecord.SerializeToString,
            ),
            'readGameRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.readGameRecord,
                    request_deserializer=liqi__pb2.ReqGameRecord.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchGameRecordList': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchGameRecordList,
                    request_deserializer=liqi__pb2.ReqGameRecordList.FromString,
                    response_serializer=liqi__pb2.ResGameRecordList.SerializeToString,
            ),
            'fetchCollectedGameRecordList': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCollectedGameRecordList,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCollectedGameRecordList.SerializeToString,
            ),
            'fetchGameRecordsDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchGameRecordsDetail,
                    request_deserializer=liqi__pb2.ReqGameRecordsDetail.FromString,
                    response_serializer=liqi__pb2.ResGameRecordsDetail.SerializeToString,
            ),
            'addCollectedGameRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.addCollectedGameRecord,
                    request_deserializer=liqi__pb2.ReqAddCollectedGameRecord.FromString,
                    response_serializer=liqi__pb2.ResAddCollectedGameRecord.SerializeToString,
            ),
            'removeCollectedGameRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.removeCollectedGameRecord,
                    request_deserializer=liqi__pb2.ReqRemoveCollectedGameRecord.FromString,
                    response_serializer=liqi__pb2.ResRemoveCollectedGameRecord.SerializeToString,
            ),
            'changeCollectedGameRecordRemarks': grpc.unary_unary_rpc_method_handler(
                    servicer.changeCollectedGameRecordRemarks,
                    request_deserializer=liqi__pb2.ReqChangeCollectedGameRecordRemarks.FromString,
                    response_serializer=liqi__pb2.ResChangeCollectedGameRecordRemarks.SerializeToString,
            ),
            'fetchLevelLeaderboard': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchLevelLeaderboard,
                    request_deserializer=liqi__pb2.ReqLevelLeaderboard.FromString,
                    response_serializer=liqi__pb2.ResLevelLeaderboard.SerializeToString,
            ),
            'fetchChallengeLeaderboard': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchChallengeLeaderboard,
                    request_deserializer=liqi__pb2.ReqChallangeLeaderboard.FromString,
                    response_serializer=liqi__pb2.ResChallengeLeaderboard.SerializeToString,
            ),
            'fetchMutiChallengeLevel': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchMutiChallengeLevel,
                    request_deserializer=liqi__pb2.ReqMutiChallengeLevel.FromString,
                    response_serializer=liqi__pb2.ResMutiChallengeLevel.SerializeToString,
            ),
            'fetchMultiAccountBrief': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchMultiAccountBrief,
                    request_deserializer=liqi__pb2.ReqMultiAccountId.FromString,
                    response_serializer=liqi__pb2.ResMultiAccountBrief.SerializeToString,
            ),
            'fetchFriendList': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchFriendList,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFriendList.SerializeToString,
            ),
            'fetchFriendApplyList': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchFriendApplyList,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFriendApplyList.SerializeToString,
            ),
            'applyFriend': grpc.unary_unary_rpc_method_handler(
                    servicer.applyFriend,
                    request_deserializer=liqi__pb2.ReqApplyFriend.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'handleFriendApply': grpc.unary_unary_rpc_method_handler(
                    servicer.handleFriendApply,
                    request_deserializer=liqi__pb2.ReqHandleFriendApply.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'removeFriend': grpc.unary_unary_rpc_method_handler(
                    servicer.removeFriend,
                    request_deserializer=liqi__pb2.ReqRemoveFriend.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'searchAccountById': grpc.unary_unary_rpc_method_handler(
                    servicer.searchAccountById,
                    request_deserializer=liqi__pb2.ReqSearchAccountById.FromString,
                    response_serializer=liqi__pb2.ResSearchAccountById.SerializeToString,
            ),
            'searchAccountByPattern': grpc.unary_unary_rpc_method_handler(
                    servicer.searchAccountByPattern,
                    request_deserializer=liqi__pb2.ReqSearchAccountByPattern.FromString,
                    response_serializer=liqi__pb2.ResSearchAccountByPattern.SerializeToString,
            ),
            'fetchAccountState': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchAccountState,
                    request_deserializer=liqi__pb2.ReqAccountList.FromString,
                    response_serializer=liqi__pb2.ResAccountStates.SerializeToString,
            ),
            'fetchBagInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchBagInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResBagInfo.SerializeToString,
            ),
            'useBagItem': grpc.unary_unary_rpc_method_handler(
                    servicer.useBagItem,
                    request_deserializer=liqi__pb2.ReqUseBagItem.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'openManualItem': grpc.unary_unary_rpc_method_handler(
                    servicer.openManualItem,
                    request_deserializer=liqi__pb2.ReqOpenManualItem.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'openRandomRewardItem': grpc.unary_unary_rpc_method_handler(
                    servicer.openRandomRewardItem,
                    request_deserializer=liqi__pb2.ReqOpenRandomRewardItem.FromString,
                    response_serializer=liqi__pb2.ResOpenRandomRewardItem.SerializeToString,
            ),
            'openAllRewardItem': grpc.unary_unary_rpc_method_handler(
                    servicer.openAllRewardItem,
                    request_deserializer=liqi__pb2.ReqOpenAllRewardItem.FromString,
                    response_serializer=liqi__pb2.ResOpenAllRewardItem.SerializeToString,
            ),
            'composeShard': grpc.unary_unary_rpc_method_handler(
                    servicer.composeShard,
                    request_deserializer=liqi__pb2.ReqComposeShard.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchAnnouncement': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchAnnouncement,
                    request_deserializer=liqi__pb2.ReqFetchAnnouncement.FromString,
                    response_serializer=liqi__pb2.ResAnnouncement.SerializeToString,
            ),
            'readAnnouncement': grpc.unary_unary_rpc_method_handler(
                    servicer.readAnnouncement,
                    request_deserializer=liqi__pb2.ReqReadAnnouncement.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchMailInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchMailInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResMailInfo.SerializeToString,
            ),
            'readMail': grpc.unary_unary_rpc_method_handler(
                    servicer.readMail,
                    request_deserializer=liqi__pb2.ReqReadMail.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'deleteMail': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteMail,
                    request_deserializer=liqi__pb2.ReqDeleteMail.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'takeAttachmentFromMail': grpc.unary_unary_rpc_method_handler(
                    servicer.takeAttachmentFromMail,
                    request_deserializer=liqi__pb2.ReqTakeAttachment.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'receiveAchievementReward': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveAchievementReward,
                    request_deserializer=liqi__pb2.ReqReceiveAchievementReward.FromString,
                    response_serializer=liqi__pb2.ResReceiveAchievementReward.SerializeToString,
            ),
            'receiveAchievementGroupReward': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveAchievementGroupReward,
                    request_deserializer=liqi__pb2.ReqReceiveAchievementGroupReward.FromString,
                    response_serializer=liqi__pb2.ResReceiveAchievementGroupReward.SerializeToString,
            ),
            'fetchAchievementRate': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchAchievementRate,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFetchAchievementRate.SerializeToString,
            ),
            'fetchAchievement': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchAchievement,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResAchievement.SerializeToString,
            ),
            'buyShiLian': grpc.unary_unary_rpc_method_handler(
                    servicer.buyShiLian,
                    request_deserializer=liqi__pb2.ReqBuyShiLian.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'matchShiLian': grpc.unary_unary_rpc_method_handler(
                    servicer.matchShiLian,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'goNextShiLian': grpc.unary_unary_rpc_method_handler(
                    servicer.goNextShiLian,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'updateClientValue': grpc.unary_unary_rpc_method_handler(
                    servicer.updateClientValue,
                    request_deserializer=liqi__pb2.ReqUpdateClientValue.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchClientValue': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchClientValue,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResClientValue.SerializeToString,
            ),
            'clientMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.clientMessage,
                    request_deserializer=liqi__pb2.ReqClientMessage.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchCurrentMatchInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCurrentMatchInfo,
                    request_deserializer=liqi__pb2.ReqCurrentMatchInfo.FromString,
                    response_serializer=liqi__pb2.ResCurrentMatchInfo.SerializeToString,
            ),
            'userComplain': grpc.unary_unary_rpc_method_handler(
                    servicer.userComplain,
                    request_deserializer=liqi__pb2.ReqUserComplain.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchReviveCoinInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchReviveCoinInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResReviveCoinInfo.SerializeToString,
            ),
            'gainReviveCoin': grpc.unary_unary_rpc_method_handler(
                    servicer.gainReviveCoin,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchDailyTask': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchDailyTask,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResDailyTask.SerializeToString,
            ),
            'refreshDailyTask': grpc.unary_unary_rpc_method_handler(
                    servicer.refreshDailyTask,
                    request_deserializer=liqi__pb2.ReqRefreshDailyTask.FromString,
                    response_serializer=liqi__pb2.ResRefreshDailyTask.SerializeToString,
            ),
            'useGiftCode': grpc.unary_unary_rpc_method_handler(
                    servicer.useGiftCode,
                    request_deserializer=liqi__pb2.ReqUseGiftCode.FromString,
                    response_serializer=liqi__pb2.ResUseGiftCode.SerializeToString,
            ),
            'useSpecialGiftCode': grpc.unary_unary_rpc_method_handler(
                    servicer.useSpecialGiftCode,
                    request_deserializer=liqi__pb2.ReqUseGiftCode.FromString,
                    response_serializer=liqi__pb2.ResUseSpecialGiftCode.SerializeToString,
            ),
            'fetchTitleList': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchTitleList,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResTitleList.SerializeToString,
            ),
            'useTitle': grpc.unary_unary_rpc_method_handler(
                    servicer.useTitle,
                    request_deserializer=liqi__pb2.ReqUseTitle.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'sendClientMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.sendClientMessage,
                    request_deserializer=liqi__pb2.ReqSendClientMessage.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchGameLiveInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchGameLiveInfo,
                    request_deserializer=liqi__pb2.ReqGameLiveInfo.FromString,
                    response_serializer=liqi__pb2.ResGameLiveInfo.SerializeToString,
            ),
            'fetchGameLiveLeftSegment': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchGameLiveLeftSegment,
                    request_deserializer=liqi__pb2.ReqGameLiveLeftSegment.FromString,
                    response_serializer=liqi__pb2.ResGameLiveLeftSegment.SerializeToString,
            ),
            'fetchGameLiveList': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchGameLiveList,
                    request_deserializer=liqi__pb2.ReqGameLiveList.FromString,
                    response_serializer=liqi__pb2.ResGameLiveList.SerializeToString,
            ),
            'fetchCommentSetting': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCommentSetting,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommentSetting.SerializeToString,
            ),
            'updateCommentSetting': grpc.unary_unary_rpc_method_handler(
                    servicer.updateCommentSetting,
                    request_deserializer=liqi__pb2.ReqUpdateCommentSetting.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchCommentList': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCommentList,
                    request_deserializer=liqi__pb2.ReqFetchCommentList.FromString,
                    response_serializer=liqi__pb2.ResFetchCommentList.SerializeToString,
            ),
            'fetchCommentContent': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCommentContent,
                    request_deserializer=liqi__pb2.ReqFetchCommentContent.FromString,
                    response_serializer=liqi__pb2.ResFetchCommentContent.SerializeToString,
            ),
            'leaveComment': grpc.unary_unary_rpc_method_handler(
                    servicer.leaveComment,
                    request_deserializer=liqi__pb2.ReqLeaveComment.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'deleteComment': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteComment,
                    request_deserializer=liqi__pb2.ReqDeleteComment.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'updateReadComment': grpc.unary_unary_rpc_method_handler(
                    servicer.updateReadComment,
                    request_deserializer=liqi__pb2.ReqUpdateReadComment.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchRollingNotice': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchRollingNotice,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ReqRollingNotice.SerializeToString,
            ),
            'fetchServerTime': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchServerTime,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResServerTime.SerializeToString,
            ),
            'fetchPlatformProducts': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchPlatformProducts,
                    request_deserializer=liqi__pb2.ReqPlatformBillingProducts.FromString,
                    response_serializer=liqi__pb2.ResPlatformBillingProducts.SerializeToString,
            ),
            'cancelGooglePlayOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.cancelGooglePlayOrder,
                    request_deserializer=liqi__pb2.ReqCancelGooglePlayOrder.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'openChest': grpc.unary_unary_rpc_method_handler(
                    servicer.openChest,
                    request_deserializer=liqi__pb2.ReqOpenChest.FromString,
                    response_serializer=liqi__pb2.ResOpenChest.SerializeToString,
            ),
            'buyFromChestShop': grpc.unary_unary_rpc_method_handler(
                    servicer.buyFromChestShop,
                    request_deserializer=liqi__pb2.ReqBuyFromChestShop.FromString,
                    response_serializer=liqi__pb2.ResBuyFromChestShop.SerializeToString,
            ),
            'fetchDailySignInInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchDailySignInInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResDailySignInInfo.SerializeToString,
            ),
            'doDailySignIn': grpc.unary_unary_rpc_method_handler(
                    servicer.doDailySignIn,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'doActivitySignIn': grpc.unary_unary_rpc_method_handler(
                    servicer.doActivitySignIn,
                    request_deserializer=liqi__pb2.ReqDoActivitySignIn.FromString,
                    response_serializer=liqi__pb2.ResDoActivitySignIn.SerializeToString,
            ),
            'fetchCharacterInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCharacterInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCharacterInfo.SerializeToString,
            ),
            'updateCharacterSort': grpc.unary_unary_rpc_method_handler(
                    servicer.updateCharacterSort,
                    request_deserializer=liqi__pb2.ReqUpdateCharacterSort.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'changeMainCharacter': grpc.unary_unary_rpc_method_handler(
                    servicer.changeMainCharacter,
                    request_deserializer=liqi__pb2.ReqChangeMainCharacter.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'changeCharacterSkin': grpc.unary_unary_rpc_method_handler(
                    servicer.changeCharacterSkin,
                    request_deserializer=liqi__pb2.ReqChangeCharacterSkin.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'changeCharacterView': grpc.unary_unary_rpc_method_handler(
                    servicer.changeCharacterView,
                    request_deserializer=liqi__pb2.ReqChangeCharacterView.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'setHiddenCharacter': grpc.unary_unary_rpc_method_handler(
                    servicer.setHiddenCharacter,
                    request_deserializer=liqi__pb2.ReqSetHiddenCharacter.FromString,
                    response_serializer=liqi__pb2.ResSetHiddenCharacter.SerializeToString,
            ),
            'sendGiftToCharacter': grpc.unary_unary_rpc_method_handler(
                    servicer.sendGiftToCharacter,
                    request_deserializer=liqi__pb2.ReqSendGiftToCharacter.FromString,
                    response_serializer=liqi__pb2.ResSendGiftToCharacter.SerializeToString,
            ),
            'sellItem': grpc.unary_unary_rpc_method_handler(
                    servicer.sellItem,
                    request_deserializer=liqi__pb2.ReqSellItem.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchCommonView': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCommonView,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommonView.SerializeToString,
            ),
            'changeCommonView': grpc.unary_unary_rpc_method_handler(
                    servicer.changeCommonView,
                    request_deserializer=liqi__pb2.ReqChangeCommonView.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'saveCommonViews': grpc.unary_unary_rpc_method_handler(
                    servicer.saveCommonViews,
                    request_deserializer=liqi__pb2.ReqSaveCommonViews.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchCommonViews': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCommonViews,
                    request_deserializer=liqi__pb2.ReqCommonViews.FromString,
                    response_serializer=liqi__pb2.ResCommonViews.SerializeToString,
            ),
            'fetchAllCommonViews': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchAllCommonViews,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResAllcommonViews.SerializeToString,
            ),
            'useCommonView': grpc.unary_unary_rpc_method_handler(
                    servicer.useCommonView,
                    request_deserializer=liqi__pb2.ReqUseCommonView.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'upgradeCharacter': grpc.unary_unary_rpc_method_handler(
                    servicer.upgradeCharacter,
                    request_deserializer=liqi__pb2.ReqUpgradeCharacter.FromString,
                    response_serializer=liqi__pb2.ResUpgradeCharacter.SerializeToString,
            ),
            'addFinishedEnding': grpc.unary_unary_rpc_method_handler(
                    servicer.addFinishedEnding,
                    request_deserializer=liqi__pb2.ReqFinishedEnding.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'receiveEndingReward': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveEndingReward,
                    request_deserializer=liqi__pb2.ReqFinishedEnding.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'gameMasterCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.gameMasterCommand,
                    request_deserializer=liqi__pb2.ReqGMCommand.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchShopInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchShopInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResShopInfo.SerializeToString,
            ),
            'buyFromShop': grpc.unary_unary_rpc_method_handler(
                    servicer.buyFromShop,
                    request_deserializer=liqi__pb2.ReqBuyFromShop.FromString,
                    response_serializer=liqi__pb2.ResBuyFromShop.SerializeToString,
            ),
            'buyFromZHP': grpc.unary_unary_rpc_method_handler(
                    servicer.buyFromZHP,
                    request_deserializer=liqi__pb2.ReqBuyFromZHP.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'refreshZHPShop': grpc.unary_unary_rpc_method_handler(
                    servicer.refreshZHPShop,
                    request_deserializer=liqi__pb2.ReqReshZHPShop.FromString,
                    response_serializer=liqi__pb2.ResRefreshZHPShop.SerializeToString,
            ),
            'fetchMonthTicketInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchMonthTicketInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResMonthTicketInfo.SerializeToString,
            ),
            'payMonthTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.payMonthTicket,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResPayMonthTicket.SerializeToString,
            ),
            'exchangeCurrency': grpc.unary_unary_rpc_method_handler(
                    servicer.exchangeCurrency,
                    request_deserializer=liqi__pb2.ReqExchangeCurrency.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'exchangeChestStone': grpc.unary_unary_rpc_method_handler(
                    servicer.exchangeChestStone,
                    request_deserializer=liqi__pb2.ReqExchangeCurrency.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'exchangeDiamond': grpc.unary_unary_rpc_method_handler(
                    servicer.exchangeDiamond,
                    request_deserializer=liqi__pb2.ReqExchangeCurrency.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchServerSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchServerSettings,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResServerSettings.SerializeToString,
            ),
            'fetchAccountSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchAccountSettings,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResAccountSettings.SerializeToString,
            ),
            'updateAccountSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.updateAccountSettings,
                    request_deserializer=liqi__pb2.ReqUpdateAccountSettings.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchModNicknameTime': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchModNicknameTime,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResModNicknameTime.SerializeToString,
            ),
            'createWechatNativeOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createWechatNativeOrder,
                    request_deserializer=liqi__pb2.ReqCreateWechatNativeOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateWechatNativeOrder.SerializeToString,
            ),
            'createWechatAppOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createWechatAppOrder,
                    request_deserializer=liqi__pb2.ReqCreateWechatAppOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateWechatAppOrder.SerializeToString,
            ),
            'createAlipayOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createAlipayOrder,
                    request_deserializer=liqi__pb2.ReqCreateAlipayOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateAlipayOrder.SerializeToString,
            ),
            'createAlipayScanOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createAlipayScanOrder,
                    request_deserializer=liqi__pb2.ReqCreateAlipayScanOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateAlipayScanOrder.SerializeToString,
            ),
            'createAlipayAppOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createAlipayAppOrder,
                    request_deserializer=liqi__pb2.ReqCreateAlipayAppOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateAlipayAppOrder.SerializeToString,
            ),
            'createJPCreditCardOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createJPCreditCardOrder,
                    request_deserializer=liqi__pb2.ReqCreateJPCreditCardOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateJPCreditCardOrder.SerializeToString,
            ),
            'createJPPaypalOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createJPPaypalOrder,
                    request_deserializer=liqi__pb2.ReqCreateJPPaypalOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateJPPaypalOrder.SerializeToString,
            ),
            'createJPAuOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createJPAuOrder,
                    request_deserializer=liqi__pb2.ReqCreateJPAuOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateJPAuOrder.SerializeToString,
            ),
            'createJPDocomoOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createJPDocomoOrder,
                    request_deserializer=liqi__pb2.ReqCreateJPDocomoOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateJPDocomoOrder.SerializeToString,
            ),
            'createJPWebMoneyOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createJPWebMoneyOrder,
                    request_deserializer=liqi__pb2.ReqCreateJPWebMoneyOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateJPWebMoneyOrder.SerializeToString,
            ),
            'createJPSoftbankOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createJPSoftbankOrder,
                    request_deserializer=liqi__pb2.ReqCreateJPSoftbankOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateJPSoftbankOrder.SerializeToString,
            ),
            'createJPPayPayOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createJPPayPayOrder,
                    request_deserializer=liqi__pb2.ReqCreateJPPayPayOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateJPPayPayOrder.SerializeToString,
            ),
            'fetchJPCommonCreditCardOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchJPCommonCreditCardOrder,
                    request_deserializer=liqi__pb2.ReqFetchJPCommonCreditCardOrder.FromString,
                    response_serializer=liqi__pb2.ResFetchJPCommonCreditCardOrder.SerializeToString,
            ),
            'createJPGMOOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createJPGMOOrder,
                    request_deserializer=liqi__pb2.ReqCreateJPGMOOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateJPGMOOrder.SerializeToString,
            ),
            'createENPaypalOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createENPaypalOrder,
                    request_deserializer=liqi__pb2.ReqCreateENPaypalOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateENPaypalOrder.SerializeToString,
            ),
            'createENMasterCardOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createENMasterCardOrder,
                    request_deserializer=liqi__pb2.ReqCreateENMasterCardOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateENMasterCardOrder.SerializeToString,
            ),
            'createENVisaOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createENVisaOrder,
                    request_deserializer=liqi__pb2.ReqCreateENVisaOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateENVisaOrder.SerializeToString,
            ),
            'createENJCBOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createENJCBOrder,
                    request_deserializer=liqi__pb2.ReqCreateENJCBOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateENJCBOrder.SerializeToString,
            ),
            'createENAlipayOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createENAlipayOrder,
                    request_deserializer=liqi__pb2.ReqCreateENAlipayOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateENAlipayOrder.SerializeToString,
            ),
            'createKRPaypalOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createKRPaypalOrder,
                    request_deserializer=liqi__pb2.ReqCreateKRPaypalOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateKRPaypalOrder.SerializeToString,
            ),
            'createKRMasterCardOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createKRMasterCardOrder,
                    request_deserializer=liqi__pb2.ReqCreateKRMasterCardOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateKRMasterCardOrder.SerializeToString,
            ),
            'createKRVisaOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createKRVisaOrder,
                    request_deserializer=liqi__pb2.ReqCreateKRVisaOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateKRVisaOrder.SerializeToString,
            ),
            'createKRJCBOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createKRJCBOrder,
                    request_deserializer=liqi__pb2.ReqCreateKRJCBOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateKRJCBOrder.SerializeToString,
            ),
            'createKRAlipayOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createKRAlipayOrder,
                    request_deserializer=liqi__pb2.ReqCreateKRAlipayOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateKRAlipayOrder.SerializeToString,
            ),
            'createDMMOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createDMMOrder,
                    request_deserializer=liqi__pb2.ReqCreateDMMOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateDmmOrder.SerializeToString,
            ),
            'createIAPOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createIAPOrder,
                    request_deserializer=liqi__pb2.ReqCreateIAPOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateIAPOrder.SerializeToString,
            ),
            'createSteamOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createSteamOrder,
                    request_deserializer=liqi__pb2.ReqCreateSteamOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateSteamOrder.SerializeToString,
            ),
            'verifySteamOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.verifySteamOrder,
                    request_deserializer=liqi__pb2.ReqVerifySteamOrder.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'createMyCardAndroidOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createMyCardAndroidOrder,
                    request_deserializer=liqi__pb2.ReqCreateMyCardOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateMyCardOrder.SerializeToString,
            ),
            'createMyCardWebOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createMyCardWebOrder,
                    request_deserializer=liqi__pb2.ReqCreateMyCardOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateMyCardOrder.SerializeToString,
            ),
            'createPaypalOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createPaypalOrder,
                    request_deserializer=liqi__pb2.ReqCreatePaypalOrder.FromString,
                    response_serializer=liqi__pb2.ResCreatePaypalOrder.SerializeToString,
            ),
            'createXsollaOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createXsollaOrder,
                    request_deserializer=liqi__pb2.ReqCreateXsollaOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateXsollaOrder.SerializeToString,
            ),
            'verifyMyCardOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.verifyMyCardOrder,
                    request_deserializer=liqi__pb2.ReqVerifyMyCardOrder.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'verificationIAPOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.verificationIAPOrder,
                    request_deserializer=liqi__pb2.ReqVerificationIAPOrder.FromString,
                    response_serializer=liqi__pb2.ResVerificationIAPOrder.SerializeToString,
            ),
            'createYostarSDKOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createYostarSDKOrder,
                    request_deserializer=liqi__pb2.ReqCreateYostarOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateYostarOrder.SerializeToString,
            ),
            'createBillingOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.createBillingOrder,
                    request_deserializer=liqi__pb2.ReqCreateBillingOrder.FromString,
                    response_serializer=liqi__pb2.ResCreateBillingOrder.SerializeToString,
            ),
            'solveGooglePlayOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.solveGooglePlayOrder,
                    request_deserializer=liqi__pb2.ReqSolveGooglePlayOrder.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'solveGooglePayOrderV3': grpc.unary_unary_rpc_method_handler(
                    servicer.solveGooglePayOrderV3,
                    request_deserializer=liqi__pb2.ReqSolveGooglePlayOrderV3.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'deliverAA32Order': grpc.unary_unary_rpc_method_handler(
                    servicer.deliverAA32Order,
                    request_deserializer=liqi__pb2.ReqDeliverAA32Order.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchMisc': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchMisc,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResMisc.SerializeToString,
            ),
            'modifySignature': grpc.unary_unary_rpc_method_handler(
                    servicer.modifySignature,
                    request_deserializer=liqi__pb2.ReqModifySignature.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchIDCardInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchIDCardInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResIDCardInfo.SerializeToString,
            ),
            'updateIDCardInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.updateIDCardInfo,
                    request_deserializer=liqi__pb2.ReqUpdateIDCardInfo.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchVipReward': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchVipReward,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResVipReward.SerializeToString,
            ),
            'gainVipReward': grpc.unary_unary_rpc_method_handler(
                    servicer.gainVipReward,
                    request_deserializer=liqi__pb2.ReqGainVipReward.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchRefundOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchRefundOrder,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFetchRefundOrder.SerializeToString,
            ),
            'fetchCustomizedContestList': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCustomizedContestList,
                    request_deserializer=liqi__pb2.ReqFetchCustomizedContestList.FromString,
                    response_serializer=liqi__pb2.ResFetchCustomizedContestList.SerializeToString,
            ),
            'fetchCustomizedContestAuthInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCustomizedContestAuthInfo,
                    request_deserializer=liqi__pb2.ReqFetchCustomizedContestAuthInfo.FromString,
                    response_serializer=liqi__pb2.ResFetchCustomizedContestAuthInfo.SerializeToString,
            ),
            'enterCustomizedContest': grpc.unary_unary_rpc_method_handler(
                    servicer.enterCustomizedContest,
                    request_deserializer=liqi__pb2.ReqEnterCustomizedContest.FromString,
                    response_serializer=liqi__pb2.ResEnterCustomizedContest.SerializeToString,
            ),
            'leaveCustomizedContest': grpc.unary_unary_rpc_method_handler(
                    servicer.leaveCustomizedContest,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchCustomizedContestOnlineInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCustomizedContestOnlineInfo,
                    request_deserializer=liqi__pb2.ReqFetchCustomizedContestOnlineInfo.FromString,
                    response_serializer=liqi__pb2.ResFetchCustomizedContestOnlineInfo.SerializeToString,
            ),
            'fetchCustomizedContestByContestId': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCustomizedContestByContestId,
                    request_deserializer=liqi__pb2.ReqFetchCustomizedContestByContestId.FromString,
                    response_serializer=liqi__pb2.ResFetchCustomizedContestByContestId.SerializeToString,
            ),
            'signupCustomizedContest': grpc.unary_unary_rpc_method_handler(
                    servicer.signupCustomizedContest,
                    request_deserializer=liqi__pb2.ReqSignupCustomizedContest.FromString,
                    response_serializer=liqi__pb2.ResSignupCustomizedContest.SerializeToString,
            ),
            'startCustomizedContest': grpc.unary_unary_rpc_method_handler(
                    servicer.startCustomizedContest,
                    request_deserializer=liqi__pb2.ReqStartCustomizedContest.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'stopCustomizedContest': grpc.unary_unary_rpc_method_handler(
                    servicer.stopCustomizedContest,
                    request_deserializer=liqi__pb2.ReqStopCustomizedContest.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'joinCustomizedContestChatRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.joinCustomizedContestChatRoom,
                    request_deserializer=liqi__pb2.ReqJoinCustomizedContestChatRoom.FromString,
                    response_serializer=liqi__pb2.ResJoinCustomizedContestChatRoom.SerializeToString,
            ),
            'leaveCustomizedContestChatRoom': grpc.unary_unary_rpc_method_handler(
                    servicer.leaveCustomizedContestChatRoom,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'sayChatMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.sayChatMessage,
                    request_deserializer=liqi__pb2.ReqSayChatMessage.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchCustomizedContestGameRecords': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCustomizedContestGameRecords,
                    request_deserializer=liqi__pb2.ReqFetchCustomizedContestGameRecords.FromString,
                    response_serializer=liqi__pb2.ResFetchCustomizedContestGameRecords.SerializeToString,
            ),
            'fetchCustomizedContestGameLiveList': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchCustomizedContestGameLiveList,
                    request_deserializer=liqi__pb2.ReqFetchCustomizedContestGameLiveList.FromString,
                    response_serializer=liqi__pb2.ResFetchCustomizedContestGameLiveList.SerializeToString,
            ),
            'followCustomizedContest': grpc.unary_unary_rpc_method_handler(
                    servicer.followCustomizedContest,
                    request_deserializer=liqi__pb2.ReqTargetCustomizedContest.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'unfollowCustomizedContest': grpc.unary_unary_rpc_method_handler(
                    servicer.unfollowCustomizedContest,
                    request_deserializer=liqi__pb2.ReqTargetCustomizedContest.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchActivityList': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchActivityList,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResActivityList.SerializeToString,
            ),
            'fetchAccountActivityData': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchAccountActivityData,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResAccountActivityData.SerializeToString,
            ),
            'exchangeActivityItem': grpc.unary_unary_rpc_method_handler(
                    servicer.exchangeActivityItem,
                    request_deserializer=liqi__pb2.ReqExchangeActivityItem.FromString,
                    response_serializer=liqi__pb2.ResExchangeActivityItem.SerializeToString,
            ),
            'completeActivityTask': grpc.unary_unary_rpc_method_handler(
                    servicer.completeActivityTask,
                    request_deserializer=liqi__pb2.ReqCompleteActivityTask.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'completeActivityTaskBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.completeActivityTaskBatch,
                    request_deserializer=liqi__pb2.ReqCompleteActivityTaskBatch.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'completeActivityFlipTask': grpc.unary_unary_rpc_method_handler(
                    servicer.completeActivityFlipTask,
                    request_deserializer=liqi__pb2.ReqCompleteActivityTask.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'completePeriodActivityTask': grpc.unary_unary_rpc_method_handler(
                    servicer.completePeriodActivityTask,
                    request_deserializer=liqi__pb2.ReqCompleteActivityTask.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'completePeriodActivityTaskBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.completePeriodActivityTaskBatch,
                    request_deserializer=liqi__pb2.ReqCompletePeriodActivityTaskBatch.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'completeRandomActivityTask': grpc.unary_unary_rpc_method_handler(
                    servicer.completeRandomActivityTask,
                    request_deserializer=liqi__pb2.ReqCompleteActivityTask.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'receiveActivityFlipTask': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveActivityFlipTask,
                    request_deserializer=liqi__pb2.ReqReceiveActivityFlipTask.FromString,
                    response_serializer=liqi__pb2.ResReceiveActivityFlipTask.SerializeToString,
            ),
            'completeSegmentTaskReward': grpc.unary_unary_rpc_method_handler(
                    servicer.completeSegmentTaskReward,
                    request_deserializer=liqi__pb2.ReqCompleteSegmentTaskReward.FromString,
                    response_serializer=liqi__pb2.ResCompleteSegmentTaskReward.SerializeToString,
            ),
            'fetchActivityFlipInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchActivityFlipInfo,
                    request_deserializer=liqi__pb2.ReqFetchActivityFlipInfo.FromString,
                    response_serializer=liqi__pb2.ResFetchActivityFlipInfo.SerializeToString,
            ),
            'gainAccumulatedPointActivityReward': grpc.unary_unary_rpc_method_handler(
                    servicer.gainAccumulatedPointActivityReward,
                    request_deserializer=liqi__pb2.ReqGainAccumulatedPointActivityReward.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'gainMultiPointActivityReward': grpc.unary_unary_rpc_method_handler(
                    servicer.gainMultiPointActivityReward,
                    request_deserializer=liqi__pb2.ReqGainMultiPointActivityReward.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchRankPointLeaderboard': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchRankPointLeaderboard,
                    request_deserializer=liqi__pb2.ReqFetchRankPointLeaderboard.FromString,
                    response_serializer=liqi__pb2.ResFetchRankPointLeaderboard.SerializeToString,
            ),
            'gainRankPointReward': grpc.unary_unary_rpc_method_handler(
                    servicer.gainRankPointReward,
                    request_deserializer=liqi__pb2.ReqGainRankPointReward.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'richmanActivityNextMove': grpc.unary_unary_rpc_method_handler(
                    servicer.richmanActivityNextMove,
                    request_deserializer=liqi__pb2.ReqRichmanNextMove.FromString,
                    response_serializer=liqi__pb2.ResRichmanNextMove.SerializeToString,
            ),
            'richmanAcitivitySpecialMove': grpc.unary_unary_rpc_method_handler(
                    servicer.richmanAcitivitySpecialMove,
                    request_deserializer=liqi__pb2.ReqRichmanSpecialMove.FromString,
                    response_serializer=liqi__pb2.ResRichmanNextMove.SerializeToString,
            ),
            'richmanActivityChestInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.richmanActivityChestInfo,
                    request_deserializer=liqi__pb2.ReqRichmanChestInfo.FromString,
                    response_serializer=liqi__pb2.ResRichmanChestInfo.SerializeToString,
            ),
            'createGameObserveAuth': grpc.unary_unary_rpc_method_handler(
                    servicer.createGameObserveAuth,
                    request_deserializer=liqi__pb2.ReqCreateGameObserveAuth.FromString,
                    response_serializer=liqi__pb2.ResCreateGameObserveAuth.SerializeToString,
            ),
            'refreshGameObserveAuth': grpc.unary_unary_rpc_method_handler(
                    servicer.refreshGameObserveAuth,
                    request_deserializer=liqi__pb2.ReqRefreshGameObserveAuth.FromString,
                    response_serializer=liqi__pb2.ResRefreshGameObserveAuth.SerializeToString,
            ),
            'fetchActivityBuff': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchActivityBuff,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResActivityBuff.SerializeToString,
            ),
            'upgradeActivityBuff': grpc.unary_unary_rpc_method_handler(
                    servicer.upgradeActivityBuff,
                    request_deserializer=liqi__pb2.ReqUpgradeActivityBuff.FromString,
                    response_serializer=liqi__pb2.ResActivityBuff.SerializeToString,
            ),
            'upgradeActivityLevel': grpc.unary_unary_rpc_method_handler(
                    servicer.upgradeActivityLevel,
                    request_deserializer=liqi__pb2.ReqUpgradeActivityLevel.FromString,
                    response_serializer=liqi__pb2.ResUpgradeActivityLevel.SerializeToString,
            ),
            'receiveUpgradeActivityReward': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveUpgradeActivityReward,
                    request_deserializer=liqi__pb2.ReqReceiveUpgradeActivityReward.FromString,
                    response_serializer=liqi__pb2.ResReceiveUpgradeActivityReward.SerializeToString,
            ),
            'upgradeChallenge': grpc.unary_unary_rpc_method_handler(
                    servicer.upgradeChallenge,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResUpgradeChallenge.SerializeToString,
            ),
            'refreshChallenge': grpc.unary_unary_rpc_method_handler(
                    servicer.refreshChallenge,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResRefreshChallenge.SerializeToString,
            ),
            'fetchChallengeInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchChallengeInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFetchChallengeInfo.SerializeToString,
            ),
            'forceCompleteChallengeTask': grpc.unary_unary_rpc_method_handler(
                    servicer.forceCompleteChallengeTask,
                    request_deserializer=liqi__pb2.ReqForceCompleteChallengeTask.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchChallengeSeason': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchChallengeSeason,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResChallengeSeasonInfo.SerializeToString,
            ),
            'receiveChallengeRankReward': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveChallengeRankReward,
                    request_deserializer=liqi__pb2.ReqReceiveChallengeRankReward.FromString,
                    response_serializer=liqi__pb2.ResReceiveChallengeRankReward.SerializeToString,
            ),
            'fetchABMatchInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchABMatchInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFetchABMatch.SerializeToString,
            ),
            'buyInABMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.buyInABMatch,
                    request_deserializer=liqi__pb2.ReqBuyInABMatch.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'receiveABMatchReward': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveABMatchReward,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'quitABMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.quitABMatch,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'startUnifiedMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.startUnifiedMatch,
                    request_deserializer=liqi__pb2.ReqStartUnifiedMatch.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'cancelUnifiedMatch': grpc.unary_unary_rpc_method_handler(
                    servicer.cancelUnifiedMatch,
                    request_deserializer=liqi__pb2.ReqCancelUnifiedMatch.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchGamePointRank': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchGamePointRank,
                    request_deserializer=liqi__pb2.ReqGamePointRank.FromString,
                    response_serializer=liqi__pb2.ResGamePointRank.SerializeToString,
            ),
            'fetchSelfGamePointRank': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchSelfGamePointRank,
                    request_deserializer=liqi__pb2.ReqGamePointRank.FromString,
                    response_serializer=liqi__pb2.ResFetchSelfGamePointRank.SerializeToString,
            ),
            'readSNS': grpc.unary_unary_rpc_method_handler(
                    servicer.readSNS,
                    request_deserializer=liqi__pb2.ReqReadSNS.FromString,
                    response_serializer=liqi__pb2.ResReadSNS.SerializeToString,
            ),
            'replySNS': grpc.unary_unary_rpc_method_handler(
                    servicer.replySNS,
                    request_deserializer=liqi__pb2.ReqReplySNS.FromString,
                    response_serializer=liqi__pb2.ResReplySNS.SerializeToString,
            ),
            'likeSNS': grpc.unary_unary_rpc_method_handler(
                    servicer.likeSNS,
                    request_deserializer=liqi__pb2.ReqLikeSNS.FromString,
                    response_serializer=liqi__pb2.ResLikeSNS.SerializeToString,
            ),
            'digMine': grpc.unary_unary_rpc_method_handler(
                    servicer.digMine,
                    request_deserializer=liqi__pb2.ReqDigMine.FromString,
                    response_serializer=liqi__pb2.ResDigMine.SerializeToString,
            ),
            'fetchLastPrivacy': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchLastPrivacy,
                    request_deserializer=liqi__pb2.ReqFetchLastPrivacy.FromString,
                    response_serializer=liqi__pb2.ResFetchLastPrivacy.SerializeToString,
            ),
            'checkPrivacy': grpc.unary_unary_rpc_method_handler(
                    servicer.checkPrivacy,
                    request_deserializer=liqi__pb2.ReqCheckPrivacy.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'responseCaptcha': grpc.unary_unary_rpc_method_handler(
                    servicer.responseCaptcha,
                    request_deserializer=liqi__pb2.ReqResponseCaptcha.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchRPGBattleHistory': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchRPGBattleHistory,
                    request_deserializer=liqi__pb2.ReqFetchRPGBattleHistory.FromString,
                    response_serializer=liqi__pb2.ResFetchRPGBattleHistory.SerializeToString,
            ),
            'fetchRPGBattleHistoryV2': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchRPGBattleHistoryV2,
                    request_deserializer=liqi__pb2.ReqFetchRPGBattleHistory.FromString,
                    response_serializer=liqi__pb2.ResFetchRPGBattleHistoryV2.SerializeToString,
            ),
            'receiveRPGRewards': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveRPGRewards,
                    request_deserializer=liqi__pb2.ReqReceiveRPGRewards.FromString,
                    response_serializer=liqi__pb2.ResReceiveRPGRewards.SerializeToString,
            ),
            'receiveRPGReward': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveRPGReward,
                    request_deserializer=liqi__pb2.ReqReceiveRPGReward.FromString,
                    response_serializer=liqi__pb2.ResReceiveRPGRewards.SerializeToString,
            ),
            'buyArenaTicket': grpc.unary_unary_rpc_method_handler(
                    servicer.buyArenaTicket,
                    request_deserializer=liqi__pb2.ReqBuyArenaTicket.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'enterArena': grpc.unary_unary_rpc_method_handler(
                    servicer.enterArena,
                    request_deserializer=liqi__pb2.ReqEnterArena.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'receiveArenaReward': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveArenaReward,
                    request_deserializer=liqi__pb2.ReqArenaReward.FromString,
                    response_serializer=liqi__pb2.ResArenaReward.SerializeToString,
            ),
            'fetchOBToken': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchOBToken,
                    request_deserializer=liqi__pb2.ReqFetchOBToken.FromString,
                    response_serializer=liqi__pb2.ResFetchOBToken.SerializeToString,
            ),
            'receiveCharacterRewards': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveCharacterRewards,
                    request_deserializer=liqi__pb2.ReqReceiveCharacterRewards.FromString,
                    response_serializer=liqi__pb2.ResReceiveCharacterRewards.SerializeToString,
            ),
            'feedActivityFeed': grpc.unary_unary_rpc_method_handler(
                    servicer.feedActivityFeed,
                    request_deserializer=liqi__pb2.ReqFeedActivityFeed.FromString,
                    response_serializer=liqi__pb2.ResFeedActivityFeed.SerializeToString,
            ),
            'sendActivityGiftToFriend': grpc.unary_unary_rpc_method_handler(
                    servicer.sendActivityGiftToFriend,
                    request_deserializer=liqi__pb2.ReqSendActivityGiftToFriend.FromString,
                    response_serializer=liqi__pb2.ResSendActivityGiftToFriend.SerializeToString,
            ),
            'receiveActivityGift': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveActivityGift,
                    request_deserializer=liqi__pb2.ReqReceiveActivityGift.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'receiveAllActivityGift': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveAllActivityGift,
                    request_deserializer=liqi__pb2.ReqReceiveAllActivityGift.FromString,
                    response_serializer=liqi__pb2.ResReceiveAllActivityGift.SerializeToString,
            ),
            'fetchFriendGiftActivityData': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchFriendGiftActivityData,
                    request_deserializer=liqi__pb2.ReqFetchFriendGiftActivityData.FromString,
                    response_serializer=liqi__pb2.ResFetchFriendGiftActivityData.SerializeToString,
            ),
            'openPreChestItem': grpc.unary_unary_rpc_method_handler(
                    servicer.openPreChestItem,
                    request_deserializer=liqi__pb2.ReqOpenPreChestItem.FromString,
                    response_serializer=liqi__pb2.ResOpenPreChestItem.SerializeToString,
            ),
            'fetchVoteActivity': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchVoteActivity,
                    request_deserializer=liqi__pb2.ReqFetchVoteActivity.FromString,
                    response_serializer=liqi__pb2.ResFetchVoteActivity.SerializeToString,
            ),
            'voteActivity': grpc.unary_unary_rpc_method_handler(
                    servicer.voteActivity,
                    request_deserializer=liqi__pb2.ReqVoteActivity.FromString,
                    response_serializer=liqi__pb2.ResVoteActivity.SerializeToString,
            ),
            'unlockActivitySpot': grpc.unary_unary_rpc_method_handler(
                    servicer.unlockActivitySpot,
                    request_deserializer=liqi__pb2.ReqUnlockActivitySpot.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'unlockActivitySpotEnding': grpc.unary_unary_rpc_method_handler(
                    servicer.unlockActivitySpotEnding,
                    request_deserializer=liqi__pb2.ReqUnlockActivitySpotEnding.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'receiveActivitySpotReward': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveActivitySpotReward,
                    request_deserializer=liqi__pb2.ReqReceiveActivitySpotReward.FromString,
                    response_serializer=liqi__pb2.ResReceiveActivitySpotReward.SerializeToString,
            ),
            'deleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.deleteAccount,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResDeleteAccount.SerializeToString,
            ),
            'cancelDeleteAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.cancelDeleteAccount,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'logReport': grpc.unary_unary_rpc_method_handler(
                    servicer.logReport,
                    request_deserializer=liqi__pb2.ReqLogReport.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'bindOauth2': grpc.unary_unary_rpc_method_handler(
                    servicer.bindOauth2,
                    request_deserializer=liqi__pb2.ReqBindOauth2.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchOauth2Info': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchOauth2Info,
                    request_deserializer=liqi__pb2.ReqFetchOauth2.FromString,
                    response_serializer=liqi__pb2.ResFetchOauth2.SerializeToString,
            ),
            'setLoadingImage': grpc.unary_unary_rpc_method_handler(
                    servicer.setLoadingImage,
                    request_deserializer=liqi__pb2.ReqSetLoadingImage.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchShopInterval': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchShopInterval,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFetchShopInterval.SerializeToString,
            ),
            'fetchActivityInterval': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchActivityInterval,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFetchActivityInterval.SerializeToString,
            ),
            'fetchRecentFriend': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchRecentFriend,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResFetchrecentFriend.SerializeToString,
            ),
            'openGacha': grpc.unary_unary_rpc_method_handler(
                    servicer.openGacha,
                    request_deserializer=liqi__pb2.ReqOpenGacha.FromString,
                    response_serializer=liqi__pb2.ResOpenGacha.SerializeToString,
            ),
            'taskRequest': grpc.unary_unary_rpc_method_handler(
                    servicer.taskRequest,
                    request_deserializer=liqi__pb2.ReqTaskRequest.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'simulationActivityTrain': grpc.unary_unary_rpc_method_handler(
                    servicer.simulationActivityTrain,
                    request_deserializer=liqi__pb2.ReqSimulationActivityTrain.FromString,
                    response_serializer=liqi__pb2.ResSimulationActivityTrain.SerializeToString,
            ),
            'fetchSimulationGameRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchSimulationGameRecord,
                    request_deserializer=liqi__pb2.ReqFetchSimulationGameRecord.FromString,
                    response_serializer=liqi__pb2.ResFetchSimulationGameRecord.SerializeToString,
            ),
            'startSimulationActivityGame': grpc.unary_unary_rpc_method_handler(
                    servicer.startSimulationActivityGame,
                    request_deserializer=liqi__pb2.ReqStartSimulationActivityGame.FromString,
                    response_serializer=liqi__pb2.ResStartSimulationActivityGame.SerializeToString,
            ),
            'fetchSimulationGameRank': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchSimulationGameRank,
                    request_deserializer=liqi__pb2.ReqFetchSimulationGameRank.FromString,
                    response_serializer=liqi__pb2.ResFetchSimulationGameRank.SerializeToString,
            ),
            'generateCombiningCraft': grpc.unary_unary_rpc_method_handler(
                    servicer.generateCombiningCraft,
                    request_deserializer=liqi__pb2.ReqGenerateCombiningCraft.FromString,
                    response_serializer=liqi__pb2.ResGenerateCombiningCraft.SerializeToString,
            ),
            'moveCombiningCraft': grpc.unary_unary_rpc_method_handler(
                    servicer.moveCombiningCraft,
                    request_deserializer=liqi__pb2.ReqMoveCombiningCraft.FromString,
                    response_serializer=liqi__pb2.ResMoveCombiningCraft.SerializeToString,
            ),
            'combiningRecycleCraft': grpc.unary_unary_rpc_method_handler(
                    servicer.combiningRecycleCraft,
                    request_deserializer=liqi__pb2.ReqCombiningRecycleCraft.FromString,
                    response_serializer=liqi__pb2.ResCombiningRecycleCraft.SerializeToString,
            ),
            'recoverCombiningRecycle': grpc.unary_unary_rpc_method_handler(
                    servicer.recoverCombiningRecycle,
                    request_deserializer=liqi__pb2.ReqRecoverCombiningRecycle.FromString,
                    response_serializer=liqi__pb2.ResRecoverCombiningRecycle.SerializeToString,
            ),
            'finishCombiningOrder': grpc.unary_unary_rpc_method_handler(
                    servicer.finishCombiningOrder,
                    request_deserializer=liqi__pb2.ReqFinishCombiningOrder.FromString,
                    response_serializer=liqi__pb2.ResFinishCombiningOrder.SerializeToString,
            ),
            'upgradeVillageBuilding': grpc.unary_unary_rpc_method_handler(
                    servicer.upgradeVillageBuilding,
                    request_deserializer=liqi__pb2.ReqUpgradeVillageBuilding.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'receiveVillageBuildingReward': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveVillageBuildingReward,
                    request_deserializer=liqi__pb2.ReqReceiveVillageBuildingReward.FromString,
                    response_serializer=liqi__pb2.ResReceiveVillageBuildingReward.SerializeToString,
            ),
            'startVillageTrip': grpc.unary_unary_rpc_method_handler(
                    servicer.startVillageTrip,
                    request_deserializer=liqi__pb2.ReqStartVillageTrip.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'receiveVillageTripReward': grpc.unary_unary_rpc_method_handler(
                    servicer.receiveVillageTripReward,
                    request_deserializer=liqi__pb2.ReqReceiveVillageTripReward.FromString,
                    response_serializer=liqi__pb2.ResReceiveVillageTripReward.SerializeToString,
            ),
            'completeVillageTask': grpc.unary_unary_rpc_method_handler(
                    servicer.completeVillageTask,
                    request_deserializer=liqi__pb2.ReqCompleteVillageTask.FromString,
                    response_serializer=liqi__pb2.ResCompleteVillageTask.SerializeToString,
            ),
            'getFriendVillageData': grpc.unary_unary_rpc_method_handler(
                    servicer.getFriendVillageData,
                    request_deserializer=liqi__pb2.ReqGetFriendVillageData.FromString,
                    response_serializer=liqi__pb2.ResGetFriendVillageData.SerializeToString,
            ),
            'setVillageWorker': grpc.unary_unary_rpc_method_handler(
                    servicer.setVillageWorker,
                    request_deserializer=liqi__pb2.ReqSetVillageWorker.FromString,
                    response_serializer=liqi__pb2.ResSetVillageWorker.SerializeToString,
            ),
            'nextRoundVillage': grpc.unary_unary_rpc_method_handler(
                    servicer.nextRoundVillage,
                    request_deserializer=liqi__pb2.ReqNextRoundVillage.FromString,
                    response_serializer=liqi__pb2.ResNextRoundVillage.SerializeToString,
            ),
            'resolveFestivalActivityProposal': grpc.unary_unary_rpc_method_handler(
                    servicer.resolveFestivalActivityProposal,
                    request_deserializer=liqi__pb2.ReqResolveFestivalActivityProposal.FromString,
                    response_serializer=liqi__pb2.ResResolveFestivalActivityProposal.SerializeToString,
            ),
            'resolveFestivalActivityEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.resolveFestivalActivityEvent,
                    request_deserializer=liqi__pb2.ReqResolveFestivalActivityEvent.FromString,
                    response_serializer=liqi__pb2.ResResolveFestivalActivityEvent.SerializeToString,
            ),
            'buyFestivalProposal': grpc.unary_unary_rpc_method_handler(
                    servicer.buyFestivalProposal,
                    request_deserializer=liqi__pb2.ReqBuyFestivalProposal.FromString,
                    response_serializer=liqi__pb2.ResBuyFestivalProposal.SerializeToString,
            ),
            'islandActivityMove': grpc.unary_unary_rpc_method_handler(
                    servicer.islandActivityMove,
                    request_deserializer=liqi__pb2.ReqIslandActivityMove.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'islandActivityBuy': grpc.unary_unary_rpc_method_handler(
                    servicer.islandActivityBuy,
                    request_deserializer=liqi__pb2.ReqIslandActivityBuy.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'islandActivitySell': grpc.unary_unary_rpc_method_handler(
                    servicer.islandActivitySell,
                    request_deserializer=liqi__pb2.ReqIslandActivitySell.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'islandActivityTidyBag': grpc.unary_unary_rpc_method_handler(
                    servicer.islandActivityTidyBag,
                    request_deserializer=liqi__pb2.ReqIslandActivityTidyBag.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'islandActivityUnlockBagGrid': grpc.unary_unary_rpc_method_handler(
                    servicer.islandActivityUnlockBagGrid,
                    request_deserializer=liqi__pb2.ReqIslandActivityUnlockBagGrid.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'createCustomizedContest': grpc.unary_unary_rpc_method_handler(
                    servicer.createCustomizedContest,
                    request_deserializer=liqi__pb2.ReqCreateCustomizedContest.FromString,
                    response_serializer=liqi__pb2.ResCreateCustomizedContest.SerializeToString,
            ),
            'fetchManagerCustomizedContestList': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchManagerCustomizedContestList,
                    request_deserializer=liqi__pb2.ReqFetchmanagerCustomizedContestList.FromString,
                    response_serializer=liqi__pb2.ResFetchManagerCustomizedContestList.SerializeToString,
            ),
            'fetchManagerCustomizedContest': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchManagerCustomizedContest,
                    request_deserializer=liqi__pb2.ReqFetchManagerCustomizedContest.FromString,
                    response_serializer=liqi__pb2.ResFetchManagerCustomizedContest.SerializeToString,
            ),
            'updateManagerCustomizedContest': grpc.unary_unary_rpc_method_handler(
                    servicer.updateManagerCustomizedContest,
                    request_deserializer=liqi__pb2.ReqUpdateManagerCustomizedContest.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchContestPlayerRank': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchContestPlayerRank,
                    request_deserializer=liqi__pb2.ReqFetchContestPlayerRank.FromString,
                    response_serializer=liqi__pb2.ResFetchContestPlayerRank.SerializeToString,
            ),
            'fetchReadyPlayerList': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchReadyPlayerList,
                    request_deserializer=liqi__pb2.ReqFetchReadyPlayerList.FromString,
                    response_serializer=liqi__pb2.ResFetchReadyPlayerList.SerializeToString,
            ),
            'createGamePlan': grpc.unary_unary_rpc_method_handler(
                    servicer.createGamePlan,
                    request_deserializer=liqi__pb2.ReqCreateGamePlan.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'generateContestManagerLoginCode': grpc.unary_unary_rpc_method_handler(
                    servicer.generateContestManagerLoginCode,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResGenerateContestManagerLoginCode.SerializeToString,
            ),
            'amuletActivityStartGame': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivityStartGame,
                    request_deserializer=liqi__pb2.ReqAmuletActivityStartGame.FromString,
                    response_serializer=liqi__pb2.ResAmuletActivityStartGame.SerializeToString,
            ),
            'amuletActivityOperate': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivityOperate,
                    request_deserializer=liqi__pb2.ReqAmuletActivityOperate.FromString,
                    response_serializer=liqi__pb2.ResAmuletActivityOperate.SerializeToString,
            ),
            'amuletActivityChangeHands': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivityChangeHands,
                    request_deserializer=liqi__pb2.ReqAmuletActivityChangeHands.FromString,
                    response_serializer=liqi__pb2.ResAmuletActivityChangeHands.SerializeToString,
            ),
            'amuletActivityUpgrade': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivityUpgrade,
                    request_deserializer=liqi__pb2.ReqAmuletActivityUpgrade.FromString,
                    response_serializer=liqi__pb2.ResAmuletActivityUpgrade.SerializeToString,
            ),
            'amuletActivityBuy': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivityBuy,
                    request_deserializer=liqi__pb2.ReqAmuletActivityBuy.FromString,
                    response_serializer=liqi__pb2.ResAmuletActivityBuy.SerializeToString,
            ),
            'amuletActivitySelectPack': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivitySelectPack,
                    request_deserializer=liqi__pb2.ReqAmuletActivitySelectPack.FromString,
                    response_serializer=liqi__pb2.ResAmuletActivitySelectPack.SerializeToString,
            ),
            'amuletActivitySellEffect': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivitySellEffect,
                    request_deserializer=liqi__pb2.ReqAmuletActivitySellEffect.FromString,
                    response_serializer=liqi__pb2.ResAmuletActivitySellEffect.SerializeToString,
            ),
            'amuletActivityEffectSort': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivityEffectSort,
                    request_deserializer=liqi__pb2.ReqAmuletActivityEffectSort.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'amuletActivityGiveup': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivityGiveup,
                    request_deserializer=liqi__pb2.ReqAmuletActivityGiveup.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'amuletActivityRefreshShop': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivityRefreshShop,
                    request_deserializer=liqi__pb2.ReqAmuletActivityRefreshShop.FromString,
                    response_serializer=liqi__pb2.ResAmuletActivityRefreshShop.SerializeToString,
            ),
            'amuletActivitySelectFreeEffect': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivitySelectFreeEffect,
                    request_deserializer=liqi__pb2.ReqAmuletActivitySelectFreeEffect.FromString,
                    response_serializer=liqi__pb2.ResAmuletActivitySelectFreeEffect.SerializeToString,
            ),
            'amuletActivityUpgradeShopBuff': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivityUpgradeShopBuff,
                    request_deserializer=liqi__pb2.ReqAmuletActivityUpgradeShopBuff.FromString,
                    response_serializer=liqi__pb2.ResAmuletActivityUpgradeShopBuff.SerializeToString,
            ),
            'amuletActivityEndShopping': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivityEndShopping,
                    request_deserializer=liqi__pb2.ReqAmuletActivityEndShopping.FromString,
                    response_serializer=liqi__pb2.ResAmuletActivityEndShopping.SerializeToString,
            ),
            'amuletActivitySetSkillLevel': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivitySetSkillLevel,
                    request_deserializer=liqi__pb2.ReqAmuletActivitySetSkillLevel.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'amuletActivityMaintainInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.amuletActivityMaintainInfo,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResAmuletActivityMaintainInfo.SerializeToString,
            ),
            'storyActivityUnlock': grpc.unary_unary_rpc_method_handler(
                    servicer.storyActivityUnlock,
                    request_deserializer=liqi__pb2.ReqStoryActivityUnlock.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'storyActivityUnlockEnding': grpc.unary_unary_rpc_method_handler(
                    servicer.storyActivityUnlockEnding,
                    request_deserializer=liqi__pb2.ReqStoryActivityUnlockEnding.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'storyActivityReceiveEndingReward': grpc.unary_unary_rpc_method_handler(
                    servicer.storyActivityReceiveEndingReward,
                    request_deserializer=liqi__pb2.ReqStoryActivityReceiveEndingReward.FromString,
                    response_serializer=liqi__pb2.ResStoryReward.SerializeToString,
            ),
            'storyActivityReceiveFinishReward': grpc.unary_unary_rpc_method_handler(
                    servicer.storyActivityReceiveFinishReward,
                    request_deserializer=liqi__pb2.ReqStoryActivityReceiveFinishReward.FromString,
                    response_serializer=liqi__pb2.ResStoryReward.SerializeToString,
            ),
            'storyActivityReceiveAllFinishReward': grpc.unary_unary_rpc_method_handler(
                    servicer.storyActivityReceiveAllFinishReward,
                    request_deserializer=liqi__pb2.ReqStoryActivityReceiveAllFinishReward.FromString,
                    response_serializer=liqi__pb2.ResStoryReward.SerializeToString,
            ),
            'storyActivityUnlockEndingAndReceive': grpc.unary_unary_rpc_method_handler(
                    servicer.storyActivityUnlockEndingAndReceive,
                    request_deserializer=liqi__pb2.ReqStoryActivityUnlockEndingAndReceive.FromString,
                    response_serializer=liqi__pb2.ResStoryActivityUnlockEndingAndReceive.SerializeToString,
            ),
            'fetchActivityRank': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchActivityRank,
                    request_deserializer=liqi__pb2.ReqFetchActivityRank.FromString,
                    response_serializer=liqi__pb2.ResFetchActivityRank.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lq.Lobby', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('lq.Lobby', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Lobby(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def fetchConnectionInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchConnectionInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResConnectionInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchQueueInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchQueueInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFetchQueueInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def cancelQueue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/cancelQueue',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def openidCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/openidCheck',
            liqi__pb2.ReqOpenidCheck.SerializeToString,
            liqi__pb2.ResOauth2Check.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def signup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/signup',
            liqi__pb2.ReqSignupAccount.SerializeToString,
            liqi__pb2.ResSignupAccount.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/login',
            liqi__pb2.ReqLogin.SerializeToString,
            liqi__pb2.ResLogin.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFetchInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def loginSuccess(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/loginSuccess',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def emailLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/emailLogin',
            liqi__pb2.ReqEmailLogin.SerializeToString,
            liqi__pb2.ResLogin.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def oauth2Auth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/oauth2Auth',
            liqi__pb2.ReqOauth2Auth.SerializeToString,
            liqi__pb2.ResOauth2Auth.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def oauth2Check(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/oauth2Check',
            liqi__pb2.ReqOauth2Check.SerializeToString,
            liqi__pb2.ResOauth2Check.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def oauth2Signup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/oauth2Signup',
            liqi__pb2.ReqOauth2Signup.SerializeToString,
            liqi__pb2.ResOauth2Signup.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def oauth2Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/oauth2Login',
            liqi__pb2.ReqOauth2Login.SerializeToString,
            liqi__pb2.ResLogin.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def dmmPreLogin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/dmmPreLogin',
            liqi__pb2.ReqDMMPreLogin.SerializeToString,
            liqi__pb2.ResDMMPreLogin.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createPhoneVerifyCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createPhoneVerifyCode',
            liqi__pb2.ReqCreatePhoneVerifyCode.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createEmailVerifyCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createEmailVerifyCode',
            liqi__pb2.ReqCreateEmailVerifyCode.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def verfifyCodeForSecure(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/verfifyCodeForSecure',
            liqi__pb2.ReqVerifyCodeForSecure.SerializeToString,
            liqi__pb2.ResVerfiyCodeForSecure.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def bindPhoneNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/bindPhoneNumber',
            liqi__pb2.ReqBindPhoneNumber.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def unbindPhoneNumber(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/unbindPhoneNumber',
            liqi__pb2.ReqUnbindPhoneNumber.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchPhoneLoginBind(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchPhoneLoginBind',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFetchPhoneLoginBind.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createPhoneLoginBind(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createPhoneLoginBind',
            liqi__pb2.ReqCreatePhoneLoginBind.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def bindEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/bindEmail',
            liqi__pb2.ReqBindEmail.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def modifyPassword(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/modifyPassword',
            liqi__pb2.ReqModifyPassword.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def bindAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/bindAccount',
            liqi__pb2.ReqBindAccount.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/logout',
            liqi__pb2.ReqLogout.SerializeToString,
            liqi__pb2.ResLogout.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def heatbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/heatbeat',
            liqi__pb2.ReqHeatBeat.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def loginBeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/loginBeat',
            liqi__pb2.ReqLoginBeat.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createNickname(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createNickname',
            liqi__pb2.ReqCreateNickname.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def modifyNickname(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/modifyNickname',
            liqi__pb2.ReqModifyNickname.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def modifyBirthday(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/modifyBirthday',
            liqi__pb2.ReqModifyBirthday.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchRoom',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResSelfRoom.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchGamingInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchGamingInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFetchGamingInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createRoom',
            liqi__pb2.ReqCreateRoom.SerializeToString,
            liqi__pb2.ResCreateRoom.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def joinRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/joinRoom',
            liqi__pb2.ReqJoinRoom.SerializeToString,
            liqi__pb2.ResJoinRoom.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def leaveRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/leaveRoom',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def readyPlay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/readyPlay',
            liqi__pb2.ReqRoomReady.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def dressingStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/dressingStatus',
            liqi__pb2.ReqRoomDressing.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def startRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/startRoom',
            liqi__pb2.ReqRoomStart.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def kickPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/kickPlayer',
            liqi__pb2.ReqRoomKick.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def modifyRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/modifyRoom',
            liqi__pb2.ReqModifyRoom.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def matchGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/matchGame',
            liqi__pb2.ReqJoinMatchQueue.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def cancelMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/cancelMatch',
            liqi__pb2.ReqCancelMatchQueue.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchAccountInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchAccountInfo',
            liqi__pb2.ReqAccountInfo.SerializeToString,
            liqi__pb2.ResAccountInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def changeAvatar(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/changeAvatar',
            liqi__pb2.ReqChangeAvatar.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveVersionReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveVersionReward',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchAccountStatisticInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchAccountStatisticInfo',
            liqi__pb2.ReqAccountStatisticInfo.SerializeToString,
            liqi__pb2.ResAccountStatisticInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchAccountChallengeRankInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchAccountChallengeRankInfo',
            liqi__pb2.ReqAccountInfo.SerializeToString,
            liqi__pb2.ResAccountChallengeRankInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchAccountCharacterInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchAccountCharacterInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResAccountCharacterInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def shopPurchase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/shopPurchase',
            liqi__pb2.ReqShopPurchase.SerializeToString,
            liqi__pb2.ResShopPurchase.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchGameRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchGameRecord',
            liqi__pb2.ReqGameRecord.SerializeToString,
            liqi__pb2.ResGameRecord.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def readGameRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/readGameRecord',
            liqi__pb2.ReqGameRecord.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchGameRecordList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchGameRecordList',
            liqi__pb2.ReqGameRecordList.SerializeToString,
            liqi__pb2.ResGameRecordList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCollectedGameRecordList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCollectedGameRecordList',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCollectedGameRecordList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchGameRecordsDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchGameRecordsDetail',
            liqi__pb2.ReqGameRecordsDetail.SerializeToString,
            liqi__pb2.ResGameRecordsDetail.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def addCollectedGameRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/addCollectedGameRecord',
            liqi__pb2.ReqAddCollectedGameRecord.SerializeToString,
            liqi__pb2.ResAddCollectedGameRecord.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def removeCollectedGameRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/removeCollectedGameRecord',
            liqi__pb2.ReqRemoveCollectedGameRecord.SerializeToString,
            liqi__pb2.ResRemoveCollectedGameRecord.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def changeCollectedGameRecordRemarks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/changeCollectedGameRecordRemarks',
            liqi__pb2.ReqChangeCollectedGameRecordRemarks.SerializeToString,
            liqi__pb2.ResChangeCollectedGameRecordRemarks.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchLevelLeaderboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchLevelLeaderboard',
            liqi__pb2.ReqLevelLeaderboard.SerializeToString,
            liqi__pb2.ResLevelLeaderboard.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchChallengeLeaderboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchChallengeLeaderboard',
            liqi__pb2.ReqChallangeLeaderboard.SerializeToString,
            liqi__pb2.ResChallengeLeaderboard.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchMutiChallengeLevel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchMutiChallengeLevel',
            liqi__pb2.ReqMutiChallengeLevel.SerializeToString,
            liqi__pb2.ResMutiChallengeLevel.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchMultiAccountBrief(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchMultiAccountBrief',
            liqi__pb2.ReqMultiAccountId.SerializeToString,
            liqi__pb2.ResMultiAccountBrief.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchFriendList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchFriendList',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFriendList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchFriendApplyList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchFriendApplyList',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFriendApplyList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def applyFriend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/applyFriend',
            liqi__pb2.ReqApplyFriend.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def handleFriendApply(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/handleFriendApply',
            liqi__pb2.ReqHandleFriendApply.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def removeFriend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/removeFriend',
            liqi__pb2.ReqRemoveFriend.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def searchAccountById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/searchAccountById',
            liqi__pb2.ReqSearchAccountById.SerializeToString,
            liqi__pb2.ResSearchAccountById.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def searchAccountByPattern(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/searchAccountByPattern',
            liqi__pb2.ReqSearchAccountByPattern.SerializeToString,
            liqi__pb2.ResSearchAccountByPattern.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchAccountState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchAccountState',
            liqi__pb2.ReqAccountList.SerializeToString,
            liqi__pb2.ResAccountStates.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchBagInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchBagInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResBagInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def useBagItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/useBagItem',
            liqi__pb2.ReqUseBagItem.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def openManualItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/openManualItem',
            liqi__pb2.ReqOpenManualItem.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def openRandomRewardItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/openRandomRewardItem',
            liqi__pb2.ReqOpenRandomRewardItem.SerializeToString,
            liqi__pb2.ResOpenRandomRewardItem.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def openAllRewardItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/openAllRewardItem',
            liqi__pb2.ReqOpenAllRewardItem.SerializeToString,
            liqi__pb2.ResOpenAllRewardItem.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def composeShard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/composeShard',
            liqi__pb2.ReqComposeShard.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchAnnouncement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchAnnouncement',
            liqi__pb2.ReqFetchAnnouncement.SerializeToString,
            liqi__pb2.ResAnnouncement.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def readAnnouncement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/readAnnouncement',
            liqi__pb2.ReqReadAnnouncement.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchMailInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchMailInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResMailInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def readMail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/readMail',
            liqi__pb2.ReqReadMail.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteMail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/deleteMail',
            liqi__pb2.ReqDeleteMail.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def takeAttachmentFromMail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/takeAttachmentFromMail',
            liqi__pb2.ReqTakeAttachment.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveAchievementReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveAchievementReward',
            liqi__pb2.ReqReceiveAchievementReward.SerializeToString,
            liqi__pb2.ResReceiveAchievementReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveAchievementGroupReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveAchievementGroupReward',
            liqi__pb2.ReqReceiveAchievementGroupReward.SerializeToString,
            liqi__pb2.ResReceiveAchievementGroupReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchAchievementRate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchAchievementRate',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFetchAchievementRate.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchAchievement(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchAchievement',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResAchievement.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def buyShiLian(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/buyShiLian',
            liqi__pb2.ReqBuyShiLian.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def matchShiLian(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/matchShiLian',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def goNextShiLian(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/goNextShiLian',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateClientValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/updateClientValue',
            liqi__pb2.ReqUpdateClientValue.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchClientValue(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchClientValue',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResClientValue.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clientMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/clientMessage',
            liqi__pb2.ReqClientMessage.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCurrentMatchInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCurrentMatchInfo',
            liqi__pb2.ReqCurrentMatchInfo.SerializeToString,
            liqi__pb2.ResCurrentMatchInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def userComplain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/userComplain',
            liqi__pb2.ReqUserComplain.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchReviveCoinInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchReviveCoinInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResReviveCoinInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def gainReviveCoin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/gainReviveCoin',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchDailyTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchDailyTask',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResDailyTask.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def refreshDailyTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/refreshDailyTask',
            liqi__pb2.ReqRefreshDailyTask.SerializeToString,
            liqi__pb2.ResRefreshDailyTask.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def useGiftCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/useGiftCode',
            liqi__pb2.ReqUseGiftCode.SerializeToString,
            liqi__pb2.ResUseGiftCode.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def useSpecialGiftCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/useSpecialGiftCode',
            liqi__pb2.ReqUseGiftCode.SerializeToString,
            liqi__pb2.ResUseSpecialGiftCode.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchTitleList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchTitleList',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResTitleList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def useTitle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/useTitle',
            liqi__pb2.ReqUseTitle.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def sendClientMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/sendClientMessage',
            liqi__pb2.ReqSendClientMessage.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchGameLiveInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchGameLiveInfo',
            liqi__pb2.ReqGameLiveInfo.SerializeToString,
            liqi__pb2.ResGameLiveInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchGameLiveLeftSegment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchGameLiveLeftSegment',
            liqi__pb2.ReqGameLiveLeftSegment.SerializeToString,
            liqi__pb2.ResGameLiveLeftSegment.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchGameLiveList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchGameLiveList',
            liqi__pb2.ReqGameLiveList.SerializeToString,
            liqi__pb2.ResGameLiveList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCommentSetting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCommentSetting',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommentSetting.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateCommentSetting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/updateCommentSetting',
            liqi__pb2.ReqUpdateCommentSetting.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCommentList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCommentList',
            liqi__pb2.ReqFetchCommentList.SerializeToString,
            liqi__pb2.ResFetchCommentList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCommentContent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCommentContent',
            liqi__pb2.ReqFetchCommentContent.SerializeToString,
            liqi__pb2.ResFetchCommentContent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def leaveComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/leaveComment',
            liqi__pb2.ReqLeaveComment.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/deleteComment',
            liqi__pb2.ReqDeleteComment.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateReadComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/updateReadComment',
            liqi__pb2.ReqUpdateReadComment.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchRollingNotice(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchRollingNotice',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ReqRollingNotice.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchServerTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchServerTime',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResServerTime.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchPlatformProducts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchPlatformProducts',
            liqi__pb2.ReqPlatformBillingProducts.SerializeToString,
            liqi__pb2.ResPlatformBillingProducts.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def cancelGooglePlayOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/cancelGooglePlayOrder',
            liqi__pb2.ReqCancelGooglePlayOrder.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def openChest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/openChest',
            liqi__pb2.ReqOpenChest.SerializeToString,
            liqi__pb2.ResOpenChest.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def buyFromChestShop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/buyFromChestShop',
            liqi__pb2.ReqBuyFromChestShop.SerializeToString,
            liqi__pb2.ResBuyFromChestShop.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchDailySignInInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchDailySignInInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResDailySignInInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def doDailySignIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/doDailySignIn',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def doActivitySignIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/doActivitySignIn',
            liqi__pb2.ReqDoActivitySignIn.SerializeToString,
            liqi__pb2.ResDoActivitySignIn.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCharacterInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCharacterInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCharacterInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateCharacterSort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/updateCharacterSort',
            liqi__pb2.ReqUpdateCharacterSort.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def changeMainCharacter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/changeMainCharacter',
            liqi__pb2.ReqChangeMainCharacter.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def changeCharacterSkin(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/changeCharacterSkin',
            liqi__pb2.ReqChangeCharacterSkin.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def changeCharacterView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/changeCharacterView',
            liqi__pb2.ReqChangeCharacterView.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setHiddenCharacter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/setHiddenCharacter',
            liqi__pb2.ReqSetHiddenCharacter.SerializeToString,
            liqi__pb2.ResSetHiddenCharacter.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def sendGiftToCharacter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/sendGiftToCharacter',
            liqi__pb2.ReqSendGiftToCharacter.SerializeToString,
            liqi__pb2.ResSendGiftToCharacter.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def sellItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/sellItem',
            liqi__pb2.ReqSellItem.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCommonView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCommonView',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommonView.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def changeCommonView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/changeCommonView',
            liqi__pb2.ReqChangeCommonView.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def saveCommonViews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/saveCommonViews',
            liqi__pb2.ReqSaveCommonViews.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCommonViews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCommonViews',
            liqi__pb2.ReqCommonViews.SerializeToString,
            liqi__pb2.ResCommonViews.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchAllCommonViews(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchAllCommonViews',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResAllcommonViews.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def useCommonView(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/useCommonView',
            liqi__pb2.ReqUseCommonView.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def upgradeCharacter(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/upgradeCharacter',
            liqi__pb2.ReqUpgradeCharacter.SerializeToString,
            liqi__pb2.ResUpgradeCharacter.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def addFinishedEnding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/addFinishedEnding',
            liqi__pb2.ReqFinishedEnding.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveEndingReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveEndingReward',
            liqi__pb2.ReqFinishedEnding.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def gameMasterCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/gameMasterCommand',
            liqi__pb2.ReqGMCommand.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchShopInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchShopInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResShopInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def buyFromShop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/buyFromShop',
            liqi__pb2.ReqBuyFromShop.SerializeToString,
            liqi__pb2.ResBuyFromShop.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def buyFromZHP(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/buyFromZHP',
            liqi__pb2.ReqBuyFromZHP.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def refreshZHPShop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/refreshZHPShop',
            liqi__pb2.ReqReshZHPShop.SerializeToString,
            liqi__pb2.ResRefreshZHPShop.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchMonthTicketInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchMonthTicketInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResMonthTicketInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def payMonthTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/payMonthTicket',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResPayMonthTicket.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def exchangeCurrency(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/exchangeCurrency',
            liqi__pb2.ReqExchangeCurrency.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def exchangeChestStone(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/exchangeChestStone',
            liqi__pb2.ReqExchangeCurrency.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def exchangeDiamond(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/exchangeDiamond',
            liqi__pb2.ReqExchangeCurrency.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchServerSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchServerSettings',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResServerSettings.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchAccountSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchAccountSettings',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResAccountSettings.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateAccountSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/updateAccountSettings',
            liqi__pb2.ReqUpdateAccountSettings.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchModNicknameTime(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchModNicknameTime',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResModNicknameTime.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createWechatNativeOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createWechatNativeOrder',
            liqi__pb2.ReqCreateWechatNativeOrder.SerializeToString,
            liqi__pb2.ResCreateWechatNativeOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createWechatAppOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createWechatAppOrder',
            liqi__pb2.ReqCreateWechatAppOrder.SerializeToString,
            liqi__pb2.ResCreateWechatAppOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createAlipayOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createAlipayOrder',
            liqi__pb2.ReqCreateAlipayOrder.SerializeToString,
            liqi__pb2.ResCreateAlipayOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createAlipayScanOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createAlipayScanOrder',
            liqi__pb2.ReqCreateAlipayScanOrder.SerializeToString,
            liqi__pb2.ResCreateAlipayScanOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createAlipayAppOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createAlipayAppOrder',
            liqi__pb2.ReqCreateAlipayAppOrder.SerializeToString,
            liqi__pb2.ResCreateAlipayAppOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createJPCreditCardOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createJPCreditCardOrder',
            liqi__pb2.ReqCreateJPCreditCardOrder.SerializeToString,
            liqi__pb2.ResCreateJPCreditCardOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createJPPaypalOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createJPPaypalOrder',
            liqi__pb2.ReqCreateJPPaypalOrder.SerializeToString,
            liqi__pb2.ResCreateJPPaypalOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createJPAuOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createJPAuOrder',
            liqi__pb2.ReqCreateJPAuOrder.SerializeToString,
            liqi__pb2.ResCreateJPAuOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createJPDocomoOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createJPDocomoOrder',
            liqi__pb2.ReqCreateJPDocomoOrder.SerializeToString,
            liqi__pb2.ResCreateJPDocomoOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createJPWebMoneyOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createJPWebMoneyOrder',
            liqi__pb2.ReqCreateJPWebMoneyOrder.SerializeToString,
            liqi__pb2.ResCreateJPWebMoneyOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createJPSoftbankOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createJPSoftbankOrder',
            liqi__pb2.ReqCreateJPSoftbankOrder.SerializeToString,
            liqi__pb2.ResCreateJPSoftbankOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createJPPayPayOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createJPPayPayOrder',
            liqi__pb2.ReqCreateJPPayPayOrder.SerializeToString,
            liqi__pb2.ResCreateJPPayPayOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchJPCommonCreditCardOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchJPCommonCreditCardOrder',
            liqi__pb2.ReqFetchJPCommonCreditCardOrder.SerializeToString,
            liqi__pb2.ResFetchJPCommonCreditCardOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createJPGMOOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createJPGMOOrder',
            liqi__pb2.ReqCreateJPGMOOrder.SerializeToString,
            liqi__pb2.ResCreateJPGMOOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createENPaypalOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createENPaypalOrder',
            liqi__pb2.ReqCreateENPaypalOrder.SerializeToString,
            liqi__pb2.ResCreateENPaypalOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createENMasterCardOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createENMasterCardOrder',
            liqi__pb2.ReqCreateENMasterCardOrder.SerializeToString,
            liqi__pb2.ResCreateENMasterCardOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createENVisaOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createENVisaOrder',
            liqi__pb2.ReqCreateENVisaOrder.SerializeToString,
            liqi__pb2.ResCreateENVisaOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createENJCBOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createENJCBOrder',
            liqi__pb2.ReqCreateENJCBOrder.SerializeToString,
            liqi__pb2.ResCreateENJCBOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createENAlipayOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createENAlipayOrder',
            liqi__pb2.ReqCreateENAlipayOrder.SerializeToString,
            liqi__pb2.ResCreateENAlipayOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createKRPaypalOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createKRPaypalOrder',
            liqi__pb2.ReqCreateKRPaypalOrder.SerializeToString,
            liqi__pb2.ResCreateKRPaypalOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createKRMasterCardOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createKRMasterCardOrder',
            liqi__pb2.ReqCreateKRMasterCardOrder.SerializeToString,
            liqi__pb2.ResCreateKRMasterCardOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createKRVisaOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createKRVisaOrder',
            liqi__pb2.ReqCreateKRVisaOrder.SerializeToString,
            liqi__pb2.ResCreateKRVisaOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createKRJCBOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createKRJCBOrder',
            liqi__pb2.ReqCreateKRJCBOrder.SerializeToString,
            liqi__pb2.ResCreateKRJCBOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createKRAlipayOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createKRAlipayOrder',
            liqi__pb2.ReqCreateKRAlipayOrder.SerializeToString,
            liqi__pb2.ResCreateKRAlipayOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createDMMOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createDMMOrder',
            liqi__pb2.ReqCreateDMMOrder.SerializeToString,
            liqi__pb2.ResCreateDmmOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createIAPOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createIAPOrder',
            liqi__pb2.ReqCreateIAPOrder.SerializeToString,
            liqi__pb2.ResCreateIAPOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createSteamOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createSteamOrder',
            liqi__pb2.ReqCreateSteamOrder.SerializeToString,
            liqi__pb2.ResCreateSteamOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def verifySteamOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/verifySteamOrder',
            liqi__pb2.ReqVerifySteamOrder.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createMyCardAndroidOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createMyCardAndroidOrder',
            liqi__pb2.ReqCreateMyCardOrder.SerializeToString,
            liqi__pb2.ResCreateMyCardOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createMyCardWebOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createMyCardWebOrder',
            liqi__pb2.ReqCreateMyCardOrder.SerializeToString,
            liqi__pb2.ResCreateMyCardOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createPaypalOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createPaypalOrder',
            liqi__pb2.ReqCreatePaypalOrder.SerializeToString,
            liqi__pb2.ResCreatePaypalOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createXsollaOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createXsollaOrder',
            liqi__pb2.ReqCreateXsollaOrder.SerializeToString,
            liqi__pb2.ResCreateXsollaOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def verifyMyCardOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/verifyMyCardOrder',
            liqi__pb2.ReqVerifyMyCardOrder.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def verificationIAPOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/verificationIAPOrder',
            liqi__pb2.ReqVerificationIAPOrder.SerializeToString,
            liqi__pb2.ResVerificationIAPOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createYostarSDKOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createYostarSDKOrder',
            liqi__pb2.ReqCreateYostarOrder.SerializeToString,
            liqi__pb2.ResCreateYostarOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createBillingOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createBillingOrder',
            liqi__pb2.ReqCreateBillingOrder.SerializeToString,
            liqi__pb2.ResCreateBillingOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def solveGooglePlayOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/solveGooglePlayOrder',
            liqi__pb2.ReqSolveGooglePlayOrder.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def solveGooglePayOrderV3(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/solveGooglePayOrderV3',
            liqi__pb2.ReqSolveGooglePlayOrderV3.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deliverAA32Order(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/deliverAA32Order',
            liqi__pb2.ReqDeliverAA32Order.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchMisc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchMisc',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResMisc.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def modifySignature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/modifySignature',
            liqi__pb2.ReqModifySignature.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchIDCardInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchIDCardInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResIDCardInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateIDCardInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/updateIDCardInfo',
            liqi__pb2.ReqUpdateIDCardInfo.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchVipReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchVipReward',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResVipReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def gainVipReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/gainVipReward',
            liqi__pb2.ReqGainVipReward.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchRefundOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchRefundOrder',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFetchRefundOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCustomizedContestList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCustomizedContestList',
            liqi__pb2.ReqFetchCustomizedContestList.SerializeToString,
            liqi__pb2.ResFetchCustomizedContestList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCustomizedContestAuthInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCustomizedContestAuthInfo',
            liqi__pb2.ReqFetchCustomizedContestAuthInfo.SerializeToString,
            liqi__pb2.ResFetchCustomizedContestAuthInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def enterCustomizedContest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/enterCustomizedContest',
            liqi__pb2.ReqEnterCustomizedContest.SerializeToString,
            liqi__pb2.ResEnterCustomizedContest.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def leaveCustomizedContest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/leaveCustomizedContest',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCustomizedContestOnlineInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCustomizedContestOnlineInfo',
            liqi__pb2.ReqFetchCustomizedContestOnlineInfo.SerializeToString,
            liqi__pb2.ResFetchCustomizedContestOnlineInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCustomizedContestByContestId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCustomizedContestByContestId',
            liqi__pb2.ReqFetchCustomizedContestByContestId.SerializeToString,
            liqi__pb2.ResFetchCustomizedContestByContestId.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def signupCustomizedContest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/signupCustomizedContest',
            liqi__pb2.ReqSignupCustomizedContest.SerializeToString,
            liqi__pb2.ResSignupCustomizedContest.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def startCustomizedContest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/startCustomizedContest',
            liqi__pb2.ReqStartCustomizedContest.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def stopCustomizedContest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/stopCustomizedContest',
            liqi__pb2.ReqStopCustomizedContest.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def joinCustomizedContestChatRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/joinCustomizedContestChatRoom',
            liqi__pb2.ReqJoinCustomizedContestChatRoom.SerializeToString,
            liqi__pb2.ResJoinCustomizedContestChatRoom.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def leaveCustomizedContestChatRoom(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/leaveCustomizedContestChatRoom',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def sayChatMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/sayChatMessage',
            liqi__pb2.ReqSayChatMessage.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCustomizedContestGameRecords(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCustomizedContestGameRecords',
            liqi__pb2.ReqFetchCustomizedContestGameRecords.SerializeToString,
            liqi__pb2.ResFetchCustomizedContestGameRecords.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchCustomizedContestGameLiveList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchCustomizedContestGameLiveList',
            liqi__pb2.ReqFetchCustomizedContestGameLiveList.SerializeToString,
            liqi__pb2.ResFetchCustomizedContestGameLiveList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def followCustomizedContest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/followCustomizedContest',
            liqi__pb2.ReqTargetCustomizedContest.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def unfollowCustomizedContest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/unfollowCustomizedContest',
            liqi__pb2.ReqTargetCustomizedContest.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchActivityList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchActivityList',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResActivityList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchAccountActivityData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchAccountActivityData',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResAccountActivityData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def exchangeActivityItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/exchangeActivityItem',
            liqi__pb2.ReqExchangeActivityItem.SerializeToString,
            liqi__pb2.ResExchangeActivityItem.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def completeActivityTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/completeActivityTask',
            liqi__pb2.ReqCompleteActivityTask.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def completeActivityTaskBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/completeActivityTaskBatch',
            liqi__pb2.ReqCompleteActivityTaskBatch.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def completeActivityFlipTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/completeActivityFlipTask',
            liqi__pb2.ReqCompleteActivityTask.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def completePeriodActivityTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/completePeriodActivityTask',
            liqi__pb2.ReqCompleteActivityTask.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def completePeriodActivityTaskBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/completePeriodActivityTaskBatch',
            liqi__pb2.ReqCompletePeriodActivityTaskBatch.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def completeRandomActivityTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/completeRandomActivityTask',
            liqi__pb2.ReqCompleteActivityTask.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveActivityFlipTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveActivityFlipTask',
            liqi__pb2.ReqReceiveActivityFlipTask.SerializeToString,
            liqi__pb2.ResReceiveActivityFlipTask.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def completeSegmentTaskReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/completeSegmentTaskReward',
            liqi__pb2.ReqCompleteSegmentTaskReward.SerializeToString,
            liqi__pb2.ResCompleteSegmentTaskReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchActivityFlipInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchActivityFlipInfo',
            liqi__pb2.ReqFetchActivityFlipInfo.SerializeToString,
            liqi__pb2.ResFetchActivityFlipInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def gainAccumulatedPointActivityReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/gainAccumulatedPointActivityReward',
            liqi__pb2.ReqGainAccumulatedPointActivityReward.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def gainMultiPointActivityReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/gainMultiPointActivityReward',
            liqi__pb2.ReqGainMultiPointActivityReward.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchRankPointLeaderboard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchRankPointLeaderboard',
            liqi__pb2.ReqFetchRankPointLeaderboard.SerializeToString,
            liqi__pb2.ResFetchRankPointLeaderboard.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def gainRankPointReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/gainRankPointReward',
            liqi__pb2.ReqGainRankPointReward.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def richmanActivityNextMove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/richmanActivityNextMove',
            liqi__pb2.ReqRichmanNextMove.SerializeToString,
            liqi__pb2.ResRichmanNextMove.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def richmanAcitivitySpecialMove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/richmanAcitivitySpecialMove',
            liqi__pb2.ReqRichmanSpecialMove.SerializeToString,
            liqi__pb2.ResRichmanNextMove.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def richmanActivityChestInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/richmanActivityChestInfo',
            liqi__pb2.ReqRichmanChestInfo.SerializeToString,
            liqi__pb2.ResRichmanChestInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createGameObserveAuth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createGameObserveAuth',
            liqi__pb2.ReqCreateGameObserveAuth.SerializeToString,
            liqi__pb2.ResCreateGameObserveAuth.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def refreshGameObserveAuth(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/refreshGameObserveAuth',
            liqi__pb2.ReqRefreshGameObserveAuth.SerializeToString,
            liqi__pb2.ResRefreshGameObserveAuth.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchActivityBuff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchActivityBuff',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResActivityBuff.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def upgradeActivityBuff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/upgradeActivityBuff',
            liqi__pb2.ReqUpgradeActivityBuff.SerializeToString,
            liqi__pb2.ResActivityBuff.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def upgradeActivityLevel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/upgradeActivityLevel',
            liqi__pb2.ReqUpgradeActivityLevel.SerializeToString,
            liqi__pb2.ResUpgradeActivityLevel.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveUpgradeActivityReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveUpgradeActivityReward',
            liqi__pb2.ReqReceiveUpgradeActivityReward.SerializeToString,
            liqi__pb2.ResReceiveUpgradeActivityReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def upgradeChallenge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/upgradeChallenge',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResUpgradeChallenge.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def refreshChallenge(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/refreshChallenge',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResRefreshChallenge.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchChallengeInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchChallengeInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFetchChallengeInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def forceCompleteChallengeTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/forceCompleteChallengeTask',
            liqi__pb2.ReqForceCompleteChallengeTask.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchChallengeSeason(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchChallengeSeason',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResChallengeSeasonInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveChallengeRankReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveChallengeRankReward',
            liqi__pb2.ReqReceiveChallengeRankReward.SerializeToString,
            liqi__pb2.ResReceiveChallengeRankReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchABMatchInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchABMatchInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFetchABMatch.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def buyInABMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/buyInABMatch',
            liqi__pb2.ReqBuyInABMatch.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveABMatchReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveABMatchReward',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def quitABMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/quitABMatch',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def startUnifiedMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/startUnifiedMatch',
            liqi__pb2.ReqStartUnifiedMatch.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def cancelUnifiedMatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/cancelUnifiedMatch',
            liqi__pb2.ReqCancelUnifiedMatch.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchGamePointRank(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchGamePointRank',
            liqi__pb2.ReqGamePointRank.SerializeToString,
            liqi__pb2.ResGamePointRank.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchSelfGamePointRank(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchSelfGamePointRank',
            liqi__pb2.ReqGamePointRank.SerializeToString,
            liqi__pb2.ResFetchSelfGamePointRank.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def readSNS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/readSNS',
            liqi__pb2.ReqReadSNS.SerializeToString,
            liqi__pb2.ResReadSNS.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def replySNS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/replySNS',
            liqi__pb2.ReqReplySNS.SerializeToString,
            liqi__pb2.ResReplySNS.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def likeSNS(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/likeSNS',
            liqi__pb2.ReqLikeSNS.SerializeToString,
            liqi__pb2.ResLikeSNS.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def digMine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/digMine',
            liqi__pb2.ReqDigMine.SerializeToString,
            liqi__pb2.ResDigMine.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchLastPrivacy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchLastPrivacy',
            liqi__pb2.ReqFetchLastPrivacy.SerializeToString,
            liqi__pb2.ResFetchLastPrivacy.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def checkPrivacy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/checkPrivacy',
            liqi__pb2.ReqCheckPrivacy.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def responseCaptcha(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/responseCaptcha',
            liqi__pb2.ReqResponseCaptcha.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchRPGBattleHistory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchRPGBattleHistory',
            liqi__pb2.ReqFetchRPGBattleHistory.SerializeToString,
            liqi__pb2.ResFetchRPGBattleHistory.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchRPGBattleHistoryV2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchRPGBattleHistoryV2',
            liqi__pb2.ReqFetchRPGBattleHistory.SerializeToString,
            liqi__pb2.ResFetchRPGBattleHistoryV2.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveRPGRewards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveRPGRewards',
            liqi__pb2.ReqReceiveRPGRewards.SerializeToString,
            liqi__pb2.ResReceiveRPGRewards.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveRPGReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveRPGReward',
            liqi__pb2.ReqReceiveRPGReward.SerializeToString,
            liqi__pb2.ResReceiveRPGRewards.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def buyArenaTicket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/buyArenaTicket',
            liqi__pb2.ReqBuyArenaTicket.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def enterArena(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/enterArena',
            liqi__pb2.ReqEnterArena.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveArenaReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveArenaReward',
            liqi__pb2.ReqArenaReward.SerializeToString,
            liqi__pb2.ResArenaReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchOBToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchOBToken',
            liqi__pb2.ReqFetchOBToken.SerializeToString,
            liqi__pb2.ResFetchOBToken.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveCharacterRewards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveCharacterRewards',
            liqi__pb2.ReqReceiveCharacterRewards.SerializeToString,
            liqi__pb2.ResReceiveCharacterRewards.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def feedActivityFeed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/feedActivityFeed',
            liqi__pb2.ReqFeedActivityFeed.SerializeToString,
            liqi__pb2.ResFeedActivityFeed.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def sendActivityGiftToFriend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/sendActivityGiftToFriend',
            liqi__pb2.ReqSendActivityGiftToFriend.SerializeToString,
            liqi__pb2.ResSendActivityGiftToFriend.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveActivityGift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveActivityGift',
            liqi__pb2.ReqReceiveActivityGift.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveAllActivityGift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveAllActivityGift',
            liqi__pb2.ReqReceiveAllActivityGift.SerializeToString,
            liqi__pb2.ResReceiveAllActivityGift.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchFriendGiftActivityData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchFriendGiftActivityData',
            liqi__pb2.ReqFetchFriendGiftActivityData.SerializeToString,
            liqi__pb2.ResFetchFriendGiftActivityData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def openPreChestItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/openPreChestItem',
            liqi__pb2.ReqOpenPreChestItem.SerializeToString,
            liqi__pb2.ResOpenPreChestItem.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchVoteActivity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchVoteActivity',
            liqi__pb2.ReqFetchVoteActivity.SerializeToString,
            liqi__pb2.ResFetchVoteActivity.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def voteActivity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/voteActivity',
            liqi__pb2.ReqVoteActivity.SerializeToString,
            liqi__pb2.ResVoteActivity.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def unlockActivitySpot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/unlockActivitySpot',
            liqi__pb2.ReqUnlockActivitySpot.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def unlockActivitySpotEnding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/unlockActivitySpotEnding',
            liqi__pb2.ReqUnlockActivitySpotEnding.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveActivitySpotReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveActivitySpotReward',
            liqi__pb2.ReqReceiveActivitySpotReward.SerializeToString,
            liqi__pb2.ResReceiveActivitySpotReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def deleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/deleteAccount',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResDeleteAccount.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def cancelDeleteAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/cancelDeleteAccount',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def logReport(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/logReport',
            liqi__pb2.ReqLogReport.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def bindOauth2(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/bindOauth2',
            liqi__pb2.ReqBindOauth2.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchOauth2Info(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchOauth2Info',
            liqi__pb2.ReqFetchOauth2.SerializeToString,
            liqi__pb2.ResFetchOauth2.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setLoadingImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/setLoadingImage',
            liqi__pb2.ReqSetLoadingImage.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchShopInterval(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchShopInterval',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFetchShopInterval.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchActivityInterval(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchActivityInterval',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFetchActivityInterval.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchRecentFriend(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchRecentFriend',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResFetchrecentFriend.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def openGacha(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/openGacha',
            liqi__pb2.ReqOpenGacha.SerializeToString,
            liqi__pb2.ResOpenGacha.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def taskRequest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/taskRequest',
            liqi__pb2.ReqTaskRequest.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def simulationActivityTrain(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/simulationActivityTrain',
            liqi__pb2.ReqSimulationActivityTrain.SerializeToString,
            liqi__pb2.ResSimulationActivityTrain.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchSimulationGameRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchSimulationGameRecord',
            liqi__pb2.ReqFetchSimulationGameRecord.SerializeToString,
            liqi__pb2.ResFetchSimulationGameRecord.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def startSimulationActivityGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/startSimulationActivityGame',
            liqi__pb2.ReqStartSimulationActivityGame.SerializeToString,
            liqi__pb2.ResStartSimulationActivityGame.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchSimulationGameRank(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchSimulationGameRank',
            liqi__pb2.ReqFetchSimulationGameRank.SerializeToString,
            liqi__pb2.ResFetchSimulationGameRank.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def generateCombiningCraft(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/generateCombiningCraft',
            liqi__pb2.ReqGenerateCombiningCraft.SerializeToString,
            liqi__pb2.ResGenerateCombiningCraft.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def moveCombiningCraft(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/moveCombiningCraft',
            liqi__pb2.ReqMoveCombiningCraft.SerializeToString,
            liqi__pb2.ResMoveCombiningCraft.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def combiningRecycleCraft(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/combiningRecycleCraft',
            liqi__pb2.ReqCombiningRecycleCraft.SerializeToString,
            liqi__pb2.ResCombiningRecycleCraft.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def recoverCombiningRecycle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/recoverCombiningRecycle',
            liqi__pb2.ReqRecoverCombiningRecycle.SerializeToString,
            liqi__pb2.ResRecoverCombiningRecycle.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def finishCombiningOrder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/finishCombiningOrder',
            liqi__pb2.ReqFinishCombiningOrder.SerializeToString,
            liqi__pb2.ResFinishCombiningOrder.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def upgradeVillageBuilding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/upgradeVillageBuilding',
            liqi__pb2.ReqUpgradeVillageBuilding.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveVillageBuildingReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveVillageBuildingReward',
            liqi__pb2.ReqReceiveVillageBuildingReward.SerializeToString,
            liqi__pb2.ResReceiveVillageBuildingReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def startVillageTrip(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/startVillageTrip',
            liqi__pb2.ReqStartVillageTrip.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def receiveVillageTripReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/receiveVillageTripReward',
            liqi__pb2.ReqReceiveVillageTripReward.SerializeToString,
            liqi__pb2.ResReceiveVillageTripReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def completeVillageTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/completeVillageTask',
            liqi__pb2.ReqCompleteVillageTask.SerializeToString,
            liqi__pb2.ResCompleteVillageTask.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getFriendVillageData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/getFriendVillageData',
            liqi__pb2.ReqGetFriendVillageData.SerializeToString,
            liqi__pb2.ResGetFriendVillageData.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def setVillageWorker(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/setVillageWorker',
            liqi__pb2.ReqSetVillageWorker.SerializeToString,
            liqi__pb2.ResSetVillageWorker.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def nextRoundVillage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/nextRoundVillage',
            liqi__pb2.ReqNextRoundVillage.SerializeToString,
            liqi__pb2.ResNextRoundVillage.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def resolveFestivalActivityProposal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/resolveFestivalActivityProposal',
            liqi__pb2.ReqResolveFestivalActivityProposal.SerializeToString,
            liqi__pb2.ResResolveFestivalActivityProposal.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def resolveFestivalActivityEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/resolveFestivalActivityEvent',
            liqi__pb2.ReqResolveFestivalActivityEvent.SerializeToString,
            liqi__pb2.ResResolveFestivalActivityEvent.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def buyFestivalProposal(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/buyFestivalProposal',
            liqi__pb2.ReqBuyFestivalProposal.SerializeToString,
            liqi__pb2.ResBuyFestivalProposal.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def islandActivityMove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/islandActivityMove',
            liqi__pb2.ReqIslandActivityMove.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def islandActivityBuy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/islandActivityBuy',
            liqi__pb2.ReqIslandActivityBuy.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def islandActivitySell(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/islandActivitySell',
            liqi__pb2.ReqIslandActivitySell.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def islandActivityTidyBag(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/islandActivityTidyBag',
            liqi__pb2.ReqIslandActivityTidyBag.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def islandActivityUnlockBagGrid(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/islandActivityUnlockBagGrid',
            liqi__pb2.ReqIslandActivityUnlockBagGrid.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createCustomizedContest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createCustomizedContest',
            liqi__pb2.ReqCreateCustomizedContest.SerializeToString,
            liqi__pb2.ResCreateCustomizedContest.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchManagerCustomizedContestList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchManagerCustomizedContestList',
            liqi__pb2.ReqFetchmanagerCustomizedContestList.SerializeToString,
            liqi__pb2.ResFetchManagerCustomizedContestList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchManagerCustomizedContest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchManagerCustomizedContest',
            liqi__pb2.ReqFetchManagerCustomizedContest.SerializeToString,
            liqi__pb2.ResFetchManagerCustomizedContest.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def updateManagerCustomizedContest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/updateManagerCustomizedContest',
            liqi__pb2.ReqUpdateManagerCustomizedContest.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchContestPlayerRank(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchContestPlayerRank',
            liqi__pb2.ReqFetchContestPlayerRank.SerializeToString,
            liqi__pb2.ResFetchContestPlayerRank.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchReadyPlayerList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchReadyPlayerList',
            liqi__pb2.ReqFetchReadyPlayerList.SerializeToString,
            liqi__pb2.ResFetchReadyPlayerList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createGamePlan(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/createGamePlan',
            liqi__pb2.ReqCreateGamePlan.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def generateContestManagerLoginCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/generateContestManagerLoginCode',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResGenerateContestManagerLoginCode.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivityStartGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivityStartGame',
            liqi__pb2.ReqAmuletActivityStartGame.SerializeToString,
            liqi__pb2.ResAmuletActivityStartGame.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivityOperate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivityOperate',
            liqi__pb2.ReqAmuletActivityOperate.SerializeToString,
            liqi__pb2.ResAmuletActivityOperate.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivityChangeHands(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivityChangeHands',
            liqi__pb2.ReqAmuletActivityChangeHands.SerializeToString,
            liqi__pb2.ResAmuletActivityChangeHands.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivityUpgrade(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivityUpgrade',
            liqi__pb2.ReqAmuletActivityUpgrade.SerializeToString,
            liqi__pb2.ResAmuletActivityUpgrade.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivityBuy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivityBuy',
            liqi__pb2.ReqAmuletActivityBuy.SerializeToString,
            liqi__pb2.ResAmuletActivityBuy.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivitySelectPack(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivitySelectPack',
            liqi__pb2.ReqAmuletActivitySelectPack.SerializeToString,
            liqi__pb2.ResAmuletActivitySelectPack.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivitySellEffect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivitySellEffect',
            liqi__pb2.ReqAmuletActivitySellEffect.SerializeToString,
            liqi__pb2.ResAmuletActivitySellEffect.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivityEffectSort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivityEffectSort',
            liqi__pb2.ReqAmuletActivityEffectSort.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivityGiveup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivityGiveup',
            liqi__pb2.ReqAmuletActivityGiveup.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivityRefreshShop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivityRefreshShop',
            liqi__pb2.ReqAmuletActivityRefreshShop.SerializeToString,
            liqi__pb2.ResAmuletActivityRefreshShop.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivitySelectFreeEffect(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivitySelectFreeEffect',
            liqi__pb2.ReqAmuletActivitySelectFreeEffect.SerializeToString,
            liqi__pb2.ResAmuletActivitySelectFreeEffect.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivityUpgradeShopBuff(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivityUpgradeShopBuff',
            liqi__pb2.ReqAmuletActivityUpgradeShopBuff.SerializeToString,
            liqi__pb2.ResAmuletActivityUpgradeShopBuff.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivityEndShopping(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivityEndShopping',
            liqi__pb2.ReqAmuletActivityEndShopping.SerializeToString,
            liqi__pb2.ResAmuletActivityEndShopping.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivitySetSkillLevel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivitySetSkillLevel',
            liqi__pb2.ReqAmuletActivitySetSkillLevel.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def amuletActivityMaintainInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/amuletActivityMaintainInfo',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResAmuletActivityMaintainInfo.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def storyActivityUnlock(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/storyActivityUnlock',
            liqi__pb2.ReqStoryActivityUnlock.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def storyActivityUnlockEnding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/storyActivityUnlockEnding',
            liqi__pb2.ReqStoryActivityUnlockEnding.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def storyActivityReceiveEndingReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/storyActivityReceiveEndingReward',
            liqi__pb2.ReqStoryActivityReceiveEndingReward.SerializeToString,
            liqi__pb2.ResStoryReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def storyActivityReceiveFinishReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/storyActivityReceiveFinishReward',
            liqi__pb2.ReqStoryActivityReceiveFinishReward.SerializeToString,
            liqi__pb2.ResStoryReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def storyActivityReceiveAllFinishReward(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/storyActivityReceiveAllFinishReward',
            liqi__pb2.ReqStoryActivityReceiveAllFinishReward.SerializeToString,
            liqi__pb2.ResStoryReward.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def storyActivityUnlockEndingAndReceive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/storyActivityUnlockEndingAndReceive',
            liqi__pb2.ReqStoryActivityUnlockEndingAndReceive.SerializeToString,
            liqi__pb2.ResStoryActivityUnlockEndingAndReceive.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchActivityRank(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.Lobby/fetchActivityRank',
            liqi__pb2.ReqFetchActivityRank.SerializeToString,
            liqi__pb2.ResFetchActivityRank.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class FastTestStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.authGame = channel.unary_unary(
                '/lq.FastTest/authGame',
                request_serializer=liqi__pb2.ReqAuthGame.SerializeToString,
                response_deserializer=liqi__pb2.ResAuthGame.FromString,
                _registered_method=True)
        self.enterGame = channel.unary_unary(
                '/lq.FastTest/enterGame',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResEnterGame.FromString,
                _registered_method=True)
        self.syncGame = channel.unary_unary(
                '/lq.FastTest/syncGame',
                request_serializer=liqi__pb2.ReqSyncGame.SerializeToString,
                response_deserializer=liqi__pb2.ResSyncGame.FromString,
                _registered_method=True)
        self.finishSyncGame = channel.unary_unary(
                '/lq.FastTest/finishSyncGame',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.terminateGame = channel.unary_unary(
                '/lq.FastTest/terminateGame',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.inputOperation = channel.unary_unary(
                '/lq.FastTest/inputOperation',
                request_serializer=liqi__pb2.ReqSelfOperation.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.inputChiPengGang = channel.unary_unary(
                '/lq.FastTest/inputChiPengGang',
                request_serializer=liqi__pb2.ReqChiPengGang.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.confirmNewRound = channel.unary_unary(
                '/lq.FastTest/confirmNewRound',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.broadcastInGame = channel.unary_unary(
                '/lq.FastTest/broadcastInGame',
                request_serializer=liqi__pb2.ReqBroadcastInGame.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.inputGameGMCommand = channel.unary_unary(
                '/lq.FastTest/inputGameGMCommand',
                request_serializer=liqi__pb2.ReqGMCommandInGaming.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.fetchGamePlayerState = channel.unary_unary(
                '/lq.FastTest/fetchGamePlayerState',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResGamePlayerState.FromString,
                _registered_method=True)
        self.checkNetworkDelay = channel.unary_unary(
                '/lq.FastTest/checkNetworkDelay',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.clearLeaving = channel.unary_unary(
                '/lq.FastTest/clearLeaving',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.voteGameEnd = channel.unary_unary(
                '/lq.FastTest/voteGameEnd',
                request_serializer=liqi__pb2.ReqVoteGameEnd.SerializeToString,
                response_deserializer=liqi__pb2.ResGameEndVote.FromString,
                _registered_method=True)
        self.authObserve = channel.unary_unary(
                '/lq.FastTest/authObserve',
                request_serializer=liqi__pb2.ReqAuthObserve.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)
        self.startObserve = channel.unary_unary(
                '/lq.FastTest/startObserve',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResStartObserve.FromString,
                _registered_method=True)
        self.stopObserve = channel.unary_unary(
                '/lq.FastTest/stopObserve',
                request_serializer=liqi__pb2.ReqCommon.SerializeToString,
                response_deserializer=liqi__pb2.ResCommon.FromString,
                _registered_method=True)


class FastTestServicer(object):
    """Missing associated documentation comment in .proto file."""

    def authGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def enterGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def syncGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def finishSyncGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def terminateGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def inputOperation(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def inputChiPengGang(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def confirmNewRound(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def broadcastInGame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def inputGameGMCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def fetchGamePlayerState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def checkNetworkDelay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def clearLeaving(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def voteGameEnd(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def authObserve(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def startObserve(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def stopObserve(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FastTestServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'authGame': grpc.unary_unary_rpc_method_handler(
                    servicer.authGame,
                    request_deserializer=liqi__pb2.ReqAuthGame.FromString,
                    response_serializer=liqi__pb2.ResAuthGame.SerializeToString,
            ),
            'enterGame': grpc.unary_unary_rpc_method_handler(
                    servicer.enterGame,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResEnterGame.SerializeToString,
            ),
            'syncGame': grpc.unary_unary_rpc_method_handler(
                    servicer.syncGame,
                    request_deserializer=liqi__pb2.ReqSyncGame.FromString,
                    response_serializer=liqi__pb2.ResSyncGame.SerializeToString,
            ),
            'finishSyncGame': grpc.unary_unary_rpc_method_handler(
                    servicer.finishSyncGame,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'terminateGame': grpc.unary_unary_rpc_method_handler(
                    servicer.terminateGame,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'inputOperation': grpc.unary_unary_rpc_method_handler(
                    servicer.inputOperation,
                    request_deserializer=liqi__pb2.ReqSelfOperation.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'inputChiPengGang': grpc.unary_unary_rpc_method_handler(
                    servicer.inputChiPengGang,
                    request_deserializer=liqi__pb2.ReqChiPengGang.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'confirmNewRound': grpc.unary_unary_rpc_method_handler(
                    servicer.confirmNewRound,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'broadcastInGame': grpc.unary_unary_rpc_method_handler(
                    servicer.broadcastInGame,
                    request_deserializer=liqi__pb2.ReqBroadcastInGame.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'inputGameGMCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.inputGameGMCommand,
                    request_deserializer=liqi__pb2.ReqGMCommandInGaming.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'fetchGamePlayerState': grpc.unary_unary_rpc_method_handler(
                    servicer.fetchGamePlayerState,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResGamePlayerState.SerializeToString,
            ),
            'checkNetworkDelay': grpc.unary_unary_rpc_method_handler(
                    servicer.checkNetworkDelay,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'clearLeaving': grpc.unary_unary_rpc_method_handler(
                    servicer.clearLeaving,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'voteGameEnd': grpc.unary_unary_rpc_method_handler(
                    servicer.voteGameEnd,
                    request_deserializer=liqi__pb2.ReqVoteGameEnd.FromString,
                    response_serializer=liqi__pb2.ResGameEndVote.SerializeToString,
            ),
            'authObserve': grpc.unary_unary_rpc_method_handler(
                    servicer.authObserve,
                    request_deserializer=liqi__pb2.ReqAuthObserve.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
            'startObserve': grpc.unary_unary_rpc_method_handler(
                    servicer.startObserve,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResStartObserve.SerializeToString,
            ),
            'stopObserve': grpc.unary_unary_rpc_method_handler(
                    servicer.stopObserve,
                    request_deserializer=liqi__pb2.ReqCommon.FromString,
                    response_serializer=liqi__pb2.ResCommon.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lq.FastTest', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('lq.FastTest', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class FastTest(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def authGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/authGame',
            liqi__pb2.ReqAuthGame.SerializeToString,
            liqi__pb2.ResAuthGame.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def enterGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/enterGame',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResEnterGame.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def syncGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/syncGame',
            liqi__pb2.ReqSyncGame.SerializeToString,
            liqi__pb2.ResSyncGame.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def finishSyncGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/finishSyncGame',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def terminateGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/terminateGame',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def inputOperation(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/inputOperation',
            liqi__pb2.ReqSelfOperation.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def inputChiPengGang(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/inputChiPengGang',
            liqi__pb2.ReqChiPengGang.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def confirmNewRound(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/confirmNewRound',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def broadcastInGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/broadcastInGame',
            liqi__pb2.ReqBroadcastInGame.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def inputGameGMCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/inputGameGMCommand',
            liqi__pb2.ReqGMCommandInGaming.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def fetchGamePlayerState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/fetchGamePlayerState',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResGamePlayerState.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def checkNetworkDelay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/checkNetworkDelay',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def clearLeaving(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/clearLeaving',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def voteGameEnd(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/voteGameEnd',
            liqi__pb2.ReqVoteGameEnd.SerializeToString,
            liqi__pb2.ResGameEndVote.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def authObserve(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/authObserve',
            liqi__pb2.ReqAuthObserve.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def startObserve(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/startObserve',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResStartObserve.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def stopObserve(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lq.FastTest/stopObserve',
            liqi__pb2.ReqCommon.SerializeToString,
            liqi__pb2.ResCommon.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
